{
	"id": "bc5af750d92d4b034cf07a83ae75b58d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/1_KipuBankV2.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.26;\n\n/**\n * @title KipuBankV2\n * @author lean98av\n * @notice Contrato bancario educativo: bóveda multi-token con control de acceso y oráculo Chainlink.\n * @dev Soporta ETH y ERC20s, con límites globales y por transacción. \n */\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\n\ncontract KipuBankV2 is AccessControl, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    /*////////////////////////////////////////////////////\n                        ROLES\n    ////////////////////////////////////////////////////*/\n    bytes32 public constant ADMIN_ROLE = DEFAULT_ADMIN_ROLE;\n\n    /*////////////////////////////////////////////////////\n                        TIPOS\n    ////////////////////////////////////////////////////*/\n    enum TokenState { Unsupported, Supported }\n\n    struct Account {\n        uint256 balance;   /// @notice Saldo total de ETH de la cuenta\n        string name;       /// @notice Nombre del titular\n        string email;      /// @notice Email del titular\n        bool exists;       /// @notice Indica si la cuenta fue creada\n    }\n\n    struct TokenData {\n        TokenState state;  /// @notice Estado del token (soportado o no)\n        uint8 decimals;    /// @notice Decimales del token\n        address priceFeed; /// @notice Oráculo Chainlink para este token (USD)\n    }\n\n    /*////////////////////////////////////////////////////\n                        CONSTANTES E INMUTABLES\n    ////////////////////////////////////////////////////*/\n    uint256 public constant USD_FEED_DECIMALS = 1e8;       // Decimales de los price feeds\n    uint256 public constant MAX_WITHDRAW_AMOUNT = 0.1 ether; // Límite por retiro (ETH)\n    address public constant NATIVE_TOKEN = address(0);     // Representa ETH\n\n    uint256 public immutable i_bankCap;                     // Cap global de depósitos\n    AggregatorV3Interface public immutable i_ethPriceFeed; // Oráculo ETH/USD\n\n    /*////////////////////////////////////////////////////\n                        ESTADO\n    ////////////////////////////////////////////////////*/\n    mapping(address => Account) private accounts;                     // usuario → Account\n    mapping(address => mapping(address => uint256)) private balances; // usuario → token → balance\n    mapping(address => TokenData) private tokenCatalog;               // token → TokenData\n\n    uint256 private s_depositCounter;\n    uint256 private s_withdrawCounter;\n    uint256 private s_totalBankBalance;\n\n    /*////////////////////////////////////////////////////\n                        EVENTOS\n    ////////////////////////////////////////////////////*/\n    event Bank_Deposit(address indexed user, address indexed token, uint256 amount);\n    event Bank_Withdraw(address indexed user, address indexed token, uint256 amount);\n    event TokenUpdated(address indexed token, TokenState state);\n\n    /*////////////////////////////////////////////////////\n                        ERRORES\n    ////////////////////////////////////////////////////*/\n    /// @notice Se lanza si el usuario intenta crear una cuenta que ya existe\n    error Bank_AccountAlreadyExists();\n\n    /// @notice Se lanza si se opera con una cuenta inexistente\n    error Bank_AccountNotExists();\n\n    /// @notice Se lanza si el depósito excede el límite global\n    error Bank_ExceedBankCap();\n\n    /// @notice Se lanza si se intenta retirar más que el límite por transacción\n    /// @param limit Límite máximo permitido\n    /// @param requested Monto solicitado\n    error Bank_ExceedWithdrawAmount(uint256 limit, uint256 requested);\n\n    /// @notice Se lanza si los fondos disponibles son insuficientes\n    /// @param available Saldo disponible\n    /// @param requested Monto solicitado\n    error Bank_InsufficientFunds(uint256 available, uint256 requested);\n\n    /// @notice Se lanza cuando el depósito es inválido (ej. cero)\n    error Bank_InvalidDeposit();\n\n    /// @notice Se lanza si la transferencia de ETH falla\n    error Bank_TransferError();\n\n    /// @notice Se lanza si el token no es soportado\n    error Bank_TokenNotSupported();\n\n    /*////////////////////////////////////////////////////\n                        CONSTRUCTOR\n    ////////////////////////////////////////////////////*/\n    /// @param ethPriceFeedAddress Dirección del oráculo ETH/USD\n    /// @param bankCap Límite global del banco (USD-feed decimales)\n    constructor(address ethPriceFeedAddress, uint256 bankCap) {\n        _grantRole(ADMIN_ROLE, msg.sender);\n        i_ethPriceFeed = AggregatorV3Interface(ethPriceFeedAddress);\n        i_bankCap = bankCap;\n    }\n\n    /*////////////////////////////////////////////////////\n                    GESTIÓN DE TOKENS\n    ////////////////////////////////////////////////////*/\n    /// @notice Agrega o actualiza un token soportado\n    function setToken(\n        address token,\n        uint8 decimals,\n        address priceFeed,\n        bool supported\n    ) external onlyRole(ADMIN_ROLE) {\n        tokenCatalog[token] = TokenData({\n            state: supported ? TokenState.Supported : TokenState.Unsupported,\n            decimals: decimals,\n            priceFeed: priceFeed\n        });\n        emit TokenUpdated(token, tokenCatalog[token].state);\n    }\n\n    /*////////////////////////////////////////////////////\n                    CREAR CUENTA / DEPÓSITO\n    ////////////////////////////////////////////////////*/\n    /// @notice Crea cuenta nueva y opcionalmente deposita ETH\n    /// @param email Email del usuario\n    /// @param name Nombre del usuario\n    function createAccount(string memory email, string memory name) external payable {\n        if (accounts[msg.sender].exists) revert Bank_AccountAlreadyExists();\n        if (s_totalBankBalance + msg.value > i_bankCap) revert Bank_ExceedBankCap();\n\n        accounts[msg.sender] = Account({\n            balance: 0,\n            email: email,\n            name: name,\n            exists: true\n        });\n\n        if (msg.value > 0) {\n            balances[msg.sender][NATIVE_TOKEN] += msg.value;\n            s_totalBankBalance += msg.value;\n            s_depositCounter++;\n            emit Bank_Deposit(msg.sender, NATIVE_TOKEN, msg.value);\n        }\n    }\n\n    /// @notice Deposita ETH en la bóveda del usuario\n    function deposit() external payable {\n        if (!accounts[msg.sender].exists) revert Bank_AccountNotExists();\n        if (msg.value == 0) revert Bank_InvalidDeposit();\n        if (s_totalBankBalance + msg.value > i_bankCap) revert Bank_ExceedBankCap();\n\n        balances[msg.sender][NATIVE_TOKEN] += msg.value;\n        s_totalBankBalance += msg.value;\n        s_depositCounter++;\n        emit Bank_Deposit(msg.sender, NATIVE_TOKEN, msg.value);\n    }\n\n    /// @notice Deposita tokens ERC20 soportados\n    function depositToken(address token, uint256 amount) external {\n        if (!accounts[msg.sender].exists) revert Bank_AccountNotExists();\n        TokenData memory td = tokenCatalog[token];\n        if (td.state != TokenState.Supported) revert Bank_TokenNotSupported();\n        if (amount == 0) revert Bank_InvalidDeposit();\n\n        balances[msg.sender][token] += amount;\n        s_depositCounter++;\n        IERC20(token).safeTransferFrom(msg.sender, address(this), amount);\n        emit Bank_Deposit(msg.sender, token, amount);\n    }\n\n    /*////////////////////////////////////////////////////\n                        RETIROS\n    ////////////////////////////////////////////////////*/\n    /// @notice Retira ETH respetando límite por transacción\n    function withdraw(uint256 amount) external nonReentrant {\n        if (!accounts[msg.sender].exists) revert Bank_AccountNotExists();\n        if (amount > MAX_WITHDRAW_AMOUNT) revert Bank_ExceedWithdrawAmount(MAX_WITHDRAW_AMOUNT, amount);\n        uint256 userBalance = balances[msg.sender][NATIVE_TOKEN];\n        if (userBalance < amount) revert Bank_InsufficientFunds(userBalance, amount);\n\n        balances[msg.sender][NATIVE_TOKEN] -= amount;\n        s_totalBankBalance -= amount;\n        s_withdrawCounter++;\n\n        (bool success,) = payable(msg.sender).call{value: amount}(\"\");\n        if (!success) revert Bank_TransferError();\n        emit Bank_Withdraw(msg.sender, NATIVE_TOKEN, amount);\n    }\n\n    /// @notice Retira tokens ERC20 respetando límites\n    function withdrawToken(address token, uint256 amount) external nonReentrant {\n        if (!accounts[msg.sender].exists) revert Bank_AccountNotExists();\n        TokenData memory td = tokenCatalog[token];\n        if (td.state != TokenState.Supported) revert Bank_TokenNotSupported();\n        if (amount > MAX_WITHDRAW_AMOUNT) revert Bank_ExceedWithdrawAmount(MAX_WITHDRAW_AMOUNT, amount);\n\n        uint256 userBalance = balances[msg.sender][token];\n        if (userBalance < amount) revert Bank_InsufficientFunds(userBalance, amount);\n\n        balances[msg.sender][token] -= amount;\n        s_withdrawCounter++;\n        IERC20(token).safeTransfer(msg.sender, amount);\n        emit Bank_Withdraw(msg.sender, token, amount);\n    }\n\n    /*////////////////////////////////////////////////////\n                        UTILIDADES / VISTAS\n    ////////////////////////////////////////////////////*/\n    /// @notice Devuelve balance de un usuario para un token\n    function getBalance(address user, address token) external view returns(uint256) {\n        if (!accounts[user].exists) revert Bank_AccountNotExists();\n        return balances[user][token];\n    }\n\n    /// @notice Devuelve precio ETH/USD desde Chainlink\n    function getEthPriceInUsd() public view returns(uint256) {\n        (, int256 price,,,) = i_ethPriceFeed.latestRoundData();\n        return uint256(price);\n    }\n\n    /// @notice Convierte wei a USD usando el oráculo\n    function convertWeiToUsd(uint256 weiAmount) external view returns(uint256) {\n        uint256 price = getEthPriceInUsd();\n        return (weiAmount * price) / 1e18;\n    }\n\n    /// @notice Devuelve el número total de depósitos realizados\n    function getDepositCount() external view returns(uint256) {\n        return s_depositCounter;\n    }\n\n    /// @notice Devuelve el número total de retiros realizados\n    function getWithdrawCount() external view returns(uint256) {\n        return s_withdrawCounter;\n    }\n}\n"
			},
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorV3Interface {\n  function decimals() external view returns (uint8);\n\n  function description() external view returns (string memory);\n\n  function version() external view returns (uint256);\n\n  function getRoundData(\n    uint80 _roundId\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n\n  function latestRoundData()\n    external\n    view\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"./IAccessControl.sol\";\nimport {Context} from \"../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 role => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        return _roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (!hasRole(role, account)) {\n            _roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        if (hasRole(role, account)) {\n            _roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC1363.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /// @inheritdoc IERC165\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (access/IAccessControl.sol)\n\npragma solidity >=0.8.4;\n\n/**\n * @dev External interface of AccessControl declared to support ERC-165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted to signal this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n     * Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (utils/introspection/IERC165.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC165.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/IERC20.sol)\n\npragma solidity >=0.4.16;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"AggregatorV3Interface": {
					"abi": [
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "description",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint80",
									"name": "_roundId",
									"type": "uint80"
								}
							],
							"name": "getRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "latestRoundData",
							"outputs": [
								{
									"internalType": "uint80",
									"name": "roundId",
									"type": "uint80"
								},
								{
									"internalType": "int256",
									"name": "answer",
									"type": "int256"
								},
								{
									"internalType": "uint256",
									"name": "startedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "updatedAt",
									"type": "uint256"
								},
								{
									"internalType": "uint80",
									"name": "answeredInRound",
									"type": "uint80"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "version",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"decimals()": "313ce567",
							"description()": "7284e416",
							"getRoundData(uint80)": "9a6fc8f5",
							"latestRoundData()": "feaf968c",
							"version()": "54fd4d50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)68_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)68_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)68_storage"
							},
							"t_struct(RoleData)68_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 65,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 67,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC-165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC-165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 526,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 COINBASE OR SLOAD XOR 0xAC TLOAD 0x4B 0x27 PUSH15 0xC6B41361D0EB5836A7EEBC1C6D19F0 0xD DUP6 OR 0xE1 SDIV 0xF PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB1 COINBASE OR SLOAD XOR 0xAC TLOAD 0x4B 0x27 PUSH15 0xC6B41361D0EB5836A7EEBC1C6D19F0 0xD DUP6 OR 0xE1 SDIV 0xF PUSH7 0x64736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "698:9376:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b141175418ac5c4b276ec6b41361d0eb5836a7eebc1c6d19f00d8517e1050f6664736f6c634300081a0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/1_KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/1_KipuBankV2.sol": {
				"KipuBankV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "ethPriceFeedAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "bankCap",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Bank_AccountAlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Bank_AccountNotExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Bank_ExceedBankCap",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "limit",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requested",
									"type": "uint256"
								}
							],
							"name": "Bank_ExceedWithdrawAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requested",
									"type": "uint256"
								}
							],
							"name": "Bank_InsufficientFunds",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Bank_InvalidDeposit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Bank_TokenNotSupported",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "Bank_TransferError",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Bank_Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Bank_Withdraw",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "enum KipuBankV2.TokenState",
									"name": "state",
									"type": "uint8"
								}
							],
							"name": "TokenUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_WITHDRAW_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "NATIVE_TOKEN",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USD_FEED_DECIMALS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "weiAmount",
									"type": "uint256"
								}
							],
							"name": "convertWeiToUsd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "email",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								}
							],
							"name": "createAccount",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "depositToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getDepositCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getEthPriceInUsd",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getWithdrawCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_bankCap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "i_ethPriceFeed",
							"outputs": [
								{
									"internalType": "contract AggregatorV3Interface",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint8",
									"name": "decimals",
									"type": "uint8"
								},
								{
									"internalType": "address",
									"name": "priceFeed",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "supported",
									"type": "bool"
								}
							],
							"name": "setToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"Bank_ExceedWithdrawAmount(uint256,uint256)": [
								{
									"params": {
										"limit": "Límite máximo permitido",
										"requested": "Monto solicitado"
									}
								}
							],
							"Bank_InsufficientFunds(uint256,uint256)": [
								{
									"params": {
										"available": "Saldo disponible",
										"requested": "Monto solicitado"
									}
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"params": {
									"bankCap": "Límite global del banco (USD-feed decimales)",
									"ethPriceFeedAddress": "Dirección del oráculo ETH/USD"
								}
							},
							"createAccount(string,string)": {
								"params": {
									"email": "Email del usuario",
									"name": "Nombre del usuario"
								}
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/1_KipuBankV2.sol\":549:10446  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/1_KipuBankV2.sol\":4622:4829  constructor(address ethPriceFeedAddress, uint256 bankCap) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/1_KipuBankV2.sol\":4690:4724  _grantRole(ADMIN_ROLE, msg.sender) */\n  tag_8\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n  0x00\n    /* \"contracts/1_KipuBankV2.sol\":827:845  DEFAULT_ADMIN_ROLE */\n  dup1\n  shl\n    /* \"contracts/1_KipuBankV2.sol\":4713:4723  msg.sender */\n  caller\n    /* \"contracts/1_KipuBankV2.sol\":4690:4700  _grantRole */\n  shl(0x20, tag_9)\n    /* \"contracts/1_KipuBankV2.sol\":4690:4724  _grantRole(ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/1_KipuBankV2.sol\":4773:4792  ethPriceFeedAddress */\n  dup2\n    /* \"contracts/1_KipuBankV2.sol\":4734:4793  i_ethPriceFeed = AggregatorV3Interface(ethPriceFeedAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/1_KipuBankV2.sol\":4815:4822  bankCap */\n  dup1\n    /* \"contracts/1_KipuBankV2.sol\":4803:4822  i_bankCap = bankCap */\n  0x80\n  dup2\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/1_KipuBankV2.sol\":4622:4829  constructor(address ethPriceFeedAddress, uint256 bankCap) {... */\n  pop\n  pop\n    /* \"contracts/1_KipuBankV2.sol\":549:10446  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n  jump(tag_10)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n  tag_14\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n  dup6\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  tag_15\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n  swap1\n  pop\n  jump(tag_11)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\ntag_14:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\ntag_11:\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\ntag_16:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_21:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_23:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_24:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_36\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_23\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_25:\n    /* \"#utility.yul\":641:665   */\n  tag_38\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_24\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_39:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_26:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_41\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_25\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:922   */\ntag_27:\n    /* \"#utility.yul\":882:889   */\n  0x00\n    /* \"#utility.yul\":911:916   */\n  dup2\n    /* \"#utility.yul\":900:916   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:922   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":928:1050   */\ntag_28:\n    /* \"#utility.yul\":1001:1025   */\n  tag_44\n    /* \"#utility.yul\":1019:1024   */\n  dup2\n    /* \"#utility.yul\":1001:1025   */\n  tag_27\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":994:999   */\n  dup2\n    /* \"#utility.yul\":991:1026   */\n  eq\n    /* \"#utility.yul\":981:1044   */\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1040:1041   */\n  0x00\n    /* \"#utility.yul\":1037:1038   */\n  dup1\n    /* \"#utility.yul\":1030:1042   */\n  revert\n    /* \"#utility.yul\":981:1044   */\ntag_45:\n    /* \"#utility.yul\":928:1050   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1199   */\ntag_29:\n    /* \"#utility.yul\":1113:1118   */\n  0x00\n    /* \"#utility.yul\":1144:1150   */\n  dup2\n    /* \"#utility.yul\":1138:1151   */\n  mload\n    /* \"#utility.yul\":1129:1151   */\n  swap1\n  pop\n    /* \"#utility.yul\":1160:1193   */\n  tag_47\n    /* \"#utility.yul\":1187:1192   */\n  dup2\n    /* \"#utility.yul\":1160:1193   */\n  tag_28\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":1056:1199   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1205:1712   */\ntag_3:\n    /* \"#utility.yul\":1284:1290   */\n  0x00\n    /* \"#utility.yul\":1292:1298   */\n  dup1\n    /* \"#utility.yul\":1341:1343   */\n  0x40\n    /* \"#utility.yul\":1329:1338   */\n  dup4\n    /* \"#utility.yul\":1320:1327   */\n  dup6\n    /* \"#utility.yul\":1316:1339   */\n  sub\n    /* \"#utility.yul\":1312:1344   */\n  slt\n    /* \"#utility.yul\":1309:1428   */\n  iszero\n  tag_49\n  jumpi\n    /* \"#utility.yul\":1347:1426   */\n  tag_50\n  tag_21\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":1309:1428   */\ntag_49:\n    /* \"#utility.yul\":1467:1468   */\n  0x00\n    /* \"#utility.yul\":1492:1556   */\n  tag_51\n    /* \"#utility.yul\":1548:1555   */\n  dup6\n    /* \"#utility.yul\":1539:1545   */\n  dup3\n    /* \"#utility.yul\":1528:1537   */\n  dup7\n    /* \"#utility.yul\":1524:1546   */\n  add\n    /* \"#utility.yul\":1492:1556   */\n  tag_26\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":1482:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1438:1566   */\n  pop\n    /* \"#utility.yul\":1605:1607   */\n  0x20\n    /* \"#utility.yul\":1631:1695   */\n  tag_52\n    /* \"#utility.yul\":1687:1694   */\n  dup6\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1667:1676   */\n  dup7\n    /* \"#utility.yul\":1663:1685   */\n  add\n    /* \"#utility.yul\":1631:1695   */\n  tag_29\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":1621:1695   */\n  swap2\n  pop\n    /* \"#utility.yul\":1576:1705   */\n  pop\n    /* \"#utility.yul\":1205:1712   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"contracts/1_KipuBankV2.sol\":549:10446  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\ntag_10:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x15f577349cb01f168943032d44e6ff6a22a9210e99c5a2f5c4ba968be0e1fe66\")\n  0x00\n  assignImmutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/1_KipuBankV2.sol\":549:10446  contract KipuBankV2 is AccessControl, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x75b238fc\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xd0e30db0\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xd0e30db0\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xd4fac45d\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd67b98a9\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xd7128c58\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf6687af7\n      eq\n      tag_25\n      jumpi\n      jump(tag_1)\n    tag_27:\n      dup1\n      0x75b238fc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9363a141\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x9e281a98\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xb60fc72e\n      eq\n      tag_19\n      jumpi\n      jump(tag_1)\n    tag_26:\n      dup1\n      0x31f7d964\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x31f7d964\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x338b5dea\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x44ba0ea2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x47d04c71\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4914e2ce\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_28:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x19289287\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x27281025\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      pop\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":5773:6422  function createAccount(string memory email, string memory name) external payable {... */\n    tag_3:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":9934:10103  function convertWeiToUsd(uint256 weiAmount) external view returns(uint256) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":7741:8442  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n    tag_59:\n      stop\n        /* \"contracts/1_KipuBankV2.sol\":1920:1969  address public constant NATIVE_TOKEN = address(0) */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":6989:7522  function depositToken(address token, uint256 amount) external {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      tag_72\n      jump\t// in\n    tag_69:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_73\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_73:\n      pop\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/1_KipuBankV2.sol\":1831:1886  uint256 public constant MAX_WITHDRAW_AMOUNT = 0.1 ether */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":10344:10444  function getWithdrawCount() external view returns(uint256) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n      pop\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":5046:5463  function setToken(... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      tag_86\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      tag_89\n      jump\t// in\n    tag_86:\n      stop\n        /* \"contracts/1_KipuBankV2.sol\":790:845  bytes32 public constant ADMIN_ROLE = DEFAULT_ADMIN_ROLE */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_96:\n      tag_97\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":10176:10274  function getDepositCount() external view returns(uint256) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n      pop\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":8504:9230  function withdrawToken(address token, uint256 amount) external nonReentrant {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":2086:2139  AggregatorV3Interface public immutable i_ethPriceFeed */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":6483:6934  function deposit() external payable {... */\n    tag_20:\n      tag_116\n      tag_117\n      jump\t// in\n    tag_116:\n      stop\n        /* \"contracts/1_KipuBankV2.sol\":9459:9652  function getBalance(address user, address token) external view returns(uint256) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      tag_119\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_120\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      tag_122\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_124\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_124:\n      pop\n      tag_125\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_126\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_126:\n      tag_127\n      jump\t// in\n    tag_125:\n      stop\n        /* \"contracts/1_KipuBankV2.sol\":9714:9873  function getEthPriceInUsd() public view returns(uint256) {... */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":1740:1787  uint256 public constant USD_FEED_DECIMALS = 1e8 */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_133\n      tag_134\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/1_KipuBankV2.sol\":1998:2032  uint256 public immutable i_bankCap */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_33:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2626:2630  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2664:2696  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2660  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2696  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_141\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      tag_142\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2724:2735  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2723  super.supportsInterface */\n      tag_143\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2700:2736  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_142:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2649:2736  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2736  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2541:2743  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":5773:6422  function createAccount(string memory email, string memory name) external payable {... */\n    tag_39:\n        /* \"contracts/1_KipuBankV2.sol\":5868:5876  accounts */\n      0x02\n        /* \"contracts/1_KipuBankV2.sol\":5868:5888  accounts[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":5877:5887  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":5868:5888  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":5868:5895  accounts[msg.sender].exists */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":5864:5931  if (accounts[msg.sender].exists) revert Bank_AccountAlreadyExists() */\n      iszero\n      tag_145\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":5904:5931  Bank_AccountAlreadyExists() */\n      mload(0x40)\n      0x7845597700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":5864:5931  if (accounts[msg.sender].exists) revert Bank_AccountAlreadyExists() */\n    tag_145:\n        /* \"contracts/1_KipuBankV2.sol\":5978:5987  i_bankCap */\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n        /* \"contracts/1_KipuBankV2.sol\":5966:5975  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":5945:5963  s_totalBankBalance */\n      sload(0x07)\n        /* \"contracts/1_KipuBankV2.sol\":5945:5975  s_totalBankBalance + msg.value */\n      tag_146\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"contracts/1_KipuBankV2.sol\":5945:5987  s_totalBankBalance + msg.value > i_bankCap */\n      gt\n        /* \"contracts/1_KipuBankV2.sol\":5941:6016  if (s_totalBankBalance + msg.value > i_bankCap) revert Bank_ExceedBankCap() */\n      iszero\n      tag_148\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":5996:6016  Bank_ExceedBankCap() */\n      mload(0x40)\n      0x97651d1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":5941:6016  if (s_totalBankBalance + msg.value > i_bankCap) revert Bank_ExceedBankCap() */\n    tag_148:\n        /* \"contracts/1_KipuBankV2.sol\":6050:6169  Account({... */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":6081:6082  0 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6050:6169  Account({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/1_KipuBankV2.sol\":6128:6132  name */\n      dup3\n        /* \"contracts/1_KipuBankV2.sol\":6050:6169  Account({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/1_KipuBankV2.sol\":6103:6108  email */\n      dup4\n        /* \"contracts/1_KipuBankV2.sol\":6050:6169  Account({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/1_KipuBankV2.sol\":6154:6158  true */\n      0x01\n        /* \"contracts/1_KipuBankV2.sol\":6050:6169  Account({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":6027:6035  accounts */\n      0x02\n        /* \"contracts/1_KipuBankV2.sol\":6027:6047  accounts[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6036:6046  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":6027:6047  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":6027:6169  accounts[msg.sender] = Account({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      swap1\n      dup2\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      swap1\n      dup2\n      tag_151\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_151:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":6196:6197  0 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6184:6193  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6184:6197  msg.value > 0 */\n      gt\n        /* \"contracts/1_KipuBankV2.sol\":6180:6416  if (msg.value > 0) {... */\n      iszero\n      tag_152\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":6251:6260  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6213:6221  balances */\n      0x03\n        /* \"contracts/1_KipuBankV2.sol\":6213:6233  balances[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6222:6232  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":6213:6233  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":6213:6247  balances[msg.sender][NATIVE_TOKEN] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":1967:1968  0 */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":6213:6247  balances[msg.sender][NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6213:6260  balances[msg.sender][NATIVE_TOKEN] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_153\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_153:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":6296:6305  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6274:6292  s_totalBankBalance */\n      0x07\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6274:6305  s_totalBankBalance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_154\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_154:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":6319:6335  s_depositCounter */\n      0x05\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6319:6337  s_depositCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_155\n      swap1\n      tag_156\n      jump\t// in\n    tag_155:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":1967:1968  0 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6356:6405  Bank_Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":6369:6379  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":6356:6405  Bank_Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c008\n        /* \"contracts/1_KipuBankV2.sol\":6395:6404  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6356:6405  Bank_Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1_KipuBankV2.sol\":6180:6416  if (msg.value > 0) {... */\n    tag_152:\n        /* \"contracts/1_KipuBankV2.sol\":5773:6422  function createAccount(string memory email, string memory name) external payable {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3851:3858  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3883  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3884:3888  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3889  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3877:3899  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3870:3899  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3786:3906  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":9934:10103  function convertWeiToUsd(uint256 weiAmount) external view returns(uint256) {... */\n    tag_51:\n        /* \"contracts/1_KipuBankV2.sol\":10000:10007  uint256 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":10019:10032  uint256 price */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":10035:10053  getEthPriceInUsd() */\n      tag_160\n        /* \"contracts/1_KipuBankV2.sol\":10035:10051  getEthPriceInUsd */\n      tag_130\n        /* \"contracts/1_KipuBankV2.sol\":10035:10053  getEthPriceInUsd() */\n      jump\t// in\n    tag_160:\n        /* \"contracts/1_KipuBankV2.sol\":10019:10053  uint256 price = getEthPriceInUsd() */\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":10092:10096  1e18 */\n      0x0de0b6b3a7640000\n        /* \"contracts/1_KipuBankV2.sol\":10083:10088  price */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":10071:10080  weiAmount */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":10071:10088  weiAmount * price */\n      tag_161\n      swap2\n      swap1\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"contracts/1_KipuBankV2.sol\":10070:10096  (weiAmount * price) / 1e18 */\n      tag_163\n      swap2\n      swap1\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"contracts/1_KipuBankV2.sol\":10063:10096  return (weiAmount * price) / 1e18 */\n      swap2\n      pop\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":9934:10103  function convertWeiToUsd(uint256 weiAmount) external view returns(uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":7741:8442  function withdraw(uint256 amount) external nonReentrant {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_167\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_166:\n        /* \"contracts/1_KipuBankV2.sol\":7812:7820  accounts */\n      0x02\n        /* \"contracts/1_KipuBankV2.sol\":7812:7832  accounts[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7821:7831  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":7812:7832  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":7812:7839  accounts[msg.sender].exists */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":7807:7871  if (!accounts[msg.sender].exists) revert Bank_AccountNotExists() */\n      tag_169\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":7848:7871  Bank_AccountNotExists() */\n      mload(0x40)\n      0x566b044000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":7807:7871  if (!accounts[msg.sender].exists) revert Bank_AccountNotExists() */\n    tag_169:\n        /* \"contracts/1_KipuBankV2.sol\":1877:1886  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/1_KipuBankV2.sol\":7885:7891  amount */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":7885:7913  amount > MAX_WITHDRAW_AMOUNT */\n      gt\n        /* \"contracts/1_KipuBankV2.sol\":7881:7976  if (amount > MAX_WITHDRAW_AMOUNT) revert Bank_ExceedWithdrawAmount(MAX_WITHDRAW_AMOUNT, amount) */\n      iszero\n      tag_170\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":1877:1886  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/1_KipuBankV2.sol\":7969:7975  amount */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":7922:7976  Bank_ExceedWithdrawAmount(MAX_WITHDRAW_AMOUNT, amount) */\n      mload(0x40)\n      0xd859cbba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":7881:7976  if (amount > MAX_WITHDRAW_AMOUNT) revert Bank_ExceedWithdrawAmount(MAX_WITHDRAW_AMOUNT, amount) */\n    tag_170:\n        /* \"contracts/1_KipuBankV2.sol\":7986:8005  uint256 userBalance */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8008:8016  balances */\n      0x03\n        /* \"contracts/1_KipuBankV2.sol\":8008:8028  balances[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8017:8027  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":8008:8028  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":8008:8042  balances[msg.sender][NATIVE_TOKEN] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":1967:1968  0 */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":8008:8042  balances[msg.sender][NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1_KipuBankV2.sol\":7986:8042  uint256 userBalance = balances[msg.sender][NATIVE_TOKEN] */\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":8070:8076  amount */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":8056:8067  userBalance */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":8056:8076  userBalance < amount */\n      lt\n        /* \"contracts/1_KipuBankV2.sol\":8052:8128  if (userBalance < amount) revert Bank_InsufficientFunds(userBalance, amount) */\n      iszero\n      tag_173\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":8108:8119  userBalance */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":8121:8127  amount */\n      dup3\n        /* \"contracts/1_KipuBankV2.sol\":8085:8128  Bank_InsufficientFunds(userBalance, amount) */\n      mload(0x40)\n      0x70e6417b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":8052:8128  if (userBalance < amount) revert Bank_InsufficientFunds(userBalance, amount) */\n    tag_173:\n        /* \"contracts/1_KipuBankV2.sol\":8177:8183  amount */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":8139:8147  balances */\n      0x03\n        /* \"contracts/1_KipuBankV2.sol\":8139:8159  balances[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8148:8158  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":8139:8159  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":8139:8173  balances[msg.sender][NATIVE_TOKEN] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":1967:1968  0 */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":8139:8173  balances[msg.sender][NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8139:8183  balances[msg.sender][NATIVE_TOKEN] -= amount */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":8215:8221  amount */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":8193:8211  s_totalBankBalance */\n      0x07\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8193:8221  s_totalBankBalance -= amount */\n      dup3\n      dup3\n      sload\n      tag_177\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_177:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":8231:8248  s_withdrawCounter */\n      0x06\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8231:8250  s_withdrawCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_178\n      swap1\n      tag_156\n      jump\t// in\n    tag_178:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":8262:8274  bool success */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8287:8297  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":8279:8303  payable(msg.sender).call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":8311:8317  amount */\n      dup4\n        /* \"contracts/1_KipuBankV2.sol\":8279:8322  payable(msg.sender).call{value: amount}(\"\") */\n      mload(0x40)\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_183\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_182)\n    tag_183:\n      0x60\n      swap2\n      pop\n    tag_182:\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":8261:8322  (bool success,) = payable(msg.sender).call{value: amount}(\"\") */\n      pop\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":8337:8344  success */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":8332:8373  if (!success) revert Bank_TransferError() */\n      tag_184\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":8353:8373  Bank_TransferError() */\n      mload(0x40)\n      0xbd6bfd0a00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":8332:8373  if (!success) revert Bank_TransferError() */\n    tag_184:\n        /* \"contracts/1_KipuBankV2.sol\":1967:1968  0 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8388:8435  Bank_Withdraw(msg.sender, NATIVE_TOKEN, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":8402:8412  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":8388:8435  Bank_Withdraw(msg.sender, NATIVE_TOKEN, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8b1e2a9be32ce8c5fe81b6681739e4a0016bf546706482b49989431fe3d55ee\n        /* \"contracts/1_KipuBankV2.sol\":8428:8434  amount */\n      dup6\n        /* \"contracts/1_KipuBankV2.sol\":8388:8435  Bank_Withdraw(msg.sender, NATIVE_TOKEN, amount) */\n      mload(0x40)\n      tag_185\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1_KipuBankV2.sol\":7797:8442  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_186\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_186:\n        /* \"contracts/1_KipuBankV2.sol\":7741:8442  function withdraw(uint256 amount) external nonReentrant {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4289:4293  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4288  getRoleAdmin */\n      tag_44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4276:4294  getRoleAdmin(role) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_190\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      tag_193\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4317:4321  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4323:4330  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4316  _grantRole */\n      tag_194\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4306:4331  _grantRole(role, account) */\n      jump\t// in\n    tag_193:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4202:4338  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":1920:1969  address public constant NATIVE_TOKEN = address(0) */\n    tag_65:\n        /* \"contracts/1_KipuBankV2.sol\":1967:1968  0 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":1920:1969  address public constant NATIVE_TOKEN = address(0) */\n      dup2\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":6989:7522  function depositToken(address token, uint256 amount) external {... */\n    tag_72:\n        /* \"contracts/1_KipuBankV2.sol\":7066:7074  accounts */\n      0x02\n        /* \"contracts/1_KipuBankV2.sol\":7066:7086  accounts[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7075:7085  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":7066:7086  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":7066:7093  accounts[msg.sender].exists */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":7061:7125  if (!accounts[msg.sender].exists) revert Bank_AccountNotExists() */\n      tag_196\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":7102:7125  Bank_AccountNotExists() */\n      mload(0x40)\n      0x566b044000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":7061:7125  if (!accounts[msg.sender].exists) revert Bank_AccountNotExists() */\n    tag_196:\n        /* \"contracts/1_KipuBankV2.sol\":7135:7154  TokenData memory td */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7157:7169  tokenCatalog */\n      0x04\n        /* \"contracts/1_KipuBankV2.sol\":7157:7176  tokenCatalog[token] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7170:7175  token */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":7157:7176  tokenCatalog[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":7135:7176  TokenData memory td = tokenCatalog[token] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x01\n      dup2\n      gt\n      iszero\n      tag_197\n      jumpi\n      tag_198\n      tag_199\n      jump\t// in\n    tag_198:\n    tag_197:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_200\n      jumpi\n      tag_201\n      tag_199\n      jump\t// in\n    tag_201:\n    tag_200:\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":7202:7222  TokenState.Supported */\n      0x01\n        /* \"contracts/1_KipuBankV2.sol\":7190:7222  td.state != TokenState.Supported */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_202\n      jumpi\n      tag_203\n      tag_199\n      jump\t// in\n    tag_203:\n    tag_202:\n        /* \"contracts/1_KipuBankV2.sol\":7190:7192  td */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":7190:7198  td.state */\n      0x00\n      add\n      mload\n        /* \"contracts/1_KipuBankV2.sol\":7190:7222  td.state != TokenState.Supported */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_204\n      jumpi\n      tag_205\n      tag_199\n      jump\t// in\n    tag_205:\n    tag_204:\n      eq\n        /* \"contracts/1_KipuBankV2.sol\":7186:7255  if (td.state != TokenState.Supported) revert Bank_TokenNotSupported() */\n      tag_206\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":7231:7255  Bank_TokenNotSupported() */\n      mload(0x40)\n      0x5694952100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":7186:7255  if (td.state != TokenState.Supported) revert Bank_TokenNotSupported() */\n    tag_206:\n        /* \"contracts/1_KipuBankV2.sol\":7279:7280  0 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7269:7275  amount */\n      dup3\n        /* \"contracts/1_KipuBankV2.sol\":7269:7280  amount == 0 */\n      sub\n        /* \"contracts/1_KipuBankV2.sol\":7265:7310  if (amount == 0) revert Bank_InvalidDeposit() */\n      tag_207\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":7289:7310  Bank_InvalidDeposit() */\n      mload(0x40)\n      0x7803844200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":7265:7310  if (amount == 0) revert Bank_InvalidDeposit() */\n    tag_207:\n        /* \"contracts/1_KipuBankV2.sol\":7352:7358  amount */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":7321:7329  balances */\n      0x03\n        /* \"contracts/1_KipuBankV2.sol\":7321:7341  balances[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7330:7340  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":7321:7341  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":7321:7348  balances[msg.sender][token] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7342:7347  token */\n      dup6\n        /* \"contracts/1_KipuBankV2.sol\":7321:7348  balances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7321:7358  balances[msg.sender][token] += amount */\n      dup3\n      dup3\n      sload\n      tag_208\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_208:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":7368:7384  s_depositCounter */\n      0x05\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":7368:7386  s_depositCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_209\n      swap1\n      tag_156\n      jump\t// in\n    tag_209:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":7396:7461  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      tag_210\n        /* \"contracts/1_KipuBankV2.sol\":7427:7437  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":7447:7451  this */\n      address\n        /* \"contracts/1_KipuBankV2.sol\":7454:7460  amount */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":7403:7408  token */\n      dup7\n        /* \"contracts/1_KipuBankV2.sol\":7396:7426  IERC20(token).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_211\n      swap1\n        /* \"contracts/1_KipuBankV2.sol\":7396:7461  IERC20(token).safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"contracts/1_KipuBankV2.sol\":7501:7506  token */\n      dup3\n        /* \"contracts/1_KipuBankV2.sol\":7476:7515  Bank_Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":7489:7499  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":7476:7515  Bank_Deposit(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c008\n        /* \"contracts/1_KipuBankV2.sol\":7508:7514  amount */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":7476:7515  Bank_Deposit(msg.sender, token, amount) */\n      mload(0x40)\n      tag_212\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1_KipuBankV2.sol\":7051:7522  {... */\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":6989:7522  function depositToken(address token, uint256 amount) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_76:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      tag_214\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5429  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5419:5431  _msgSender() */\n      jump\t// in\n    tag_214:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5415  callerConfirmation */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5397:5431  callerConfirmation != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5454:5484  AccessControlBadConfirmation() */\n      mload(0x40)\n      0x6697b23200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5393:5495  if (callerConfirmation != _msgSender()) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      tag_217\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5517:5521  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5523:5541  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5516  _revokeRole */\n      tag_218\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5505:5542  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_217:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5304:5549  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":1831:1886  uint256 public constant MAX_WITHDRAW_AMOUNT = 0.1 ether */\n    tag_79:\n        /* \"contracts/1_KipuBankV2.sol\":1877:1886  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/1_KipuBankV2.sol\":1831:1886  uint256 public constant MAX_WITHDRAW_AMOUNT = 0.1 ether */\n      dup2\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":10344:10444  function getWithdrawCount() external view returns(uint256) {... */\n    tag_83:\n        /* \"contracts/1_KipuBankV2.sol\":10394:10401  uint256 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":10420:10437  s_withdrawCounter */\n      sload(0x06)\n        /* \"contracts/1_KipuBankV2.sol\":10413:10437  return s_withdrawCounter */\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":10344:10444  function getWithdrawCount() external view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":5046:5463  function setToken(... */\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":827:845  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_221\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_221:\n        /* \"contracts/1_KipuBankV2.sol\":5230:5395  TokenData({... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":5261:5270  supported */\n      dup4\n        /* \"contracts/1_KipuBankV2.sol\":5261:5318  supported ? TokenState.Supported : TokenState.Unsupported */\n      tag_223\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":5296:5318  TokenState.Unsupported */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":5261:5318  supported ? TokenState.Supported : TokenState.Unsupported */\n      jump(tag_224)\n    tag_223:\n        /* \"contracts/1_KipuBankV2.sol\":5273:5293  TokenState.Supported */\n      0x01\n        /* \"contracts/1_KipuBankV2.sol\":5261:5318  supported ? TokenState.Supported : TokenState.Unsupported */\n    tag_224:\n        /* \"contracts/1_KipuBankV2.sol\":5230:5395  TokenData({... */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_225\n      jumpi\n      tag_226\n      tag_199\n      jump\t// in\n    tag_226:\n    tag_225:\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/1_KipuBankV2.sol\":5342:5350  decimals */\n      dup6\n        /* \"contracts/1_KipuBankV2.sol\":5230:5395  TokenData({... */\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/1_KipuBankV2.sol\":5375:5384  priceFeed */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":5230:5395  TokenData({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":5208:5220  tokenCatalog */\n      0x04\n        /* \"contracts/1_KipuBankV2.sol\":5208:5227  tokenCatalog[token] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":5221:5226  token */\n      dup8\n        /* \"contracts/1_KipuBankV2.sol\":5208:5227  tokenCatalog[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":5208:5395  tokenCatalog[token] = TokenData({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x01\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_199\n      jump\t// in\n    tag_228:\n    tag_227:\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x02)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":5423:5428  token */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":5410:5456  TokenUpdated(token, tokenCatalog[token].state) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x243c26e9467b186d248bf33b7722de99a559aceda24c02928c2636071be4d992\n        /* \"contracts/1_KipuBankV2.sol\":5430:5442  tokenCatalog */\n      0x04\n        /* \"contracts/1_KipuBankV2.sol\":5430:5449  tokenCatalog[token] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":5443:5448  token */\n      dup9\n        /* \"contracts/1_KipuBankV2.sol\":5430:5449  tokenCatalog[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":5430:5455  tokenCatalog[token].state */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":5410:5456  TokenUpdated(token, tokenCatalog[token].state) */\n      mload(0x40)\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/1_KipuBankV2.sol\":5046:5463  function setToken(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":790:845  bytes32 public constant ADMIN_ROLE = DEFAULT_ADMIN_ROLE */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":827:845  DEFAULT_ADMIN_ROLE */\n      dup1\n      shl\n        /* \"contracts/1_KipuBankV2.sol\":790:845  bytes32 public constant ADMIN_ROLE = DEFAULT_ADMIN_ROLE */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2907:2911  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2936  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2937:2941  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2942  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2950  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2951:2958  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2930:2959  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2923:2959  return _roles[role].hasRole[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2830:2966  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":10176:10274  function getDepositCount() external view returns(uint256) {... */\n    tag_101:\n        /* \"contracts/1_KipuBankV2.sol\":10225:10232  uint256 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":10251:10267  s_depositCounter */\n      sload(0x05)\n        /* \"contracts/1_KipuBankV2.sol\":10244:10267  return s_depositCounter */\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":10176:10274  function getDepositCount() external view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":8504:9230  function withdrawToken(address token, uint256 amount) external nonReentrant {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_234\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_167\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/1_KipuBankV2.sol\":8595:8603  accounts */\n      0x02\n        /* \"contracts/1_KipuBankV2.sol\":8595:8615  accounts[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8604:8614  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":8595:8615  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":8595:8622  accounts[msg.sender].exists */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":8590:8654  if (!accounts[msg.sender].exists) revert Bank_AccountNotExists() */\n      tag_236\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":8631:8654  Bank_AccountNotExists() */\n      mload(0x40)\n      0x566b044000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":8590:8654  if (!accounts[msg.sender].exists) revert Bank_AccountNotExists() */\n    tag_236:\n        /* \"contracts/1_KipuBankV2.sol\":8664:8683  TokenData memory td */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8686:8698  tokenCatalog */\n      0x04\n        /* \"contracts/1_KipuBankV2.sol\":8686:8705  tokenCatalog[token] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8699:8704  token */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":8686:8705  tokenCatalog[token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":8664:8705  TokenData memory td = tokenCatalog[token] */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x01\n      dup2\n      gt\n      iszero\n      tag_237\n      jumpi\n      tag_238\n      tag_199\n      jump\t// in\n    tag_238:\n    tag_237:\n      0x01\n      dup2\n      gt\n      iszero\n      tag_239\n      jumpi\n      tag_240\n      tag_199\n      jump\t// in\n    tag_240:\n    tag_239:\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":8731:8751  TokenState.Supported */\n      0x01\n        /* \"contracts/1_KipuBankV2.sol\":8719:8751  td.state != TokenState.Supported */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_241\n      jumpi\n      tag_242\n      tag_199\n      jump\t// in\n    tag_242:\n    tag_241:\n        /* \"contracts/1_KipuBankV2.sol\":8719:8721  td */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":8719:8727  td.state */\n      0x00\n      add\n      mload\n        /* \"contracts/1_KipuBankV2.sol\":8719:8751  td.state != TokenState.Supported */\n      0x01\n      dup2\n      gt\n      iszero\n      tag_243\n      jumpi\n      tag_244\n      tag_199\n      jump\t// in\n    tag_244:\n    tag_243:\n      eq\n        /* \"contracts/1_KipuBankV2.sol\":8715:8784  if (td.state != TokenState.Supported) revert Bank_TokenNotSupported() */\n      tag_245\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":8760:8784  Bank_TokenNotSupported() */\n      mload(0x40)\n      0x5694952100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":8715:8784  if (td.state != TokenState.Supported) revert Bank_TokenNotSupported() */\n    tag_245:\n        /* \"contracts/1_KipuBankV2.sol\":1877:1886  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/1_KipuBankV2.sol\":8798:8804  amount */\n      dup3\n        /* \"contracts/1_KipuBankV2.sol\":8798:8826  amount > MAX_WITHDRAW_AMOUNT */\n      gt\n        /* \"contracts/1_KipuBankV2.sol\":8794:8889  if (amount > MAX_WITHDRAW_AMOUNT) revert Bank_ExceedWithdrawAmount(MAX_WITHDRAW_AMOUNT, amount) */\n      iszero\n      tag_246\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":1877:1886  0.1 ether */\n      0x016345785d8a0000\n        /* \"contracts/1_KipuBankV2.sol\":8882:8888  amount */\n      dup3\n        /* \"contracts/1_KipuBankV2.sol\":8835:8889  Bank_ExceedWithdrawAmount(MAX_WITHDRAW_AMOUNT, amount) */\n      mload(0x40)\n      0xd859cbba00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":8794:8889  if (amount > MAX_WITHDRAW_AMOUNT) revert Bank_ExceedWithdrawAmount(MAX_WITHDRAW_AMOUNT, amount) */\n    tag_246:\n        /* \"contracts/1_KipuBankV2.sol\":8900:8919  uint256 userBalance */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8922:8930  balances */\n      0x03\n        /* \"contracts/1_KipuBankV2.sol\":8922:8942  balances[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8931:8941  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":8922:8942  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":8922:8949  balances[msg.sender][token] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":8943:8948  token */\n      dup6\n        /* \"contracts/1_KipuBankV2.sol\":8922:8949  balances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1_KipuBankV2.sol\":8900:8949  uint256 userBalance = balances[msg.sender][token] */\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":8977:8983  amount */\n      dup3\n        /* \"contracts/1_KipuBankV2.sol\":8963:8974  userBalance */\n      dup2\n        /* \"contracts/1_KipuBankV2.sol\":8963:8983  userBalance < amount */\n      lt\n        /* \"contracts/1_KipuBankV2.sol\":8959:9035  if (userBalance < amount) revert Bank_InsufficientFunds(userBalance, amount) */\n      iszero\n      tag_248\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":9015:9026  userBalance */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":9028:9034  amount */\n      dup4\n        /* \"contracts/1_KipuBankV2.sol\":8992:9035  Bank_InsufficientFunds(userBalance, amount) */\n      mload(0x40)\n      0x70e6417b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_249\n      swap3\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":8959:9035  if (userBalance < amount) revert Bank_InsufficientFunds(userBalance, amount) */\n    tag_248:\n        /* \"contracts/1_KipuBankV2.sol\":9077:9083  amount */\n      dup3\n        /* \"contracts/1_KipuBankV2.sol\":9046:9054  balances */\n      0x03\n        /* \"contracts/1_KipuBankV2.sol\":9046:9066  balances[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9055:9065  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":9046:9066  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":9046:9073  balances[msg.sender][token] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9067:9072  token */\n      dup7\n        /* \"contracts/1_KipuBankV2.sol\":9046:9073  balances[msg.sender][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9046:9083  balances[msg.sender][token] -= amount */\n      dup3\n      dup3\n      sload\n      tag_250\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_250:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":9093:9110  s_withdrawCounter */\n      0x06\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9093:9112  s_withdrawCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_251\n      swap1\n      tag_156\n      jump\t// in\n    tag_251:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":9122:9168  IERC20(token).safeTransfer(msg.sender, amount) */\n      tag_252\n        /* \"contracts/1_KipuBankV2.sol\":9149:9159  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":9161:9167  amount */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":9129:9134  token */\n      dup7\n        /* \"contracts/1_KipuBankV2.sol\":9122:9148  IERC20(token).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_253\n      swap1\n        /* \"contracts/1_KipuBankV2.sol\":9122:9168  IERC20(token).safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_252:\n        /* \"contracts/1_KipuBankV2.sol\":9209:9214  token */\n      dup4\n        /* \"contracts/1_KipuBankV2.sol\":9183:9223  Bank_Withdraw(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":9197:9207  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":9183:9223  Bank_Withdraw(msg.sender, token, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xc8b1e2a9be32ce8c5fe81b6681739e4a0016bf546706482b49989431fe3d55ee\n        /* \"contracts/1_KipuBankV2.sol\":9216:9222  amount */\n      dup6\n        /* \"contracts/1_KipuBankV2.sol\":9183:9223  Bank_Withdraw(msg.sender, token, amount) */\n      mload(0x40)\n      tag_254\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1_KipuBankV2.sol\":8580:9230  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_255\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_187\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_255:\n        /* \"contracts/1_KipuBankV2.sol\":8504:9230  function withdrawToken(address token, uint256 amount) external nonReentrant {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2241:2245  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2196:2245  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup1\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":2086:2139  AggregatorV3Interface public immutable i_ethPriceFeed */\n    tag_113:\n      immutable(\"0x15f577349cb01f168943032d44e6ff6a22a9210e99c5a2f5c4ba968be0e1fe66\")\n      dup2\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":6483:6934  function deposit() external payable {... */\n    tag_117:\n        /* \"contracts/1_KipuBankV2.sol\":6534:6542  accounts */\n      0x02\n        /* \"contracts/1_KipuBankV2.sol\":6534:6554  accounts[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6543:6553  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":6534:6554  accounts[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":6534:6561  accounts[msg.sender].exists */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":6529:6593  if (!accounts[msg.sender].exists) revert Bank_AccountNotExists() */\n      tag_257\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":6570:6593  Bank_AccountNotExists() */\n      mload(0x40)\n      0x566b044000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":6529:6593  if (!accounts[msg.sender].exists) revert Bank_AccountNotExists() */\n    tag_257:\n        /* \"contracts/1_KipuBankV2.sol\":6620:6621  0 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6607:6616  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6607:6621  msg.value == 0 */\n      sub\n        /* \"contracts/1_KipuBankV2.sol\":6603:6651  if (msg.value == 0) revert Bank_InvalidDeposit() */\n      tag_258\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":6630:6651  Bank_InvalidDeposit() */\n      mload(0x40)\n      0x7803844200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":6603:6651  if (msg.value == 0) revert Bank_InvalidDeposit() */\n    tag_258:\n        /* \"contracts/1_KipuBankV2.sol\":6698:6707  i_bankCap */\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n        /* \"contracts/1_KipuBankV2.sol\":6686:6695  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6665:6683  s_totalBankBalance */\n      sload(0x07)\n        /* \"contracts/1_KipuBankV2.sol\":6665:6695  s_totalBankBalance + msg.value */\n      tag_259\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_259:\n        /* \"contracts/1_KipuBankV2.sol\":6665:6707  s_totalBankBalance + msg.value > i_bankCap */\n      gt\n        /* \"contracts/1_KipuBankV2.sol\":6661:6736  if (s_totalBankBalance + msg.value > i_bankCap) revert Bank_ExceedBankCap() */\n      iszero\n      tag_260\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":6716:6736  Bank_ExceedBankCap() */\n      mload(0x40)\n      0x97651d1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":6661:6736  if (s_totalBankBalance + msg.value > i_bankCap) revert Bank_ExceedBankCap() */\n    tag_260:\n        /* \"contracts/1_KipuBankV2.sol\":6785:6794  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6747:6755  balances */\n      0x03\n        /* \"contracts/1_KipuBankV2.sol\":6747:6767  balances[msg.sender] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6756:6766  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":6747:6767  balances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":6747:6781  balances[msg.sender][NATIVE_TOKEN] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":1967:1968  0 */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":6747:6781  balances[msg.sender][NATIVE_TOKEN] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6747:6794  balances[msg.sender][NATIVE_TOKEN] += msg.value */\n      dup3\n      dup3\n      sload\n      tag_261\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_261:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":6826:6835  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6804:6822  s_totalBankBalance */\n      0x07\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6804:6835  s_totalBankBalance += msg.value */\n      dup3\n      dup3\n      sload\n      tag_262\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n    tag_262:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":6845:6861  s_depositCounter */\n      0x05\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6845:6863  s_depositCounter++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_263\n      swap1\n      tag_156\n      jump\t// in\n    tag_263:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":1967:1968  0 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":6878:6927  Bank_Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":6891:6901  msg.sender */\n      caller\n        /* \"contracts/1_KipuBankV2.sol\":6878:6927  Bank_Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c008\n        /* \"contracts/1_KipuBankV2.sol\":6917:6926  msg.value */\n      callvalue\n        /* \"contracts/1_KipuBankV2.sol\":6878:6927  Bank_Deposit(msg.sender, NATIVE_TOKEN, msg.value) */\n      mload(0x40)\n      tag_264\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/1_KipuBankV2.sol\":6483:6934  function deposit() external payable {... */\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":9459:9652  function getBalance(address user, address token) external view returns(uint256) {... */\n    tag_122:\n        /* \"contracts/1_KipuBankV2.sol\":9530:9537  uint256 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9554:9562  accounts */\n      0x02\n        /* \"contracts/1_KipuBankV2.sol\":9554:9568  accounts[user] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9563:9567  user */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":9554:9568  accounts[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":9554:9575  accounts[user].exists */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/1_KipuBankV2.sol\":9549:9607  if (!accounts[user].exists) revert Bank_AccountNotExists() */\n      tag_266\n      jumpi\n        /* \"contracts/1_KipuBankV2.sol\":9584:9607  Bank_AccountNotExists() */\n      mload(0x40)\n      0x566b044000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/1_KipuBankV2.sol\":9549:9607  if (!accounts[user].exists) revert Bank_AccountNotExists() */\n    tag_266:\n        /* \"contracts/1_KipuBankV2.sol\":9624:9632  balances */\n      0x03\n        /* \"contracts/1_KipuBankV2.sol\":9624:9638  balances[user] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9633:9637  user */\n      dup5\n        /* \"contracts/1_KipuBankV2.sol\":9624:9638  balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/1_KipuBankV2.sol\":9624:9645  balances[user][token] */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9639:9644  token */\n      dup4\n        /* \"contracts/1_KipuBankV2.sol\":9624:9645  balances[user][token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/1_KipuBankV2.sol\":9617:9645  return balances[user][token] */\n      swap1\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":9459:9652  function getBalance(address user, address token) external view returns(uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_127:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      tag_267\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4706:4710  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4705  getRoleAdmin */\n      tag_44\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4693:4711  getRoleAdmin(role) */\n      jump\t// in\n    tag_267:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      tag_269\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2484:2488  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2483  _checkRole */\n      tag_191\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2473:2489  _checkRole(role) */\n      jump\t// in\n    tag_269:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      tag_271\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4735:4739  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4741:4748  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4734  _revokeRole */\n      tag_218\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4723:4749  _revokeRole(role, account) */\n      jump\t// in\n    tag_271:\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4618:4756  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":9714:9873  function getEthPriceInUsd() public view returns(uint256) {... */\n    tag_130:\n        /* \"contracts/1_KipuBankV2.sol\":9762:9769  uint256 */\n      0x00\n        /* \"contracts/1_KipuBankV2.sol\":9784:9796  int256 price */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":9803:9817  i_ethPriceFeed */\n      immutable(\"0x15f577349cb01f168943032d44e6ff6a22a9210e99c5a2f5c4ba968be0e1fe66\")\n        /* \"contracts/1_KipuBankV2.sol\":9803:9833  i_ethPriceFeed.latestRoundData */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfeaf968c\n        /* \"contracts/1_KipuBankV2.sol\":9803:9835  i_ethPriceFeed.latestRoundData() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xa0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_274\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_274:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_275\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n        /* \"contracts/1_KipuBankV2.sol\":9781:9835  (, int256 price,,,) = i_ethPriceFeed.latestRoundData() */\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":9860:9865  price */\n      dup1\n        /* \"contracts/1_KipuBankV2.sol\":9845:9866  return uint256(price) */\n      swap2\n      pop\n      pop\n        /* \"contracts/1_KipuBankV2.sol\":9714:9873  function getEthPriceInUsd() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":1740:1787  uint256 public constant USD_FEED_DECIMALS = 1e8 */\n    tag_134:\n        /* \"contracts/1_KipuBankV2.sol\":1784:1787  1e8 */\n      0x05f5e100\n        /* \"contracts/1_KipuBankV2.sol\":1740:1787  uint256 public constant USD_FEED_DECIMALS = 1e8 */\n      dup2\n      jump\t// out\n        /* \"contracts/1_KipuBankV2.sol\":1998:2032  uint256 public immutable i_bankCap */\n    tag_138:\n      immutable(\"0x46612c86431bf839553975c6871c96460d6b955d2f53301921ef55c1ad868ef7\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":806:810  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":844:869  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:840  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:869  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":822:869  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":730:876  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      tag_284\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3252:3256  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      tag_285\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3268  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3258:3270  _msgSender() */\n      jump\t// in\n    tag_285:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3251  _checkRole */\n      tag_286\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3241:3271  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3175:3278  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_194:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6232:6236  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      tag_288\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6261:6265  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6267:6274  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6260  hasRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6253:6275  hasRole(role, account) */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n      tag_289\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6323:6327  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6297  _roles */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6298:6302  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6303  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6311  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6312:6319  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6320  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6291:6327  _roles[role].hasRole[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      tag_290\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6383  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6373:6385  _msgSender() */\n      jump\t// in\n    tag_290:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6364:6371  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6358:6362  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6346:6386  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6407:6411  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6400:6411  return true */\n      swap1\n      pop\n      jump(tag_287)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6248:6465  if (!hasRole(role, account)) {... */\n    tag_289:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6449:6454  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6442:6454  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6155:6471  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_287:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_293\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_294\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6786:6790  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      tag_299\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6814:6818  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6820:6827  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6813  hasRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6806:6828  hasRole(role, account) */\n      jump\t// in\n    tag_299:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n      iszero\n      tag_300\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6876:6881  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6850  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6851:6855  role */\n      dup6\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6856  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6864  _roles[role].hasRole */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6865:6872  account */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6873  _roles[role].hasRole[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6844:6881  _roles[role].hasRole[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      tag_301\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6937  _msgSender */\n      tag_215\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6927:6939  _msgSender() */\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6918:6925  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6912:6916  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6900:6940  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6961:6965  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6954:6965  return true */\n      swap1\n      pop\n      jump(tag_298)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6802:7019  if (hasRole(role, account)) {... */\n    tag_300:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7003:7008  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6996:7008  return false */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6708:7025  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_298:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_304\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_305\n      swap3\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_296\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_286:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      tag_308\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3504:3508  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3510:3517  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3503  hasRole */\n      tag_97\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3496:3518  hasRole(role, account) */\n      jump\t// in\n    tag_308:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3574:3581  account */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3583:3587  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3541:3588  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      0xe2517d3f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap3\n      swap2\n      swap1\n      tag_311\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3491:3599  if (!hasRole(role, account)) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3408:3605  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_296:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_313\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_313:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_314\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_315)\n    tag_314:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_315:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_317\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_317:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_316:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_318:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_319:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_320:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_321:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_322:\n        /* \"#utility.yul\":561:584   */\n      tag_401\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_321\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_402:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_323:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_404\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_322\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_32:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_407\n      tag_319\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":833:952   */\n    tag_406:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_408\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_323\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_324:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_325:\n        /* \"#utility.yul\":1268:1289   */\n      tag_411\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_324\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_35:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_413\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_325\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1635   */\n    tag_326:\n        /* \"#utility.yul\":1627:1628   */\n      0x00\n        /* \"#utility.yul\":1624:1625   */\n      dup1\n        /* \"#utility.yul\":1617:1629   */\n      revert\n        /* \"#utility.yul\":1641:1758   */\n    tag_327:\n        /* \"#utility.yul\":1750:1751   */\n      0x00\n        /* \"#utility.yul\":1747:1748   */\n      dup1\n        /* \"#utility.yul\":1740:1752   */\n      revert\n        /* \"#utility.yul\":1764:1866   */\n    tag_328:\n        /* \"#utility.yul\":1805:1811   */\n      0x00\n        /* \"#utility.yul\":1856:1858   */\n      0x1f\n        /* \"#utility.yul\":1852:1859   */\n      not\n        /* \"#utility.yul\":1847:1849   */\n      0x1f\n        /* \"#utility.yul\":1840:1845   */\n      dup4\n        /* \"#utility.yul\":1836:1850   */\n      add\n        /* \"#utility.yul\":1832:1860   */\n      and\n        /* \"#utility.yul\":1822:1860   */\n      swap1\n      pop\n        /* \"#utility.yul\":1764:1866   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1872:2052   */\n    tag_329:\n        /* \"#utility.yul\":1920:1997   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1917:1918   */\n      0x00\n        /* \"#utility.yul\":1910:1998   */\n      mstore\n        /* \"#utility.yul\":2017:2021   */\n      0x41\n        /* \"#utility.yul\":2014:2015   */\n      0x04\n        /* \"#utility.yul\":2007:2022   */\n      mstore\n        /* \"#utility.yul\":2041:2045   */\n      0x24\n        /* \"#utility.yul\":2038:2039   */\n      0x00\n        /* \"#utility.yul\":2031:2046   */\n      revert\n        /* \"#utility.yul\":2058:2339   */\n    tag_330:\n        /* \"#utility.yul\":2141:2168   */\n      tag_419\n        /* \"#utility.yul\":2163:2167   */\n      dup3\n        /* \"#utility.yul\":2141:2168   */\n      tag_328\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":2133:2139   */\n      dup2\n        /* \"#utility.yul\":2129:2169   */\n      add\n        /* \"#utility.yul\":2271:2277   */\n      dup2\n        /* \"#utility.yul\":2259:2269   */\n      dup2\n        /* \"#utility.yul\":2256:2278   */\n      lt\n        /* \"#utility.yul\":2235:2253   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2223:2233   */\n      dup3\n        /* \"#utility.yul\":2220:2254   */\n      gt\n        /* \"#utility.yul\":2217:2279   */\n      or\n        /* \"#utility.yul\":2214:2302   */\n      iszero\n      tag_420\n      jumpi\n        /* \"#utility.yul\":2282:2300   */\n      tag_421\n      tag_329\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":2214:2302   */\n    tag_420:\n        /* \"#utility.yul\":2322:2332   */\n      dup1\n        /* \"#utility.yul\":2318:2320   */\n      0x40\n        /* \"#utility.yul\":2311:2333   */\n      mstore\n        /* \"#utility.yul\":2101:2339   */\n      pop\n        /* \"#utility.yul\":2058:2339   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2345:2474   */\n    tag_331:\n        /* \"#utility.yul\":2379:2385   */\n      0x00\n        /* \"#utility.yul\":2406:2426   */\n      tag_423\n      tag_318\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2396:2426   */\n      swap1\n      pop\n        /* \"#utility.yul\":2435:2468   */\n      tag_424\n        /* \"#utility.yul\":2463:2467   */\n      dup3\n        /* \"#utility.yul\":2455:2461   */\n      dup3\n        /* \"#utility.yul\":2435:2468   */\n      tag_330\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":2345:2474   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2480:2788   */\n    tag_332:\n        /* \"#utility.yul\":2542:2546   */\n      0x00\n        /* \"#utility.yul\":2632:2650   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2624:2630   */\n      dup3\n        /* \"#utility.yul\":2621:2651   */\n      gt\n        /* \"#utility.yul\":2618:2674   */\n      iszero\n      tag_426\n      jumpi\n        /* \"#utility.yul\":2654:2672   */\n      tag_427\n      tag_329\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2618:2674   */\n    tag_426:\n        /* \"#utility.yul\":2692:2721   */\n      tag_428\n        /* \"#utility.yul\":2714:2720   */\n      dup3\n        /* \"#utility.yul\":2692:2721   */\n      tag_328\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":2684:2721   */\n      swap1\n      pop\n        /* \"#utility.yul\":2776:2780   */\n      0x20\n        /* \"#utility.yul\":2770:2774   */\n      dup2\n        /* \"#utility.yul\":2766:2781   */\n      add\n        /* \"#utility.yul\":2758:2781   */\n      swap1\n      pop\n        /* \"#utility.yul\":2480:2788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2794:2942   */\n    tag_333:\n        /* \"#utility.yul\":2892:2898   */\n      dup3\n        /* \"#utility.yul\":2887:2890   */\n      dup2\n        /* \"#utility.yul\":2882:2885   */\n      dup4\n        /* \"#utility.yul\":2869:2899   */\n      calldatacopy\n        /* \"#utility.yul\":2933:2934   */\n      0x00\n        /* \"#utility.yul\":2924:2930   */\n      dup4\n        /* \"#utility.yul\":2919:2922   */\n      dup4\n        /* \"#utility.yul\":2915:2931   */\n      add\n        /* \"#utility.yul\":2908:2935   */\n      mstore\n        /* \"#utility.yul\":2794:2942   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2948:3373   */\n    tag_334:\n        /* \"#utility.yul\":3026:3031   */\n      0x00\n        /* \"#utility.yul\":3051:3117   */\n      tag_431\n        /* \"#utility.yul\":3067:3116   */\n      tag_432\n        /* \"#utility.yul\":3109:3115   */\n      dup5\n        /* \"#utility.yul\":3067:3116   */\n      tag_332\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3051:3117   */\n      tag_331\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":3042:3117   */\n      swap1\n      pop\n        /* \"#utility.yul\":3140:3146   */\n      dup3\n        /* \"#utility.yul\":3133:3138   */\n      dup2\n        /* \"#utility.yul\":3126:3147   */\n      mstore\n        /* \"#utility.yul\":3178:3182   */\n      0x20\n        /* \"#utility.yul\":3171:3176   */\n      dup2\n        /* \"#utility.yul\":3167:3183   */\n      add\n        /* \"#utility.yul\":3216:3219   */\n      dup5\n        /* \"#utility.yul\":3207:3213   */\n      dup5\n        /* \"#utility.yul\":3202:3205   */\n      dup5\n        /* \"#utility.yul\":3198:3214   */\n      add\n        /* \"#utility.yul\":3195:3220   */\n      gt\n        /* \"#utility.yul\":3192:3304   */\n      iszero\n      tag_433\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_434\n      tag_327\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3192:3304   */\n    tag_433:\n        /* \"#utility.yul\":3313:3367   */\n      tag_435\n        /* \"#utility.yul\":3360:3366   */\n      dup5\n        /* \"#utility.yul\":3355:3358   */\n      dup3\n        /* \"#utility.yul\":3350:3353   */\n      dup6\n        /* \"#utility.yul\":3313:3367   */\n      tag_333\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3032:3373   */\n      pop\n        /* \"#utility.yul\":2948:3373   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3393:3733   */\n    tag_335:\n        /* \"#utility.yul\":3449:3454   */\n      0x00\n        /* \"#utility.yul\":3498:3501   */\n      dup3\n        /* \"#utility.yul\":3491:3495   */\n      0x1f\n        /* \"#utility.yul\":3483:3489   */\n      dup4\n        /* \"#utility.yul\":3479:3496   */\n      add\n        /* \"#utility.yul\":3475:3502   */\n      slt\n        /* \"#utility.yul\":3465:3587   */\n      tag_437\n      jumpi\n        /* \"#utility.yul\":3506:3585   */\n      tag_438\n      tag_326\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":3465:3587   */\n    tag_437:\n        /* \"#utility.yul\":3623:3629   */\n      dup2\n        /* \"#utility.yul\":3610:3630   */\n      calldataload\n        /* \"#utility.yul\":3648:3727   */\n      tag_439\n        /* \"#utility.yul\":3723:3726   */\n      dup5\n        /* \"#utility.yul\":3715:3721   */\n      dup3\n        /* \"#utility.yul\":3708:3712   */\n      0x20\n        /* \"#utility.yul\":3700:3706   */\n      dup7\n        /* \"#utility.yul\":3696:3713   */\n      add\n        /* \"#utility.yul\":3648:3727   */\n      tag_334\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":3639:3727   */\n      swap2\n      pop\n        /* \"#utility.yul\":3455:3733   */\n      pop\n        /* \"#utility.yul\":3393:3733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3739:4573   */\n    tag_38:\n        /* \"#utility.yul\":3827:3833   */\n      0x00\n        /* \"#utility.yul\":3835:3841   */\n      dup1\n        /* \"#utility.yul\":3884:3886   */\n      0x40\n        /* \"#utility.yul\":3872:3881   */\n      dup4\n        /* \"#utility.yul\":3863:3870   */\n      dup6\n        /* \"#utility.yul\":3859:3882   */\n      sub\n        /* \"#utility.yul\":3855:3887   */\n      slt\n        /* \"#utility.yul\":3852:3971   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":3890:3969   */\n      tag_442\n      tag_319\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":3852:3971   */\n    tag_441:\n        /* \"#utility.yul\":4038:4039   */\n      0x00\n        /* \"#utility.yul\":4027:4036   */\n      dup4\n        /* \"#utility.yul\":4023:4040   */\n      add\n        /* \"#utility.yul\":4010:4041   */\n      calldataload\n        /* \"#utility.yul\":4068:4086   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4060:4066   */\n      dup2\n        /* \"#utility.yul\":4057:4087   */\n      gt\n        /* \"#utility.yul\":4054:4171   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":4090:4169   */\n      tag_444\n      tag_320\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4054:4171   */\n    tag_443:\n        /* \"#utility.yul\":4195:4258   */\n      tag_445\n        /* \"#utility.yul\":4250:4257   */\n      dup6\n        /* \"#utility.yul\":4241:4247   */\n      dup3\n        /* \"#utility.yul\":4230:4239   */\n      dup7\n        /* \"#utility.yul\":4226:4248   */\n      add\n        /* \"#utility.yul\":4195:4258   */\n      tag_335\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":4185:4258   */\n      swap3\n      pop\n        /* \"#utility.yul\":3981:4268   */\n      pop\n        /* \"#utility.yul\":4335:4337   */\n      0x20\n        /* \"#utility.yul\":4324:4333   */\n      dup4\n        /* \"#utility.yul\":4320:4338   */\n      add\n        /* \"#utility.yul\":4307:4339   */\n      calldataload\n        /* \"#utility.yul\":4366:4384   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4358:4364   */\n      dup2\n        /* \"#utility.yul\":4355:4385   */\n      gt\n        /* \"#utility.yul\":4352:4469   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":4388:4467   */\n      tag_447\n      tag_320\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":4352:4469   */\n    tag_446:\n        /* \"#utility.yul\":4493:4556   */\n      tag_448\n        /* \"#utility.yul\":4548:4555   */\n      dup6\n        /* \"#utility.yul\":4539:4545   */\n      dup3\n        /* \"#utility.yul\":4528:4537   */\n      dup7\n        /* \"#utility.yul\":4524:4546   */\n      add\n        /* \"#utility.yul\":4493:4556   */\n      tag_335\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":4483:4556   */\n      swap2\n      pop\n        /* \"#utility.yul\":4278:4566   */\n      pop\n        /* \"#utility.yul\":3739:4573   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4579:4656   */\n    tag_336:\n        /* \"#utility.yul\":4616:4623   */\n      0x00\n        /* \"#utility.yul\":4645:4650   */\n      dup2\n        /* \"#utility.yul\":4634:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4579:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4784   */\n    tag_337:\n        /* \"#utility.yul\":4735:4759   */\n      tag_451\n        /* \"#utility.yul\":4753:4758   */\n      dup2\n        /* \"#utility.yul\":4735:4759   */\n      tag_336\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":4728:4733   */\n      dup2\n        /* \"#utility.yul\":4725:4760   */\n      eq\n        /* \"#utility.yul\":4715:4778   */\n      tag_452\n      jumpi\n        /* \"#utility.yul\":4774:4775   */\n      0x00\n        /* \"#utility.yul\":4771:4772   */\n      dup1\n        /* \"#utility.yul\":4764:4776   */\n      revert\n        /* \"#utility.yul\":4715:4778   */\n    tag_452:\n        /* \"#utility.yul\":4662:4784   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4790:4929   */\n    tag_338:\n        /* \"#utility.yul\":4836:4841   */\n      0x00\n        /* \"#utility.yul\":4874:4880   */\n      dup2\n        /* \"#utility.yul\":4861:4881   */\n      calldataload\n        /* \"#utility.yul\":4852:4881   */\n      swap1\n      pop\n        /* \"#utility.yul\":4890:4923   */\n      tag_454\n        /* \"#utility.yul\":4917:4922   */\n      dup2\n        /* \"#utility.yul\":4890:4923   */\n      tag_337\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":4790:4929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4935:5264   */\n    tag_43:\n        /* \"#utility.yul\":4994:5000   */\n      0x00\n        /* \"#utility.yul\":5043:5045   */\n      0x20\n        /* \"#utility.yul\":5031:5040   */\n      dup3\n        /* \"#utility.yul\":5022:5029   */\n      dup5\n        /* \"#utility.yul\":5018:5041   */\n      sub\n        /* \"#utility.yul\":5014:5046   */\n      slt\n        /* \"#utility.yul\":5011:5130   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":5049:5128   */\n      tag_457\n      tag_319\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5011:5130   */\n    tag_456:\n        /* \"#utility.yul\":5169:5170   */\n      0x00\n        /* \"#utility.yul\":5194:5247   */\n      tag_458\n        /* \"#utility.yul\":5239:5246   */\n      dup5\n        /* \"#utility.yul\":5230:5236   */\n      dup3\n        /* \"#utility.yul\":5219:5228   */\n      dup6\n        /* \"#utility.yul\":5215:5237   */\n      add\n        /* \"#utility.yul\":5194:5247   */\n      tag_338\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":5184:5247   */\n      swap2\n      pop\n        /* \"#utility.yul\":5140:5257   */\n      pop\n        /* \"#utility.yul\":4935:5264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5270:5388   */\n    tag_339:\n        /* \"#utility.yul\":5357:5381   */\n      tag_460\n        /* \"#utility.yul\":5375:5380   */\n      dup2\n        /* \"#utility.yul\":5357:5381   */\n      tag_336\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":5352:5355   */\n      dup3\n        /* \"#utility.yul\":5345:5382   */\n      mstore\n        /* \"#utility.yul\":5270:5388   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5394:5616   */\n    tag_46:\n        /* \"#utility.yul\":5487:5491   */\n      0x00\n        /* \"#utility.yul\":5525:5527   */\n      0x20\n        /* \"#utility.yul\":5514:5523   */\n      dup3\n        /* \"#utility.yul\":5510:5528   */\n      add\n        /* \"#utility.yul\":5502:5528   */\n      swap1\n      pop\n        /* \"#utility.yul\":5538:5609   */\n      tag_462\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5595:5604   */\n      dup4\n        /* \"#utility.yul\":5591:5608   */\n      add\n        /* \"#utility.yul\":5582:5588   */\n      dup5\n        /* \"#utility.yul\":5538:5609   */\n      tag_339\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":5394:5616   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5622:5699   */\n    tag_340:\n        /* \"#utility.yul\":5659:5666   */\n      0x00\n        /* \"#utility.yul\":5688:5693   */\n      dup2\n        /* \"#utility.yul\":5677:5693   */\n      swap1\n      pop\n        /* \"#utility.yul\":5622:5699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5705:5827   */\n    tag_341:\n        /* \"#utility.yul\":5778:5802   */\n      tag_465\n        /* \"#utility.yul\":5796:5801   */\n      dup2\n        /* \"#utility.yul\":5778:5802   */\n      tag_340\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":5771:5776   */\n      dup2\n        /* \"#utility.yul\":5768:5803   */\n      eq\n        /* \"#utility.yul\":5758:5821   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":5817:5818   */\n      0x00\n        /* \"#utility.yul\":5814:5815   */\n      dup1\n        /* \"#utility.yul\":5807:5819   */\n      revert\n        /* \"#utility.yul\":5758:5821   */\n    tag_466:\n        /* \"#utility.yul\":5705:5827   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5833:5972   */\n    tag_342:\n        /* \"#utility.yul\":5879:5884   */\n      0x00\n        /* \"#utility.yul\":5917:5923   */\n      dup2\n        /* \"#utility.yul\":5904:5924   */\n      calldataload\n        /* \"#utility.yul\":5895:5924   */\n      swap1\n      pop\n        /* \"#utility.yul\":5933:5966   */\n      tag_468\n        /* \"#utility.yul\":5960:5965   */\n      dup2\n        /* \"#utility.yul\":5933:5966   */\n      tag_341\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":5833:5972   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5978:6307   */\n    tag_50:\n        /* \"#utility.yul\":6037:6043   */\n      0x00\n        /* \"#utility.yul\":6086:6088   */\n      0x20\n        /* \"#utility.yul\":6074:6083   */\n      dup3\n        /* \"#utility.yul\":6065:6072   */\n      dup5\n        /* \"#utility.yul\":6061:6084   */\n      sub\n        /* \"#utility.yul\":6057:6089   */\n      slt\n        /* \"#utility.yul\":6054:6173   */\n      iszero\n      tag_470\n      jumpi\n        /* \"#utility.yul\":6092:6171   */\n      tag_471\n      tag_319\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6054:6173   */\n    tag_470:\n        /* \"#utility.yul\":6212:6213   */\n      0x00\n        /* \"#utility.yul\":6237:6290   */\n      tag_472\n        /* \"#utility.yul\":6282:6289   */\n      dup5\n        /* \"#utility.yul\":6273:6279   */\n      dup3\n        /* \"#utility.yul\":6262:6271   */\n      dup6\n        /* \"#utility.yul\":6258:6280   */\n      add\n        /* \"#utility.yul\":6237:6290   */\n      tag_342\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":6227:6290   */\n      swap2\n      pop\n        /* \"#utility.yul\":6183:6300   */\n      pop\n        /* \"#utility.yul\":5978:6307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6313:6431   */\n    tag_343:\n        /* \"#utility.yul\":6400:6424   */\n      tag_474\n        /* \"#utility.yul\":6418:6423   */\n      dup2\n        /* \"#utility.yul\":6400:6424   */\n      tag_340\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":6395:6398   */\n      dup3\n        /* \"#utility.yul\":6388:6425   */\n      mstore\n        /* \"#utility.yul\":6313:6431   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6437:6659   */\n    tag_53:\n        /* \"#utility.yul\":6530:6534   */\n      0x00\n        /* \"#utility.yul\":6568:6570   */\n      0x20\n        /* \"#utility.yul\":6557:6566   */\n      dup3\n        /* \"#utility.yul\":6553:6571   */\n      add\n        /* \"#utility.yul\":6545:6571   */\n      swap1\n      pop\n        /* \"#utility.yul\":6581:6652   */\n      tag_476\n        /* \"#utility.yul\":6649:6650   */\n      0x00\n        /* \"#utility.yul\":6638:6647   */\n      dup4\n        /* \"#utility.yul\":6634:6651   */\n      add\n        /* \"#utility.yul\":6625:6631   */\n      dup5\n        /* \"#utility.yul\":6581:6652   */\n      tag_343\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":6437:6659   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6665:6791   */\n    tag_344:\n        /* \"#utility.yul\":6702:6709   */\n      0x00\n        /* \"#utility.yul\":6742:6784   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6735:6740   */\n      dup3\n        /* \"#utility.yul\":6731:6785   */\n      and\n        /* \"#utility.yul\":6720:6785   */\n      swap1\n      pop\n        /* \"#utility.yul\":6665:6791   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6797:6893   */\n    tag_345:\n        /* \"#utility.yul\":6834:6841   */\n      0x00\n        /* \"#utility.yul\":6863:6887   */\n      tag_479\n        /* \"#utility.yul\":6881:6886   */\n      dup3\n        /* \"#utility.yul\":6863:6887   */\n      tag_344\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":6852:6887   */\n      swap1\n      pop\n        /* \"#utility.yul\":6797:6893   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6899:7021   */\n    tag_346:\n        /* \"#utility.yul\":6972:6996   */\n      tag_481\n        /* \"#utility.yul\":6990:6995   */\n      dup2\n        /* \"#utility.yul\":6972:6996   */\n      tag_345\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":6965:6970   */\n      dup2\n        /* \"#utility.yul\":6962:6997   */\n      eq\n        /* \"#utility.yul\":6952:7015   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":7011:7012   */\n      0x00\n        /* \"#utility.yul\":7008:7009   */\n      dup1\n        /* \"#utility.yul\":7001:7013   */\n      revert\n        /* \"#utility.yul\":6952:7015   */\n    tag_482:\n        /* \"#utility.yul\":6899:7021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7027:7166   */\n    tag_347:\n        /* \"#utility.yul\":7073:7078   */\n      0x00\n        /* \"#utility.yul\":7111:7117   */\n      dup2\n        /* \"#utility.yul\":7098:7118   */\n      calldataload\n        /* \"#utility.yul\":7089:7118   */\n      swap1\n      pop\n        /* \"#utility.yul\":7127:7160   */\n      tag_484\n        /* \"#utility.yul\":7154:7159   */\n      dup2\n        /* \"#utility.yul\":7127:7160   */\n      tag_346\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7027:7166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7172:7646   */\n    tag_61:\n        /* \"#utility.yul\":7240:7246   */\n      0x00\n        /* \"#utility.yul\":7248:7254   */\n      dup1\n        /* \"#utility.yul\":7297:7299   */\n      0x40\n        /* \"#utility.yul\":7285:7294   */\n      dup4\n        /* \"#utility.yul\":7276:7283   */\n      dup6\n        /* \"#utility.yul\":7272:7295   */\n      sub\n        /* \"#utility.yul\":7268:7300   */\n      slt\n        /* \"#utility.yul\":7265:7384   */\n      iszero\n      tag_486\n      jumpi\n        /* \"#utility.yul\":7303:7382   */\n      tag_487\n      tag_319\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7265:7384   */\n    tag_486:\n        /* \"#utility.yul\":7423:7424   */\n      0x00\n        /* \"#utility.yul\":7448:7501   */\n      tag_488\n        /* \"#utility.yul\":7493:7500   */\n      dup6\n        /* \"#utility.yul\":7484:7490   */\n      dup3\n        /* \"#utility.yul\":7473:7482   */\n      dup7\n        /* \"#utility.yul\":7469:7491   */\n      add\n        /* \"#utility.yul\":7448:7501   */\n      tag_338\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":7438:7501   */\n      swap3\n      pop\n        /* \"#utility.yul\":7394:7511   */\n      pop\n        /* \"#utility.yul\":7550:7552   */\n      0x20\n        /* \"#utility.yul\":7576:7629   */\n      tag_489\n        /* \"#utility.yul\":7621:7628   */\n      dup6\n        /* \"#utility.yul\":7612:7618   */\n      dup3\n        /* \"#utility.yul\":7601:7610   */\n      dup7\n        /* \"#utility.yul\":7597:7619   */\n      add\n        /* \"#utility.yul\":7576:7629   */\n      tag_347\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":7566:7629   */\n      swap2\n      pop\n        /* \"#utility.yul\":7521:7639   */\n      pop\n        /* \"#utility.yul\":7172:7646   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7652:7770   */\n    tag_348:\n        /* \"#utility.yul\":7739:7763   */\n      tag_491\n        /* \"#utility.yul\":7757:7762   */\n      dup2\n        /* \"#utility.yul\":7739:7763   */\n      tag_345\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":7734:7737   */\n      dup3\n        /* \"#utility.yul\":7727:7764   */\n      mstore\n        /* \"#utility.yul\":7652:7770   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7776:7998   */\n    tag_67:\n        /* \"#utility.yul\":7869:7873   */\n      0x00\n        /* \"#utility.yul\":7907:7909   */\n      0x20\n        /* \"#utility.yul\":7896:7905   */\n      dup3\n        /* \"#utility.yul\":7892:7910   */\n      add\n        /* \"#utility.yul\":7884:7910   */\n      swap1\n      pop\n        /* \"#utility.yul\":7920:7991   */\n      tag_493\n        /* \"#utility.yul\":7988:7989   */\n      0x00\n        /* \"#utility.yul\":7977:7986   */\n      dup4\n        /* \"#utility.yul\":7973:7990   */\n      add\n        /* \"#utility.yul\":7964:7970   */\n      dup5\n        /* \"#utility.yul\":7920:7991   */\n      tag_348\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":7776:7998   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8004:8478   */\n    tag_71:\n        /* \"#utility.yul\":8072:8078   */\n      0x00\n        /* \"#utility.yul\":8080:8086   */\n      dup1\n        /* \"#utility.yul\":8129:8131   */\n      0x40\n        /* \"#utility.yul\":8117:8126   */\n      dup4\n        /* \"#utility.yul\":8108:8115   */\n      dup6\n        /* \"#utility.yul\":8104:8127   */\n      sub\n        /* \"#utility.yul\":8100:8132   */\n      slt\n        /* \"#utility.yul\":8097:8216   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":8135:8214   */\n      tag_496\n      tag_319\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":8097:8216   */\n    tag_495:\n        /* \"#utility.yul\":8255:8256   */\n      0x00\n        /* \"#utility.yul\":8280:8333   */\n      tag_497\n        /* \"#utility.yul\":8325:8332   */\n      dup6\n        /* \"#utility.yul\":8316:8322   */\n      dup3\n        /* \"#utility.yul\":8305:8314   */\n      dup7\n        /* \"#utility.yul\":8301:8323   */\n      add\n        /* \"#utility.yul\":8280:8333   */\n      tag_347\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8270:8333   */\n      swap3\n      pop\n        /* \"#utility.yul\":8226:8343   */\n      pop\n        /* \"#utility.yul\":8382:8384   */\n      0x20\n        /* \"#utility.yul\":8408:8461   */\n      tag_498\n        /* \"#utility.yul\":8453:8460   */\n      dup6\n        /* \"#utility.yul\":8444:8450   */\n      dup3\n        /* \"#utility.yul\":8433:8442   */\n      dup7\n        /* \"#utility.yul\":8429:8451   */\n      add\n        /* \"#utility.yul\":8408:8461   */\n      tag_342\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":8398:8461   */\n      swap2\n      pop\n        /* \"#utility.yul\":8353:8471   */\n      pop\n        /* \"#utility.yul\":8004:8478   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8484:8570   */\n    tag_349:\n        /* \"#utility.yul\":8519:8526   */\n      0x00\n        /* \"#utility.yul\":8559:8563   */\n      0xff\n        /* \"#utility.yul\":8552:8557   */\n      dup3\n        /* \"#utility.yul\":8548:8564   */\n      and\n        /* \"#utility.yul\":8537:8564   */\n      swap1\n      pop\n        /* \"#utility.yul\":8484:8570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8576:8694   */\n    tag_350:\n        /* \"#utility.yul\":8647:8669   */\n      tag_501\n        /* \"#utility.yul\":8663:8668   */\n      dup2\n        /* \"#utility.yul\":8647:8669   */\n      tag_349\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":8640:8645   */\n      dup2\n        /* \"#utility.yul\":8637:8670   */\n      eq\n        /* \"#utility.yul\":8627:8688   */\n      tag_502\n      jumpi\n        /* \"#utility.yul\":8684:8685   */\n      0x00\n        /* \"#utility.yul\":8681:8682   */\n      dup1\n        /* \"#utility.yul\":8674:8686   */\n      revert\n        /* \"#utility.yul\":8627:8688   */\n    tag_502:\n        /* \"#utility.yul\":8576:8694   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8700:8835   */\n    tag_351:\n        /* \"#utility.yul\":8744:8749   */\n      0x00\n        /* \"#utility.yul\":8782:8788   */\n      dup2\n        /* \"#utility.yul\":8769:8789   */\n      calldataload\n        /* \"#utility.yul\":8760:8789   */\n      swap1\n      pop\n        /* \"#utility.yul\":8798:8829   */\n      tag_504\n        /* \"#utility.yul\":8823:8828   */\n      dup2\n        /* \"#utility.yul\":8798:8829   */\n      tag_350\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":8700:8835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8841:8957   */\n    tag_352:\n        /* \"#utility.yul\":8911:8932   */\n      tag_506\n        /* \"#utility.yul\":8926:8931   */\n      dup2\n        /* \"#utility.yul\":8911:8932   */\n      tag_324\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":8904:8909   */\n      dup2\n        /* \"#utility.yul\":8901:8933   */\n      eq\n        /* \"#utility.yul\":8891:8951   */\n      tag_507\n      jumpi\n        /* \"#utility.yul\":8947:8948   */\n      0x00\n        /* \"#utility.yul\":8944:8945   */\n      dup1\n        /* \"#utility.yul\":8937:8949   */\n      revert\n        /* \"#utility.yul\":8891:8951   */\n    tag_507:\n        /* \"#utility.yul\":8841:8957   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8963:9096   */\n    tag_353:\n        /* \"#utility.yul\":9006:9011   */\n      0x00\n        /* \"#utility.yul\":9044:9050   */\n      dup2\n        /* \"#utility.yul\":9031:9051   */\n      calldataload\n        /* \"#utility.yul\":9022:9051   */\n      swap1\n      pop\n        /* \"#utility.yul\":9060:9090   */\n      tag_509\n        /* \"#utility.yul\":9084:9089   */\n      dup2\n        /* \"#utility.yul\":9060:9090   */\n      tag_352\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8963:9096   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9102:9857   */\n    tag_88:\n        /* \"#utility.yul\":9183:9189   */\n      0x00\n        /* \"#utility.yul\":9191:9197   */\n      dup1\n        /* \"#utility.yul\":9199:9205   */\n      0x00\n        /* \"#utility.yul\":9207:9213   */\n      dup1\n        /* \"#utility.yul\":9256:9259   */\n      0x80\n        /* \"#utility.yul\":9244:9253   */\n      dup6\n        /* \"#utility.yul\":9235:9242   */\n      dup8\n        /* \"#utility.yul\":9231:9254   */\n      sub\n        /* \"#utility.yul\":9227:9260   */\n      slt\n        /* \"#utility.yul\":9224:9344   */\n      iszero\n      tag_511\n      jumpi\n        /* \"#utility.yul\":9263:9342   */\n      tag_512\n      tag_319\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":9224:9344   */\n    tag_511:\n        /* \"#utility.yul\":9383:9384   */\n      0x00\n        /* \"#utility.yul\":9408:9461   */\n      tag_513\n        /* \"#utility.yul\":9453:9460   */\n      dup8\n        /* \"#utility.yul\":9444:9450   */\n      dup3\n        /* \"#utility.yul\":9433:9442   */\n      dup9\n        /* \"#utility.yul\":9429:9451   */\n      add\n        /* \"#utility.yul\":9408:9461   */\n      tag_347\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":9398:9461   */\n      swap5\n      pop\n        /* \"#utility.yul\":9354:9471   */\n      pop\n        /* \"#utility.yul\":9510:9512   */\n      0x20\n        /* \"#utility.yul\":9536:9587   */\n      tag_514\n        /* \"#utility.yul\":9579:9586   */\n      dup8\n        /* \"#utility.yul\":9570:9576   */\n      dup3\n        /* \"#utility.yul\":9559:9568   */\n      dup9\n        /* \"#utility.yul\":9555:9577   */\n      add\n        /* \"#utility.yul\":9536:9587   */\n      tag_351\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":9526:9587   */\n      swap4\n      pop\n        /* \"#utility.yul\":9481:9597   */\n      pop\n        /* \"#utility.yul\":9636:9638   */\n      0x40\n        /* \"#utility.yul\":9662:9715   */\n      tag_515\n        /* \"#utility.yul\":9707:9714   */\n      dup8\n        /* \"#utility.yul\":9698:9704   */\n      dup3\n        /* \"#utility.yul\":9687:9696   */\n      dup9\n        /* \"#utility.yul\":9683:9705   */\n      add\n        /* \"#utility.yul\":9662:9715   */\n      tag_347\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":9652:9715   */\n      swap3\n      pop\n        /* \"#utility.yul\":9607:9725   */\n      pop\n        /* \"#utility.yul\":9764:9766   */\n      0x60\n        /* \"#utility.yul\":9790:9840   */\n      tag_516\n        /* \"#utility.yul\":9832:9839   */\n      dup8\n        /* \"#utility.yul\":9823:9829   */\n      dup3\n        /* \"#utility.yul\":9812:9821   */\n      dup9\n        /* \"#utility.yul\":9808:9830   */\n      add\n        /* \"#utility.yul\":9790:9840   */\n      tag_353\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":9780:9840   */\n      swap2\n      pop\n        /* \"#utility.yul\":9735:9850   */\n      pop\n        /* \"#utility.yul\":9102:9857   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9863:9923   */\n    tag_354:\n        /* \"#utility.yul\":9891:9894   */\n      0x00\n        /* \"#utility.yul\":9912:9917   */\n      dup2\n        /* \"#utility.yul\":9905:9917   */\n      swap1\n      pop\n        /* \"#utility.yul\":9863:9923   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9929:10071   */\n    tag_355:\n        /* \"#utility.yul\":9979:9988   */\n      0x00\n        /* \"#utility.yul\":10012:10065   */\n      tag_519\n        /* \"#utility.yul\":10030:10064   */\n      tag_520\n        /* \"#utility.yul\":10039:10063   */\n      tag_521\n        /* \"#utility.yul\":10057:10062   */\n      dup5\n        /* \"#utility.yul\":10039:10063   */\n      tag_344\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":10030:10064   */\n      tag_354\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10012:10065   */\n      tag_344\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":9999:10065   */\n      swap1\n      pop\n        /* \"#utility.yul\":9929:10071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10077:10203   */\n    tag_356:\n        /* \"#utility.yul\":10127:10136   */\n      0x00\n        /* \"#utility.yul\":10160:10197   */\n      tag_523\n        /* \"#utility.yul\":10191:10196   */\n      dup3\n        /* \"#utility.yul\":10160:10197   */\n      tag_355\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":10147:10197   */\n      swap1\n      pop\n        /* \"#utility.yul\":10077:10203   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10209:10363   */\n    tag_357:\n        /* \"#utility.yul\":10287:10296   */\n      0x00\n        /* \"#utility.yul\":10320:10357   */\n      tag_525\n        /* \"#utility.yul\":10351:10356   */\n      dup3\n        /* \"#utility.yul\":10320:10357   */\n      tag_356\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10307:10357   */\n      swap1\n      pop\n        /* \"#utility.yul\":10209:10363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10369:10556   */\n    tag_358:\n        /* \"#utility.yul\":10484:10549   */\n      tag_527\n        /* \"#utility.yul\":10543:10548   */\n      dup2\n        /* \"#utility.yul\":10484:10549   */\n      tag_357\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10479:10482   */\n      dup3\n        /* \"#utility.yul\":10472:10550   */\n      mstore\n        /* \"#utility.yul\":10369:10556   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10562:10840   */\n    tag_115:\n        /* \"#utility.yul\":10683:10687   */\n      0x00\n        /* \"#utility.yul\":10721:10723   */\n      0x20\n        /* \"#utility.yul\":10710:10719   */\n      dup3\n        /* \"#utility.yul\":10706:10724   */\n      add\n        /* \"#utility.yul\":10698:10724   */\n      swap1\n      pop\n        /* \"#utility.yul\":10734:10833   */\n      tag_529\n        /* \"#utility.yul\":10830:10831   */\n      0x00\n        /* \"#utility.yul\":10819:10828   */\n      dup4\n        /* \"#utility.yul\":10815:10832   */\n      add\n        /* \"#utility.yul\":10806:10812   */\n      dup5\n        /* \"#utility.yul\":10734:10833   */\n      tag_358\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":10562:10840   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10846:11320   */\n    tag_121:\n        /* \"#utility.yul\":10914:10920   */\n      0x00\n        /* \"#utility.yul\":10922:10928   */\n      dup1\n        /* \"#utility.yul\":10971:10973   */\n      0x40\n        /* \"#utility.yul\":10959:10968   */\n      dup4\n        /* \"#utility.yul\":10950:10957   */\n      dup6\n        /* \"#utility.yul\":10946:10969   */\n      sub\n        /* \"#utility.yul\":10942:10974   */\n      slt\n        /* \"#utility.yul\":10939:11058   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":10977:11056   */\n      tag_532\n      tag_319\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":10939:11058   */\n    tag_531:\n        /* \"#utility.yul\":11097:11098   */\n      0x00\n        /* \"#utility.yul\":11122:11175   */\n      tag_533\n        /* \"#utility.yul\":11167:11174   */\n      dup6\n        /* \"#utility.yul\":11158:11164   */\n      dup3\n        /* \"#utility.yul\":11147:11156   */\n      dup7\n        /* \"#utility.yul\":11143:11165   */\n      add\n        /* \"#utility.yul\":11122:11175   */\n      tag_347\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":11112:11175   */\n      swap3\n      pop\n        /* \"#utility.yul\":11068:11185   */\n      pop\n        /* \"#utility.yul\":11224:11226   */\n      0x20\n        /* \"#utility.yul\":11250:11303   */\n      tag_534\n        /* \"#utility.yul\":11295:11302   */\n      dup6\n        /* \"#utility.yul\":11286:11292   */\n      dup3\n        /* \"#utility.yul\":11275:11284   */\n      dup7\n        /* \"#utility.yul\":11271:11293   */\n      add\n        /* \"#utility.yul\":11250:11303   */\n      tag_347\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":11240:11303   */\n      swap2\n      pop\n        /* \"#utility.yul\":11195:11313   */\n      pop\n        /* \"#utility.yul\":10846:11320   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11326:11506   */\n    tag_359:\n        /* \"#utility.yul\":11374:11451   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11371:11372   */\n      0x00\n        /* \"#utility.yul\":11364:11452   */\n      mstore\n        /* \"#utility.yul\":11471:11475   */\n      0x11\n        /* \"#utility.yul\":11468:11469   */\n      0x04\n        /* \"#utility.yul\":11461:11476   */\n      mstore\n        /* \"#utility.yul\":11495:11499   */\n      0x24\n        /* \"#utility.yul\":11492:11493   */\n      0x00\n        /* \"#utility.yul\":11485:11500   */\n      revert\n        /* \"#utility.yul\":11512:11703   */\n    tag_147:\n        /* \"#utility.yul\":11552:11555   */\n      0x00\n        /* \"#utility.yul\":11571:11591   */\n      tag_537\n        /* \"#utility.yul\":11589:11590   */\n      dup3\n        /* \"#utility.yul\":11571:11591   */\n      tag_340\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11566:11591   */\n      swap2\n      pop\n        /* \"#utility.yul\":11605:11625   */\n      tag_538\n        /* \"#utility.yul\":11623:11624   */\n      dup4\n        /* \"#utility.yul\":11605:11625   */\n      tag_340\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":11600:11625   */\n      swap3\n      pop\n        /* \"#utility.yul\":11648:11649   */\n      dup3\n        /* \"#utility.yul\":11645:11646   */\n      dup3\n        /* \"#utility.yul\":11641:11650   */\n      add\n        /* \"#utility.yul\":11634:11650   */\n      swap1\n      pop\n        /* \"#utility.yul\":11669:11672   */\n      dup1\n        /* \"#utility.yul\":11666:11667   */\n      dup3\n        /* \"#utility.yul\":11663:11673   */\n      gt\n        /* \"#utility.yul\":11660:11696   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":11676:11694   */\n      tag_540\n      tag_359\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":11660:11696   */\n    tag_539:\n        /* \"#utility.yul\":11512:11703   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11709:11808   */\n    tag_360:\n        /* \"#utility.yul\":11761:11767   */\n      0x00\n        /* \"#utility.yul\":11795:11800   */\n      dup2\n        /* \"#utility.yul\":11789:11801   */\n      mload\n        /* \"#utility.yul\":11779:11801   */\n      swap1\n      pop\n        /* \"#utility.yul\":11709:11808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11814:11994   */\n    tag_361:\n        /* \"#utility.yul\":11862:11939   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11859:11860   */\n      0x00\n        /* \"#utility.yul\":11852:11940   */\n      mstore\n        /* \"#utility.yul\":11959:11963   */\n      0x22\n        /* \"#utility.yul\":11956:11957   */\n      0x04\n        /* \"#utility.yul\":11949:11964   */\n      mstore\n        /* \"#utility.yul\":11983:11987   */\n      0x24\n        /* \"#utility.yul\":11980:11981   */\n      0x00\n        /* \"#utility.yul\":11973:11988   */\n      revert\n        /* \"#utility.yul\":12000:12320   */\n    tag_362:\n        /* \"#utility.yul\":12044:12050   */\n      0x00\n        /* \"#utility.yul\":12081:12082   */\n      0x02\n        /* \"#utility.yul\":12075:12079   */\n      dup3\n        /* \"#utility.yul\":12071:12083   */\n      div\n        /* \"#utility.yul\":12061:12083   */\n      swap1\n      pop\n        /* \"#utility.yul\":12128:12129   */\n      0x01\n        /* \"#utility.yul\":12122:12126   */\n      dup3\n        /* \"#utility.yul\":12118:12130   */\n      and\n        /* \"#utility.yul\":12149:12167   */\n      dup1\n        /* \"#utility.yul\":12139:12220   */\n      tag_544\n      jumpi\n        /* \"#utility.yul\":12205:12209   */\n      0x7f\n        /* \"#utility.yul\":12197:12203   */\n      dup3\n        /* \"#utility.yul\":12193:12210   */\n      and\n        /* \"#utility.yul\":12183:12210   */\n      swap2\n      pop\n        /* \"#utility.yul\":12139:12220   */\n    tag_544:\n        /* \"#utility.yul\":12267:12269   */\n      0x20\n        /* \"#utility.yul\":12259:12265   */\n      dup3\n        /* \"#utility.yul\":12256:12270   */\n      lt\n        /* \"#utility.yul\":12236:12254   */\n      dup2\n        /* \"#utility.yul\":12233:12271   */\n      sub\n        /* \"#utility.yul\":12230:12314   */\n      tag_545\n      jumpi\n        /* \"#utility.yul\":12286:12304   */\n      tag_546\n      tag_361\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":12230:12314   */\n    tag_545:\n        /* \"#utility.yul\":12051:12320   */\n      pop\n        /* \"#utility.yul\":12000:12320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12326:12467   */\n    tag_363:\n        /* \"#utility.yul\":12375:12379   */\n      0x00\n        /* \"#utility.yul\":12398:12401   */\n      dup2\n        /* \"#utility.yul\":12390:12401   */\n      swap1\n      pop\n        /* \"#utility.yul\":12421:12424   */\n      dup2\n        /* \"#utility.yul\":12418:12419   */\n      0x00\n        /* \"#utility.yul\":12411:12425   */\n      mstore\n        /* \"#utility.yul\":12455:12459   */\n      0x20\n        /* \"#utility.yul\":12452:12453   */\n      0x00\n        /* \"#utility.yul\":12442:12460   */\n      keccak256\n        /* \"#utility.yul\":12434:12460   */\n      swap1\n      pop\n        /* \"#utility.yul\":12326:12467   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12473:12566   */\n    tag_364:\n        /* \"#utility.yul\":12510:12516   */\n      0x00\n        /* \"#utility.yul\":12557:12559   */\n      0x20\n        /* \"#utility.yul\":12552:12554   */\n      0x1f\n        /* \"#utility.yul\":12545:12550   */\n      dup4\n        /* \"#utility.yul\":12541:12555   */\n      add\n        /* \"#utility.yul\":12537:12560   */\n      div\n        /* \"#utility.yul\":12527:12560   */\n      swap1\n      pop\n        /* \"#utility.yul\":12473:12566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12572:12679   */\n    tag_365:\n        /* \"#utility.yul\":12616:12624   */\n      0x00\n        /* \"#utility.yul\":12666:12671   */\n      dup3\n        /* \"#utility.yul\":12660:12664   */\n      dup3\n        /* \"#utility.yul\":12656:12672   */\n      shl\n        /* \"#utility.yul\":12635:12672   */\n      swap1\n      pop\n        /* \"#utility.yul\":12572:12679   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12685:13078   */\n    tag_366:\n        /* \"#utility.yul\":12754:12760   */\n      0x00\n        /* \"#utility.yul\":12804:12805   */\n      0x08\n        /* \"#utility.yul\":12792:12802   */\n      dup4\n        /* \"#utility.yul\":12788:12806   */\n      mul\n        /* \"#utility.yul\":12827:12924   */\n      tag_551\n        /* \"#utility.yul\":12857:12923   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12846:12855   */\n      dup3\n        /* \"#utility.yul\":12827:12924   */\n      tag_365\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":12945:12984   */\n      tag_552\n        /* \"#utility.yul\":12975:12983   */\n      dup7\n        /* \"#utility.yul\":12964:12973   */\n      dup4\n        /* \"#utility.yul\":12945:12984   */\n      tag_365\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12933:12984   */\n      swap6\n      pop\n        /* \"#utility.yul\":13017:13021   */\n      dup1\n        /* \"#utility.yul\":13013:13022   */\n      not\n        /* \"#utility.yul\":13006:13011   */\n      dup5\n        /* \"#utility.yul\":13002:13023   */\n      and\n        /* \"#utility.yul\":12993:13023   */\n      swap4\n      pop\n        /* \"#utility.yul\":13066:13070   */\n      dup1\n        /* \"#utility.yul\":13056:13064   */\n      dup7\n        /* \"#utility.yul\":13052:13071   */\n      and\n        /* \"#utility.yul\":13045:13050   */\n      dup5\n        /* \"#utility.yul\":13042:13072   */\n      or\n        /* \"#utility.yul\":13032:13072   */\n      swap3\n      pop\n        /* \"#utility.yul\":12761:13078   */\n      pop\n      pop\n        /* \"#utility.yul\":12685:13078   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13084:13226   */\n    tag_367:\n        /* \"#utility.yul\":13134:13143   */\n      0x00\n        /* \"#utility.yul\":13167:13220   */\n      tag_554\n        /* \"#utility.yul\":13185:13219   */\n      tag_555\n        /* \"#utility.yul\":13194:13218   */\n      tag_556\n        /* \"#utility.yul\":13212:13217   */\n      dup5\n        /* \"#utility.yul\":13194:13218   */\n      tag_340\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":13185:13219   */\n      tag_354\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13167:13220   */\n      tag_340\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":13154:13220   */\n      swap1\n      pop\n        /* \"#utility.yul\":13084:13226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13232:13307   */\n    tag_368:\n        /* \"#utility.yul\":13275:13278   */\n      0x00\n        /* \"#utility.yul\":13296:13301   */\n      dup2\n        /* \"#utility.yul\":13289:13301   */\n      swap1\n      pop\n        /* \"#utility.yul\":13232:13307   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13313:13582   */\n    tag_369:\n        /* \"#utility.yul\":13423:13462   */\n      tag_559\n        /* \"#utility.yul\":13454:13461   */\n      dup4\n        /* \"#utility.yul\":13423:13462   */\n      tag_367\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":13484:13575   */\n      tag_560\n        /* \"#utility.yul\":13533:13574   */\n      tag_561\n        /* \"#utility.yul\":13557:13573   */\n      dup3\n        /* \"#utility.yul\":13533:13574   */\n      tag_368\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":13525:13531   */\n      dup5\n        /* \"#utility.yul\":13518:13522   */\n      dup5\n        /* \"#utility.yul\":13512:13523   */\n      sload\n        /* \"#utility.yul\":13484:13575   */\n      tag_366\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":13478:13482   */\n      dup3\n        /* \"#utility.yul\":13471:13576   */\n      sstore\n        /* \"#utility.yul\":13389:13582   */\n      pop\n        /* \"#utility.yul\":13313:13582   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13588:13661   */\n    tag_370:\n        /* \"#utility.yul\":13633:13636   */\n      0x00\n        /* \"#utility.yul\":13588:13661   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13667:13856   */\n    tag_371:\n        /* \"#utility.yul\":13744:13776   */\n      tag_564\n      tag_370\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":13785:13850   */\n      tag_565\n        /* \"#utility.yul\":13843:13849   */\n      dup2\n        /* \"#utility.yul\":13835:13841   */\n      dup5\n        /* \"#utility.yul\":13829:13833   */\n      dup5\n        /* \"#utility.yul\":13785:13850   */\n      tag_369\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":13720:13856   */\n      pop\n        /* \"#utility.yul\":13667:13856   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13862:14048   */\n    tag_372:\n        /* \"#utility.yul\":13922:14042   */\n    tag_567:\n        /* \"#utility.yul\":13939:13942   */\n      dup2\n        /* \"#utility.yul\":13932:13937   */\n      dup2\n        /* \"#utility.yul\":13929:13943   */\n      lt\n        /* \"#utility.yul\":13922:14042   */\n      iszero\n      tag_569\n      jumpi\n        /* \"#utility.yul\":13993:14032   */\n      tag_570\n        /* \"#utility.yul\":14030:14031   */\n      0x00\n        /* \"#utility.yul\":14023:14028   */\n      dup3\n        /* \"#utility.yul\":13993:14032   */\n      tag_371\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":13966:13967   */\n      0x01\n        /* \"#utility.yul\":13959:13964   */\n      dup2\n        /* \"#utility.yul\":13955:13968   */\n      add\n        /* \"#utility.yul\":13946:13968   */\n      swap1\n      pop\n        /* \"#utility.yul\":13922:14042   */\n      jump(tag_567)\n    tag_569:\n        /* \"#utility.yul\":13862:14048   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14054:14597   */\n    tag_373:\n        /* \"#utility.yul\":14155:14157   */\n      0x1f\n        /* \"#utility.yul\":14150:14153   */\n      dup3\n        /* \"#utility.yul\":14147:14158   */\n      gt\n        /* \"#utility.yul\":14144:14590   */\n      iszero\n      tag_572\n      jumpi\n        /* \"#utility.yul\":14189:14227   */\n      tag_573\n        /* \"#utility.yul\":14221:14226   */\n      dup2\n        /* \"#utility.yul\":14189:14227   */\n      tag_363\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":14273:14302   */\n      tag_574\n        /* \"#utility.yul\":14291:14301   */\n      dup5\n        /* \"#utility.yul\":14273:14302   */\n      tag_364\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":14263:14271   */\n      dup2\n        /* \"#utility.yul\":14259:14303   */\n      add\n        /* \"#utility.yul\":14456:14458   */\n      0x20\n        /* \"#utility.yul\":14444:14454   */\n      dup6\n        /* \"#utility.yul\":14441:14459   */\n      lt\n        /* \"#utility.yul\":14438:14487   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":14477:14485   */\n      dup2\n        /* \"#utility.yul\":14462:14485   */\n      swap1\n      pop\n        /* \"#utility.yul\":14438:14487   */\n    tag_575:\n        /* \"#utility.yul\":14500:14580   */\n      tag_576\n        /* \"#utility.yul\":14556:14578   */\n      tag_577\n        /* \"#utility.yul\":14574:14577   */\n      dup6\n        /* \"#utility.yul\":14556:14578   */\n      tag_364\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":14546:14554   */\n      dup4\n        /* \"#utility.yul\":14542:14579   */\n      add\n        /* \"#utility.yul\":14529:14540   */\n      dup3\n        /* \"#utility.yul\":14500:14580   */\n      tag_372\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":14159:14590   */\n      pop\n      pop\n        /* \"#utility.yul\":14144:14590   */\n    tag_572:\n        /* \"#utility.yul\":14054:14597   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14603:14720   */\n    tag_374:\n        /* \"#utility.yul\":14657:14665   */\n      0x00\n        /* \"#utility.yul\":14707:14712   */\n      dup3\n        /* \"#utility.yul\":14701:14705   */\n      dup3\n        /* \"#utility.yul\":14697:14713   */\n      shr\n        /* \"#utility.yul\":14676:14713   */\n      swap1\n      pop\n        /* \"#utility.yul\":14603:14720   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14726:14895   */\n    tag_375:\n        /* \"#utility.yul\":14770:14776   */\n      0x00\n        /* \"#utility.yul\":14803:14854   */\n      tag_580\n        /* \"#utility.yul\":14851:14852   */\n      0x00\n        /* \"#utility.yul\":14847:14853   */\n      not\n        /* \"#utility.yul\":14839:14844   */\n      dup5\n        /* \"#utility.yul\":14836:14837   */\n      0x08\n        /* \"#utility.yul\":14832:14845   */\n      mul\n        /* \"#utility.yul\":14803:14854   */\n      tag_374\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":14799:14855   */\n      not\n        /* \"#utility.yul\":14884:14888   */\n      dup1\n        /* \"#utility.yul\":14878:14882   */\n      dup4\n        /* \"#utility.yul\":14874:14889   */\n      and\n        /* \"#utility.yul\":14864:14889   */\n      swap2\n      pop\n        /* \"#utility.yul\":14777:14895   */\n      pop\n        /* \"#utility.yul\":14726:14895   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14900:15195   */\n    tag_376:\n        /* \"#utility.yul\":14976:14980   */\n      0x00\n        /* \"#utility.yul\":15122:15151   */\n      tag_582\n        /* \"#utility.yul\":15147:15150   */\n      dup4\n        /* \"#utility.yul\":15141:15145   */\n      dup4\n        /* \"#utility.yul\":15122:15151   */\n      tag_375\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":15114:15151   */\n      swap2\n      pop\n        /* \"#utility.yul\":15184:15187   */\n      dup3\n        /* \"#utility.yul\":15181:15182   */\n      0x02\n        /* \"#utility.yul\":15177:15188   */\n      mul\n        /* \"#utility.yul\":15171:15175   */\n      dup3\n        /* \"#utility.yul\":15168:15189   */\n      or\n        /* \"#utility.yul\":15160:15189   */\n      swap1\n      pop\n        /* \"#utility.yul\":14900:15195   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15200:16595   */\n    tag_150:\n        /* \"#utility.yul\":15317:15354   */\n      tag_584\n        /* \"#utility.yul\":15350:15353   */\n      dup3\n        /* \"#utility.yul\":15317:15354   */\n      tag_360\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":15419:15437   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15411:15417   */\n      dup2\n        /* \"#utility.yul\":15408:15438   */\n      gt\n        /* \"#utility.yul\":15405:15461   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":15441:15459   */\n      tag_586\n      tag_329\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":15405:15461   */\n    tag_585:\n        /* \"#utility.yul\":15485:15523   */\n      tag_587\n        /* \"#utility.yul\":15517:15521   */\n      dup3\n        /* \"#utility.yul\":15511:15522   */\n      sload\n        /* \"#utility.yul\":15485:15523   */\n      tag_362\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":15570:15637   */\n      tag_588\n        /* \"#utility.yul\":15630:15636   */\n      dup3\n        /* \"#utility.yul\":15622:15628   */\n      dup3\n        /* \"#utility.yul\":15616:15620   */\n      dup6\n        /* \"#utility.yul\":15570:15637   */\n      tag_373\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":15664:15665   */\n      0x00\n        /* \"#utility.yul\":15688:15692   */\n      0x20\n        /* \"#utility.yul\":15675:15692   */\n      swap1\n      pop\n        /* \"#utility.yul\":15720:15722   */\n      0x1f\n        /* \"#utility.yul\":15712:15718   */\n      dup4\n        /* \"#utility.yul\":15709:15723   */\n      gt\n        /* \"#utility.yul\":15737:15738   */\n      0x01\n        /* \"#utility.yul\":15732:16350   */\n      dup2\n      eq\n      tag_590\n      jumpi\n        /* \"#utility.yul\":16394:16395   */\n      0x00\n        /* \"#utility.yul\":16411:16417   */\n      dup5\n        /* \"#utility.yul\":16408:16485   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":16460:16469   */\n      dup3\n        /* \"#utility.yul\":16455:16458   */\n      dup8\n        /* \"#utility.yul\":16451:16470   */\n      add\n        /* \"#utility.yul\":16445:16471   */\n      mload\n        /* \"#utility.yul\":16436:16471   */\n      swap1\n      pop\n        /* \"#utility.yul\":16408:16485   */\n    tag_591:\n        /* \"#utility.yul\":16511:16578   */\n      tag_592\n        /* \"#utility.yul\":16571:16577   */\n      dup6\n        /* \"#utility.yul\":16564:16569   */\n      dup3\n        /* \"#utility.yul\":16511:16578   */\n      tag_376\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16505:16509   */\n      dup7\n        /* \"#utility.yul\":16498:16579   */\n      sstore\n        /* \"#utility.yul\":16367:16589   */\n      pop\n        /* \"#utility.yul\":15702:16589   */\n      jump(tag_589)\n        /* \"#utility.yul\":15732:16350   */\n    tag_590:\n        /* \"#utility.yul\":15784:15788   */\n      0x1f\n        /* \"#utility.yul\":15780:15789   */\n      not\n        /* \"#utility.yul\":15772:15778   */\n      dup5\n        /* \"#utility.yul\":15768:15790   */\n      and\n        /* \"#utility.yul\":15818:15855   */\n      tag_593\n        /* \"#utility.yul\":15850:15854   */\n      dup7\n        /* \"#utility.yul\":15818:15855   */\n      tag_363\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":15877:15878   */\n      0x00\n        /* \"#utility.yul\":15891:16099   */\n    tag_594:\n        /* \"#utility.yul\":15905:15912   */\n      dup3\n        /* \"#utility.yul\":15902:15903   */\n      dup2\n        /* \"#utility.yul\":15899:15913   */\n      lt\n        /* \"#utility.yul\":15891:16099   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":15984:15993   */\n      dup5\n        /* \"#utility.yul\":15979:15982   */\n      dup10\n        /* \"#utility.yul\":15975:15994   */\n      add\n        /* \"#utility.yul\":15969:15995   */\n      mload\n        /* \"#utility.yul\":15961:15967   */\n      dup3\n        /* \"#utility.yul\":15954:15996   */\n      sstore\n        /* \"#utility.yul\":16035:16036   */\n      0x01\n        /* \"#utility.yul\":16027:16033   */\n      dup3\n        /* \"#utility.yul\":16023:16037   */\n      add\n        /* \"#utility.yul\":16013:16037   */\n      swap2\n      pop\n        /* \"#utility.yul\":16082:16084   */\n      0x20\n        /* \"#utility.yul\":16071:16080   */\n      dup6\n        /* \"#utility.yul\":16067:16085   */\n      add\n        /* \"#utility.yul\":16054:16085   */\n      swap5\n      pop\n        /* \"#utility.yul\":15928:15932   */\n      0x20\n        /* \"#utility.yul\":15925:15926   */\n      dup2\n        /* \"#utility.yul\":15921:15933   */\n      add\n        /* \"#utility.yul\":15916:15933   */\n      swap1\n      pop\n        /* \"#utility.yul\":15891:16099   */\n      jump(tag_594)\n    tag_596:\n        /* \"#utility.yul\":16127:16133   */\n      dup7\n        /* \"#utility.yul\":16118:16125   */\n      dup4\n        /* \"#utility.yul\":16115:16134   */\n      lt\n        /* \"#utility.yul\":16112:16291   */\n      iszero\n      tag_597\n      jumpi\n        /* \"#utility.yul\":16185:16194   */\n      dup5\n        /* \"#utility.yul\":16180:16183   */\n      dup10\n        /* \"#utility.yul\":16176:16195   */\n      add\n        /* \"#utility.yul\":16170:16196   */\n      mload\n        /* \"#utility.yul\":16228:16276   */\n      tag_598\n        /* \"#utility.yul\":16270:16274   */\n      0x1f\n        /* \"#utility.yul\":16262:16268   */\n      dup10\n        /* \"#utility.yul\":16258:16275   */\n      and\n        /* \"#utility.yul\":16247:16256   */\n      dup3\n        /* \"#utility.yul\":16228:16276   */\n      tag_375\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":16220:16226   */\n      dup4\n        /* \"#utility.yul\":16213:16277   */\n      sstore\n        /* \"#utility.yul\":16135:16291   */\n      pop\n        /* \"#utility.yul\":16112:16291   */\n    tag_597:\n        /* \"#utility.yul\":16337:16338   */\n      0x01\n        /* \"#utility.yul\":16333:16334   */\n      0x02\n        /* \"#utility.yul\":16325:16331   */\n      dup9\n        /* \"#utility.yul\":16321:16335   */\n      mul\n        /* \"#utility.yul\":16317:16339   */\n      add\n        /* \"#utility.yul\":16311:16315   */\n      dup9\n        /* \"#utility.yul\":16304:16340   */\n      sstore\n        /* \"#utility.yul\":15739:16350   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15702:16589   */\n    tag_589:\n      pop\n        /* \"#utility.yul\":15292:16595   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":15200:16595   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16601:16834   */\n    tag_156:\n        /* \"#utility.yul\":16640:16643   */\n      0x00\n        /* \"#utility.yul\":16663:16687   */\n      tag_600\n        /* \"#utility.yul\":16681:16686   */\n      dup3\n        /* \"#utility.yul\":16663:16687   */\n      tag_340\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16654:16687   */\n      swap2\n      pop\n        /* \"#utility.yul\":16709:16775   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16702:16707   */\n      dup3\n        /* \"#utility.yul\":16699:16776   */\n      sub\n        /* \"#utility.yul\":16696:16799   */\n      tag_601\n      jumpi\n        /* \"#utility.yul\":16779:16797   */\n      tag_602\n      tag_359\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16696:16799   */\n    tag_601:\n        /* \"#utility.yul\":16826:16827   */\n      0x01\n        /* \"#utility.yul\":16819:16824   */\n      dup3\n        /* \"#utility.yul\":16815:16828   */\n      add\n        /* \"#utility.yul\":16808:16828   */\n      swap1\n      pop\n        /* \"#utility.yul\":16601:16834   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16840:17250   */\n    tag_162:\n        /* \"#utility.yul\":16880:16887   */\n      0x00\n        /* \"#utility.yul\":16903:16923   */\n      tag_604\n        /* \"#utility.yul\":16921:16922   */\n      dup3\n        /* \"#utility.yul\":16903:16923   */\n      tag_340\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":16898:16923   */\n      swap2\n      pop\n        /* \"#utility.yul\":16937:16957   */\n      tag_605\n        /* \"#utility.yul\":16955:16956   */\n      dup4\n        /* \"#utility.yul\":16937:16957   */\n      tag_340\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":16932:16957   */\n      swap3\n      pop\n        /* \"#utility.yul\":16992:16993   */\n      dup3\n        /* \"#utility.yul\":16989:16990   */\n      dup3\n        /* \"#utility.yul\":16985:16994   */\n      mul\n        /* \"#utility.yul\":17014:17044   */\n      tag_606\n        /* \"#utility.yul\":17032:17043   */\n      dup2\n        /* \"#utility.yul\":17014:17044   */\n      tag_340\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":17003:17044   */\n      swap2\n      pop\n        /* \"#utility.yul\":17193:17194   */\n      dup3\n        /* \"#utility.yul\":17184:17191   */\n      dup3\n        /* \"#utility.yul\":17180:17195   */\n      div\n        /* \"#utility.yul\":17177:17178   */\n      dup5\n        /* \"#utility.yul\":17174:17196   */\n      eq\n        /* \"#utility.yul\":17154:17155   */\n      dup4\n        /* \"#utility.yul\":17147:17156   */\n      iszero\n        /* \"#utility.yul\":17127:17210   */\n      or\n        /* \"#utility.yul\":17104:17243   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":17223:17241   */\n      tag_608\n      tag_359\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":17104:17243   */\n    tag_607:\n        /* \"#utility.yul\":16888:17250   */\n      pop\n        /* \"#utility.yul\":16840:17250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17256:17436   */\n    tag_377:\n        /* \"#utility.yul\":17304:17381   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17301:17302   */\n      0x00\n        /* \"#utility.yul\":17294:17382   */\n      mstore\n        /* \"#utility.yul\":17401:17405   */\n      0x12\n        /* \"#utility.yul\":17398:17399   */\n      0x04\n        /* \"#utility.yul\":17391:17406   */\n      mstore\n        /* \"#utility.yul\":17425:17429   */\n      0x24\n        /* \"#utility.yul\":17422:17423   */\n      0x00\n        /* \"#utility.yul\":17415:17430   */\n      revert\n        /* \"#utility.yul\":17442:17627   */\n    tag_164:\n        /* \"#utility.yul\":17482:17483   */\n      0x00\n        /* \"#utility.yul\":17499:17519   */\n      tag_611\n        /* \"#utility.yul\":17517:17518   */\n      dup3\n        /* \"#utility.yul\":17499:17519   */\n      tag_340\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":17494:17519   */\n      swap2\n      pop\n        /* \"#utility.yul\":17533:17553   */\n      tag_612\n        /* \"#utility.yul\":17551:17552   */\n      dup4\n        /* \"#utility.yul\":17533:17553   */\n      tag_340\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":17528:17553   */\n      swap3\n      pop\n        /* \"#utility.yul\":17572:17573   */\n      dup3\n        /* \"#utility.yul\":17562:17597   */\n      tag_613\n      jumpi\n        /* \"#utility.yul\":17577:17595   */\n      tag_614\n      tag_377\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":17562:17597   */\n    tag_613:\n        /* \"#utility.yul\":17619:17620   */\n      dup3\n        /* \"#utility.yul\":17616:17617   */\n      dup3\n        /* \"#utility.yul\":17612:17621   */\n      div\n        /* \"#utility.yul\":17607:17621   */\n      swap1\n      pop\n        /* \"#utility.yul\":17442:17627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17633:17965   */\n    tag_172:\n        /* \"#utility.yul\":17754:17758   */\n      0x00\n        /* \"#utility.yul\":17792:17794   */\n      0x40\n        /* \"#utility.yul\":17781:17790   */\n      dup3\n        /* \"#utility.yul\":17777:17795   */\n      add\n        /* \"#utility.yul\":17769:17795   */\n      swap1\n      pop\n        /* \"#utility.yul\":17805:17876   */\n      tag_616\n        /* \"#utility.yul\":17873:17874   */\n      0x00\n        /* \"#utility.yul\":17862:17871   */\n      dup4\n        /* \"#utility.yul\":17858:17875   */\n      add\n        /* \"#utility.yul\":17849:17855   */\n      dup6\n        /* \"#utility.yul\":17805:17876   */\n      tag_343\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":17886:17958   */\n      tag_617\n        /* \"#utility.yul\":17954:17956   */\n      0x20\n        /* \"#utility.yul\":17943:17952   */\n      dup4\n        /* \"#utility.yul\":17939:17957   */\n      add\n        /* \"#utility.yul\":17930:17936   */\n      dup5\n        /* \"#utility.yul\":17886:17958   */\n      tag_343\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":17633:17965   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17971:18165   */\n    tag_176:\n        /* \"#utility.yul\":18011:18015   */\n      0x00\n        /* \"#utility.yul\":18031:18051   */\n      tag_619\n        /* \"#utility.yul\":18049:18050   */\n      dup3\n        /* \"#utility.yul\":18031:18051   */\n      tag_340\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":18026:18051   */\n      swap2\n      pop\n        /* \"#utility.yul\":18065:18085   */\n      tag_620\n        /* \"#utility.yul\":18083:18084   */\n      dup4\n        /* \"#utility.yul\":18065:18085   */\n      tag_340\n      jump\t// in\n    tag_620:\n        /* \"#utility.yul\":18060:18085   */\n      swap3\n      pop\n        /* \"#utility.yul\":18109:18110   */\n      dup3\n        /* \"#utility.yul\":18106:18107   */\n      dup3\n        /* \"#utility.yul\":18102:18111   */\n      sub\n        /* \"#utility.yul\":18094:18111   */\n      swap1\n      pop\n        /* \"#utility.yul\":18133:18134   */\n      dup2\n        /* \"#utility.yul\":18127:18131   */\n      dup2\n        /* \"#utility.yul\":18124:18135   */\n      gt\n        /* \"#utility.yul\":18121:18158   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":18138:18156   */\n      tag_622\n      tag_359\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":18121:18158   */\n    tag_621:\n        /* \"#utility.yul\":17971:18165   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18171:18318   */\n    tag_378:\n        /* \"#utility.yul\":18272:18283   */\n      0x00\n        /* \"#utility.yul\":18309:18312   */\n      dup2\n        /* \"#utility.yul\":18294:18312   */\n      swap1\n      pop\n        /* \"#utility.yul\":18171:18318   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18324:18438   */\n    tag_379:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18444:18842   */\n    tag_380:\n        /* \"#utility.yul\":18603:18606   */\n      0x00\n        /* \"#utility.yul\":18624:18707   */\n      tag_626\n        /* \"#utility.yul\":18705:18706   */\n      0x00\n        /* \"#utility.yul\":18700:18703   */\n      dup4\n        /* \"#utility.yul\":18624:18707   */\n      tag_378\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":18617:18707   */\n      swap2\n      pop\n        /* \"#utility.yul\":18716:18809   */\n      tag_627\n        /* \"#utility.yul\":18805:18808   */\n      dup3\n        /* \"#utility.yul\":18716:18809   */\n      tag_379\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":18834:18835   */\n      0x00\n        /* \"#utility.yul\":18829:18832   */\n      dup3\n        /* \"#utility.yul\":18825:18836   */\n      add\n        /* \"#utility.yul\":18818:18836   */\n      swap1\n      pop\n        /* \"#utility.yul\":18444:18842   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18848:19227   */\n    tag_180:\n        /* \"#utility.yul\":19032:19035   */\n      0x00\n        /* \"#utility.yul\":19054:19201   */\n      tag_629\n        /* \"#utility.yul\":19197:19200   */\n      dup3\n        /* \"#utility.yul\":19054:19201   */\n      tag_380\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":19047:19201   */\n      swap2\n      pop\n        /* \"#utility.yul\":19218:19221   */\n      dup2\n        /* \"#utility.yul\":19211:19221   */\n      swap1\n      pop\n        /* \"#utility.yul\":18848:19227   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19233:19413   */\n    tag_199:\n        /* \"#utility.yul\":19281:19358   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19278:19279   */\n      0x00\n        /* \"#utility.yul\":19271:19359   */\n      mstore\n        /* \"#utility.yul\":19378:19382   */\n      0x21\n        /* \"#utility.yul\":19375:19376   */\n      0x04\n        /* \"#utility.yul\":19368:19383   */\n      mstore\n        /* \"#utility.yul\":19402:19406   */\n      0x24\n        /* \"#utility.yul\":19399:19400   */\n      0x00\n        /* \"#utility.yul\":19392:19407   */\n      revert\n        /* \"#utility.yul\":19419:19539   */\n    tag_381:\n        /* \"#utility.yul\":19507:19508   */\n      0x02\n        /* \"#utility.yul\":19500:19505   */\n      dup2\n        /* \"#utility.yul\":19497:19509   */\n      lt\n        /* \"#utility.yul\":19487:19533   */\n      tag_632\n      jumpi\n        /* \"#utility.yul\":19513:19531   */\n      tag_633\n      tag_199\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":19487:19533   */\n    tag_632:\n        /* \"#utility.yul\":19419:19539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19545:19686   */\n    tag_382:\n        /* \"#utility.yul\":19597:19604   */\n      0x00\n        /* \"#utility.yul\":19626:19631   */\n      dup2\n        /* \"#utility.yul\":19615:19631   */\n      swap1\n      pop\n        /* \"#utility.yul\":19632:19680   */\n      tag_635\n        /* \"#utility.yul\":19674:19679   */\n      dup3\n        /* \"#utility.yul\":19632:19680   */\n      tag_381\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":19545:19686   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19692:19833   */\n    tag_383:\n        /* \"#utility.yul\":19755:19764   */\n      0x00\n        /* \"#utility.yul\":19788:19827   */\n      tag_637\n        /* \"#utility.yul\":19821:19826   */\n      dup3\n        /* \"#utility.yul\":19788:19827   */\n      tag_382\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":19775:19827   */\n      swap1\n      pop\n        /* \"#utility.yul\":19692:19833   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19839:19996   */\n    tag_384:\n        /* \"#utility.yul\":19939:19989   */\n      tag_639\n        /* \"#utility.yul\":19983:19988   */\n      dup2\n        /* \"#utility.yul\":19939:19989   */\n      tag_383\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":19934:19937   */\n      dup3\n        /* \"#utility.yul\":19927:19990   */\n      mstore\n        /* \"#utility.yul\":19839:19996   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20002:20250   */\n    tag_230:\n        /* \"#utility.yul\":20108:20112   */\n      0x00\n        /* \"#utility.yul\":20146:20148   */\n      0x20\n        /* \"#utility.yul\":20135:20144   */\n      dup3\n        /* \"#utility.yul\":20131:20149   */\n      add\n        /* \"#utility.yul\":20123:20149   */\n      swap1\n      pop\n        /* \"#utility.yul\":20159:20243   */\n      tag_641\n        /* \"#utility.yul\":20240:20241   */\n      0x00\n        /* \"#utility.yul\":20229:20238   */\n      dup4\n        /* \"#utility.yul\":20225:20242   */\n      add\n        /* \"#utility.yul\":20216:20222   */\n      dup5\n        /* \"#utility.yul\":20159:20243   */\n      tag_384\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":20002:20250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20256:20361   */\n    tag_385:\n        /* \"#utility.yul\":20292:20299   */\n      0x00\n        /* \"#utility.yul\":20332:20354   */\n      0xffffffffffffffffffff\n        /* \"#utility.yul\":20325:20330   */\n      dup3\n        /* \"#utility.yul\":20321:20355   */\n      and\n        /* \"#utility.yul\":20310:20355   */\n      swap1\n      pop\n        /* \"#utility.yul\":20256:20361   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20367:20487   */\n    tag_386:\n        /* \"#utility.yul\":20439:20462   */\n      tag_644\n        /* \"#utility.yul\":20456:20461   */\n      dup2\n        /* \"#utility.yul\":20439:20462   */\n      tag_385\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":20432:20437   */\n      dup2\n        /* \"#utility.yul\":20429:20463   */\n      eq\n        /* \"#utility.yul\":20419:20481   */\n      tag_645\n      jumpi\n        /* \"#utility.yul\":20477:20478   */\n      0x00\n        /* \"#utility.yul\":20474:20475   */\n      dup1\n        /* \"#utility.yul\":20467:20479   */\n      revert\n        /* \"#utility.yul\":20419:20481   */\n    tag_645:\n        /* \"#utility.yul\":20367:20487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20493:20634   */\n    tag_387:\n        /* \"#utility.yul\":20549:20554   */\n      0x00\n        /* \"#utility.yul\":20580:20586   */\n      dup2\n        /* \"#utility.yul\":20574:20587   */\n      mload\n        /* \"#utility.yul\":20565:20587   */\n      swap1\n      pop\n        /* \"#utility.yul\":20596:20628   */\n      tag_647\n        /* \"#utility.yul\":20622:20627   */\n      dup2\n        /* \"#utility.yul\":20596:20628   */\n      tag_386\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":20493:20634   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20640:20716   */\n    tag_388:\n        /* \"#utility.yul\":20676:20683   */\n      0x00\n        /* \"#utility.yul\":20705:20710   */\n      dup2\n        /* \"#utility.yul\":20694:20710   */\n      swap1\n      pop\n        /* \"#utility.yul\":20640:20716   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20722:20842   */\n    tag_389:\n        /* \"#utility.yul\":20794:20817   */\n      tag_650\n        /* \"#utility.yul\":20811:20816   */\n      dup2\n        /* \"#utility.yul\":20794:20817   */\n      tag_388\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":20787:20792   */\n      dup2\n        /* \"#utility.yul\":20784:20818   */\n      eq\n        /* \"#utility.yul\":20774:20836   */\n      tag_651\n      jumpi\n        /* \"#utility.yul\":20832:20833   */\n      0x00\n        /* \"#utility.yul\":20829:20830   */\n      dup1\n        /* \"#utility.yul\":20822:20834   */\n      revert\n        /* \"#utility.yul\":20774:20836   */\n    tag_651:\n        /* \"#utility.yul\":20722:20842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20848:20989   */\n    tag_390:\n        /* \"#utility.yul\":20904:20909   */\n      0x00\n        /* \"#utility.yul\":20935:20941   */\n      dup2\n        /* \"#utility.yul\":20929:20942   */\n      mload\n        /* \"#utility.yul\":20920:20942   */\n      swap1\n      pop\n        /* \"#utility.yul\":20951:20983   */\n      tag_653\n        /* \"#utility.yul\":20977:20982   */\n      dup2\n        /* \"#utility.yul\":20951:20983   */\n      tag_389\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":20848:20989   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20995:21138   */\n    tag_391:\n        /* \"#utility.yul\":21052:21057   */\n      0x00\n        /* \"#utility.yul\":21083:21089   */\n      dup2\n        /* \"#utility.yul\":21077:21090   */\n      mload\n        /* \"#utility.yul\":21068:21090   */\n      swap1\n      pop\n        /* \"#utility.yul\":21099:21132   */\n      tag_655\n        /* \"#utility.yul\":21126:21131   */\n      dup2\n        /* \"#utility.yul\":21099:21132   */\n      tag_341\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":20995:21138   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21144:22115   */\n    tag_276:\n        /* \"#utility.yul\":21247:21253   */\n      0x00\n        /* \"#utility.yul\":21255:21261   */\n      dup1\n        /* \"#utility.yul\":21263:21269   */\n      0x00\n        /* \"#utility.yul\":21271:21277   */\n      dup1\n        /* \"#utility.yul\":21279:21285   */\n      0x00\n        /* \"#utility.yul\":21328:21331   */\n      0xa0\n        /* \"#utility.yul\":21316:21325   */\n      dup7\n        /* \"#utility.yul\":21307:21314   */\n      dup9\n        /* \"#utility.yul\":21303:21326   */\n      sub\n        /* \"#utility.yul\":21299:21332   */\n      slt\n        /* \"#utility.yul\":21296:21416   */\n      iszero\n      tag_657\n      jumpi\n        /* \"#utility.yul\":21335:21414   */\n      tag_658\n      tag_319\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":21296:21416   */\n    tag_657:\n        /* \"#utility.yul\":21455:21456   */\n      0x00\n        /* \"#utility.yul\":21480:21543   */\n      tag_659\n        /* \"#utility.yul\":21535:21542   */\n      dup9\n        /* \"#utility.yul\":21526:21532   */\n      dup3\n        /* \"#utility.yul\":21515:21524   */\n      dup10\n        /* \"#utility.yul\":21511:21533   */\n      add\n        /* \"#utility.yul\":21480:21543   */\n      tag_387\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":21470:21543   */\n      swap6\n      pop\n        /* \"#utility.yul\":21426:21553   */\n      pop\n        /* \"#utility.yul\":21592:21594   */\n      0x20\n        /* \"#utility.yul\":21618:21681   */\n      tag_660\n        /* \"#utility.yul\":21673:21680   */\n      dup9\n        /* \"#utility.yul\":21664:21670   */\n      dup3\n        /* \"#utility.yul\":21653:21662   */\n      dup10\n        /* \"#utility.yul\":21649:21671   */\n      add\n        /* \"#utility.yul\":21618:21681   */\n      tag_390\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":21608:21681   */\n      swap5\n      pop\n        /* \"#utility.yul\":21563:21691   */\n      pop\n        /* \"#utility.yul\":21730:21732   */\n      0x40\n        /* \"#utility.yul\":21756:21820   */\n      tag_661\n        /* \"#utility.yul\":21812:21819   */\n      dup9\n        /* \"#utility.yul\":21803:21809   */\n      dup3\n        /* \"#utility.yul\":21792:21801   */\n      dup10\n        /* \"#utility.yul\":21788:21810   */\n      add\n        /* \"#utility.yul\":21756:21820   */\n      tag_391\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":21746:21820   */\n      swap4\n      pop\n        /* \"#utility.yul\":21701:21830   */\n      pop\n        /* \"#utility.yul\":21869:21871   */\n      0x60\n        /* \"#utility.yul\":21895:21959   */\n      tag_662\n        /* \"#utility.yul\":21951:21958   */\n      dup9\n        /* \"#utility.yul\":21942:21948   */\n      dup3\n        /* \"#utility.yul\":21931:21940   */\n      dup10\n        /* \"#utility.yul\":21927:21949   */\n      add\n        /* \"#utility.yul\":21895:21959   */\n      tag_391\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":21885:21959   */\n      swap3\n      pop\n        /* \"#utility.yul\":21840:21969   */\n      pop\n        /* \"#utility.yul\":22008:22011   */\n      0x80\n        /* \"#utility.yul\":22035:22098   */\n      tag_663\n        /* \"#utility.yul\":22090:22097   */\n      dup9\n        /* \"#utility.yul\":22081:22087   */\n      dup3\n        /* \"#utility.yul\":22070:22079   */\n      dup10\n        /* \"#utility.yul\":22066:22088   */\n      add\n        /* \"#utility.yul\":22035:22098   */\n      tag_387\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":22025:22098   */\n      swap2\n      pop\n        /* \"#utility.yul\":21979:22108   */\n      pop\n        /* \"#utility.yul\":21144:22115   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22121:22290   */\n    tag_392:\n        /* \"#utility.yul\":22205:22216   */\n      0x00\n        /* \"#utility.yul\":22239:22245   */\n      dup3\n        /* \"#utility.yul\":22234:22237   */\n      dup3\n        /* \"#utility.yul\":22227:22246   */\n      mstore\n        /* \"#utility.yul\":22279:22283   */\n      0x20\n        /* \"#utility.yul\":22274:22277   */\n      dup3\n        /* \"#utility.yul\":22270:22284   */\n      add\n        /* \"#utility.yul\":22255:22284   */\n      swap1\n      pop\n        /* \"#utility.yul\":22121:22290   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22296:22477   */\n    tag_393:\n        /* \"#utility.yul\":22436:22469   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":22432:22433   */\n      0x00\n        /* \"#utility.yul\":22424:22430   */\n      dup3\n        /* \"#utility.yul\":22420:22434   */\n      add\n        /* \"#utility.yul\":22413:22470   */\n      mstore\n        /* \"#utility.yul\":22296:22477   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22483:22849   */\n    tag_394:\n        /* \"#utility.yul\":22625:22628   */\n      0x00\n        /* \"#utility.yul\":22646:22713   */\n      tag_667\n        /* \"#utility.yul\":22710:22712   */\n      0x1f\n        /* \"#utility.yul\":22705:22708   */\n      dup4\n        /* \"#utility.yul\":22646:22713   */\n      tag_392\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":22639:22713   */\n      swap2\n      pop\n        /* \"#utility.yul\":22722:22815   */\n      tag_668\n        /* \"#utility.yul\":22811:22814   */\n      dup3\n        /* \"#utility.yul\":22722:22815   */\n      tag_393\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":22840:22842   */\n      0x20\n        /* \"#utility.yul\":22835:22838   */\n      dup3\n        /* \"#utility.yul\":22831:22843   */\n      add\n        /* \"#utility.yul\":22824:22843   */\n      swap1\n      pop\n        /* \"#utility.yul\":22483:22849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22855:23274   */\n    tag_281:\n        /* \"#utility.yul\":23021:23025   */\n      0x00\n        /* \"#utility.yul\":23059:23061   */\n      0x20\n        /* \"#utility.yul\":23048:23057   */\n      dup3\n        /* \"#utility.yul\":23044:23062   */\n      add\n        /* \"#utility.yul\":23036:23062   */\n      swap1\n      pop\n        /* \"#utility.yul\":23108:23117   */\n      dup2\n        /* \"#utility.yul\":23102:23106   */\n      dup2\n        /* \"#utility.yul\":23098:23118   */\n      sub\n        /* \"#utility.yul\":23094:23095   */\n      0x00\n        /* \"#utility.yul\":23083:23092   */\n      dup4\n        /* \"#utility.yul\":23079:23096   */\n      add\n        /* \"#utility.yul\":23072:23119   */\n      mstore\n        /* \"#utility.yul\":23136:23267   */\n      tag_670\n        /* \"#utility.yul\":23262:23266   */\n      dup2\n        /* \"#utility.yul\":23136:23267   */\n      tag_394\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":23128:23267   */\n      swap1\n      pop\n        /* \"#utility.yul\":22855:23274   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23280:23722   */\n    tag_295:\n        /* \"#utility.yul\":23429:23433   */\n      0x00\n        /* \"#utility.yul\":23467:23469   */\n      0x60\n        /* \"#utility.yul\":23456:23465   */\n      dup3\n        /* \"#utility.yul\":23452:23470   */\n      add\n        /* \"#utility.yul\":23444:23470   */\n      swap1\n      pop\n        /* \"#utility.yul\":23480:23551   */\n      tag_672\n        /* \"#utility.yul\":23548:23549   */\n      0x00\n        /* \"#utility.yul\":23537:23546   */\n      dup4\n        /* \"#utility.yul\":23533:23550   */\n      add\n        /* \"#utility.yul\":23524:23530   */\n      dup7\n        /* \"#utility.yul\":23480:23551   */\n      tag_348\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":23561:23633   */\n      tag_673\n        /* \"#utility.yul\":23629:23631   */\n      0x20\n        /* \"#utility.yul\":23618:23627   */\n      dup4\n        /* \"#utility.yul\":23614:23632   */\n      add\n        /* \"#utility.yul\":23605:23611   */\n      dup6\n        /* \"#utility.yul\":23561:23633   */\n      tag_348\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":23643:23715   */\n      tag_674\n        /* \"#utility.yul\":23711:23713   */\n      0x40\n        /* \"#utility.yul\":23700:23709   */\n      dup4\n        /* \"#utility.yul\":23696:23714   */\n      add\n        /* \"#utility.yul\":23687:23693   */\n      dup5\n        /* \"#utility.yul\":23643:23715   */\n      tag_343\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":23280:23722   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23728:24060   */\n    tag_306:\n        /* \"#utility.yul\":23849:23853   */\n      0x00\n        /* \"#utility.yul\":23887:23889   */\n      0x40\n        /* \"#utility.yul\":23876:23885   */\n      dup3\n        /* \"#utility.yul\":23872:23890   */\n      add\n        /* \"#utility.yul\":23864:23890   */\n      swap1\n      pop\n        /* \"#utility.yul\":23900:23971   */\n      tag_676\n        /* \"#utility.yul\":23968:23969   */\n      0x00\n        /* \"#utility.yul\":23957:23966   */\n      dup4\n        /* \"#utility.yul\":23953:23970   */\n      add\n        /* \"#utility.yul\":23944:23950   */\n      dup6\n        /* \"#utility.yul\":23900:23971   */\n      tag_348\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":23981:24053   */\n      tag_677\n        /* \"#utility.yul\":24049:24051   */\n      0x20\n        /* \"#utility.yul\":24038:24047   */\n      dup4\n        /* \"#utility.yul\":24034:24052   */\n      add\n        /* \"#utility.yul\":24025:24031   */\n      dup5\n        /* \"#utility.yul\":23981:24053   */\n      tag_343\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":23728:24060   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24066:24398   */\n    tag_311:\n        /* \"#utility.yul\":24187:24191   */\n      0x00\n        /* \"#utility.yul\":24225:24227   */\n      0x40\n        /* \"#utility.yul\":24214:24223   */\n      dup3\n        /* \"#utility.yul\":24210:24228   */\n      add\n        /* \"#utility.yul\":24202:24228   */\n      swap1\n      pop\n        /* \"#utility.yul\":24238:24309   */\n      tag_679\n        /* \"#utility.yul\":24306:24307   */\n      0x00\n        /* \"#utility.yul\":24295:24304   */\n      dup4\n        /* \"#utility.yul\":24291:24308   */\n      add\n        /* \"#utility.yul\":24282:24288   */\n      dup6\n        /* \"#utility.yul\":24238:24309   */\n      tag_348\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":24319:24391   */\n      tag_680\n        /* \"#utility.yul\":24387:24389   */\n      0x20\n        /* \"#utility.yul\":24376:24385   */\n      dup4\n        /* \"#utility.yul\":24372:24390   */\n      add\n        /* \"#utility.yul\":24363:24369   */\n      dup5\n        /* \"#utility.yul\":24319:24391   */\n      tag_339\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":24066:24398   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212207b3e87135a3e30972853d6754fd3a8c03c08a44bf44d0342aff4351a242df3b764736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1349": {
									"entryPoint": null,
									"id": 1349,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_534": {
									"entryPoint": null,
									"id": 534,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_303": {
									"entryPoint": 142,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1134": {
									"entryPoint": 486,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hasRole_127": {
									"entryPoint": 387,
									"id": 127,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256_fromMemory": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 493,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 596,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1715:13",
										"nodeType": "YulBlock",
										"src": "0:1715:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "379:81:13",
													"nodeType": "YulBlock",
													"src": "379:81:13",
													"statements": [
														{
															"nativeSrc": "389:65:13",
															"nodeType": "YulAssignment",
															"src": "389:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:13",
																		"nodeType": "YulLiteral",
																		"src": "411:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:13"
																},
																"nativeSrc": "400:54:13",
																"nodeType": "YulFunctionCall",
																"src": "400:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:13",
														"nodeType": "YulTypedName",
														"src": "361:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:13",
														"nodeType": "YulTypedName",
														"src": "371:7:13",
														"type": ""
													}
												],
												"src": "334:126:13"
											},
											{
												"body": {
													"nativeSrc": "511:51:13",
													"nodeType": "YulBlock",
													"src": "511:51:13",
													"statements": [
														{
															"nativeSrc": "521:35:13",
															"nodeType": "YulAssignment",
															"src": "521:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:13"
																},
																"nativeSrc": "532:24:13",
																"nodeType": "YulFunctionCall",
																"src": "532:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:13",
														"nodeType": "YulTypedName",
														"src": "493:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:13",
														"nodeType": "YulTypedName",
														"src": "503:7:13",
														"type": ""
													}
												],
												"src": "466:96:13"
											},
											{
												"body": {
													"nativeSrc": "611:79:13",
													"nodeType": "YulBlock",
													"src": "611:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:13",
																"nodeType": "YulBlock",
																"src": "668:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:13",
																					"nodeType": "YulLiteral",
																					"src": "677:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:13",
																					"nodeType": "YulLiteral",
																					"src": "680:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:13"
																			},
																			"nativeSrc": "670:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:13"
																		},
																		"nativeSrc": "670:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:13"
																				},
																				"nativeSrc": "641:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:13"
																		},
																		"nativeSrc": "631:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:13"
																},
																"nativeSrc": "624:43:13",
																"nodeType": "YulFunctionCall",
																"src": "624:43:13"
															},
															"nativeSrc": "621:63:13",
															"nodeType": "YulIf",
															"src": "621:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:13",
														"nodeType": "YulTypedName",
														"src": "604:5:13",
														"type": ""
													}
												],
												"src": "568:122:13"
											},
											{
												"body": {
													"nativeSrc": "759:80:13",
													"nodeType": "YulBlock",
													"src": "759:80:13",
													"statements": [
														{
															"nativeSrc": "769:22:13",
															"nodeType": "YulAssignment",
															"src": "769:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:13"
																},
																"nativeSrc": "778:13:13",
																"nodeType": "YulFunctionCall",
																"src": "778:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:13"
																},
																"nativeSrc": "800:33:13",
																"nodeType": "YulFunctionCall",
																"src": "800:33:13"
															},
															"nativeSrc": "800:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:13"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:13",
														"nodeType": "YulTypedName",
														"src": "737:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:13",
														"nodeType": "YulTypedName",
														"src": "745:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:13",
														"nodeType": "YulTypedName",
														"src": "753:5:13",
														"type": ""
													}
												],
												"src": "696:143:13"
											},
											{
												"body": {
													"nativeSrc": "890:32:13",
													"nodeType": "YulBlock",
													"src": "890:32:13",
													"statements": [
														{
															"nativeSrc": "900:16:13",
															"nodeType": "YulAssignment",
															"src": "900:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "911:5:13",
																"nodeType": "YulIdentifier",
																"src": "911:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "900:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "900:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "845:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "872:5:13",
														"nodeType": "YulTypedName",
														"src": "872:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "882:7:13",
														"nodeType": "YulTypedName",
														"src": "882:7:13",
														"type": ""
													}
												],
												"src": "845:77:13"
											},
											{
												"body": {
													"nativeSrc": "971:79:13",
													"nodeType": "YulBlock",
													"src": "971:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:16:13",
																"nodeType": "YulBlock",
																"src": "1028:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1037:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1037:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1040:1:13",
																					"nodeType": "YulLiteral",
																					"src": "1040:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1030:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "1030:6:13"
																			},
																			"nativeSrc": "1030:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:12:13"
																		},
																		"nativeSrc": "1030:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "994:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "994:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1019:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "1019:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1001:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "1001:17:13"
																				},
																				"nativeSrc": "1001:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1001:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "991:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "991:2:13"
																		},
																		"nativeSrc": "991:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "991:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "984:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "984:6:13"
																},
																"nativeSrc": "984:43:13",
																"nodeType": "YulFunctionCall",
																"src": "984:43:13"
															},
															"nativeSrc": "981:63:13",
															"nodeType": "YulIf",
															"src": "981:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "928:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "964:5:13",
														"nodeType": "YulTypedName",
														"src": "964:5:13",
														"type": ""
													}
												],
												"src": "928:122:13"
											},
											{
												"body": {
													"nativeSrc": "1119:80:13",
													"nodeType": "YulBlock",
													"src": "1119:80:13",
													"statements": [
														{
															"nativeSrc": "1129:22:13",
															"nodeType": "YulAssignment",
															"src": "1129:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1144:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1144:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1138:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:13"
																},
																"nativeSrc": "1138:13:13",
																"nodeType": "YulFunctionCall",
																"src": "1138:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1129:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "1129:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1187:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "1187:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1160:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "1160:26:13"
																},
																"nativeSrc": "1160:33:13",
																"nodeType": "YulFunctionCall",
																"src": "1160:33:13"
															},
															"nativeSrc": "1160:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "1160:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "1056:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1097:6:13",
														"nodeType": "YulTypedName",
														"src": "1097:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1105:3:13",
														"nodeType": "YulTypedName",
														"src": "1105:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1113:5:13",
														"nodeType": "YulTypedName",
														"src": "1113:5:13",
														"type": ""
													}
												],
												"src": "1056:143:13"
											},
											{
												"body": {
													"nativeSrc": "1299:413:13",
													"nodeType": "YulBlock",
													"src": "1299:413:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "1345:83:13",
																"nodeType": "YulBlock",
																"src": "1345:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1347:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "1347:77:13"
																			},
																			"nativeSrc": "1347:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "1347:79:13"
																		},
																		"nativeSrc": "1347:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "1347:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1320:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1320:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1329:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1329:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1316:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1316:3:13"
																		},
																		"nativeSrc": "1316:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1316:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1341:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1312:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1312:3:13"
																},
																"nativeSrc": "1312:32:13",
																"nodeType": "YulFunctionCall",
																"src": "1312:32:13"
															},
															"nativeSrc": "1309:119:13",
															"nodeType": "YulIf",
															"src": "1309:119:13"
														},
														{
															"nativeSrc": "1438:128:13",
															"nodeType": "YulBlock",
															"src": "1438:128:13",
															"statements": [
																{
																	"nativeSrc": "1453:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1467:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1482:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1482:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1528:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1528:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1539:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1539:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1524:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1524:3:13"
																				},
																				"nativeSrc": "1524:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1524:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1548:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1548:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1492:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1492:31:13"
																		},
																		"nativeSrc": "1492:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1482:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1482:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1576:129:13",
															"nodeType": "YulBlock",
															"src": "1576:129:13",
															"statements": [
																{
																	"nativeSrc": "1591:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1591:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1605:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1605:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1595:6:13",
																			"nodeType": "YulTypedName",
																			"src": "1595:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1621:74:13",
																	"nodeType": "YulAssignment",
																	"src": "1621:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1667:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1667:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1678:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1678:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1663:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1663:3:13"
																				},
																				"nativeSrc": "1663:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1663:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1687:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1687:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "1631:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "1631:31:13"
																		},
																		"nativeSrc": "1631:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1631:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1621:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1621:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
												"nativeSrc": "1205:507:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1261:9:13",
														"nodeType": "YulTypedName",
														"src": "1261:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1272:7:13",
														"nodeType": "YulTypedName",
														"src": "1272:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1284:6:13",
														"nodeType": "YulTypedName",
														"src": "1284:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1292:6:13",
														"nodeType": "YulTypedName",
														"src": "1292:6:13",
														"type": ""
													}
												],
												"src": "1205:507:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f80fd5b506040516130333803806130338339818101604052810190610031919061027e565b6001808190555061004a5f801b3361008e60201b60201c565b508173ffffffffffffffffffffffffffffffffffffffff1660a08173ffffffffffffffffffffffffffffffffffffffff1681525050806080818152505050506102bc565b5f61009f838361018360201b60201c565b6101795760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506101166101e660201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a46001905061017d565b5f90505b92915050565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f33905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61021a826101f1565b9050919050565b61022a81610210565b8114610234575f80fd5b50565b5f8151905061024581610221565b92915050565b5f819050919050565b61025d8161024b565b8114610267575f80fd5b50565b5f8151905061027881610254565b92915050565b5f8060408385031215610294576102936101ed565b5b5f6102a185828601610237565b92505060206102b28582860161026a565b9150509250929050565b60805160a051612d416102f25f395f81816116f40152611a8801525f818161065b015281816117d40152611b2a0152612d415ff3fe60806040526004361061014a575f3560e01c806375b238fc116100b5578063d0e30db01161006e578063d0e30db014610470578063d4fac45d1461047a578063d547741f146104b6578063d67b98a9146104de578063d7128c5814610508578063f6687af7146105325761014a565b806375b238fc1461036457806391d148541461038e5780639363a141146103ca5780639e281a98146103f4578063a217fddf1461041c578063b60fc72e146104465761014a565b806331f7d9641161010757806331f7d9641461026e578063338b5dea1461029857806336568abe146102c057806344ba0ea2146102e857806347d04c71146103125780634914e2ce1461033c5761014a565b806301ffc9a71461014e578063192892871461018a578063248a9ca3146101a657806327281025146101e25780632e1a7d4d1461021e5780632f2ff15d14610246575b5f80fd5b348015610159575f80fd5b50610174600480360381019061016f919061204d565b61055c565b6040516101819190612092565b60405180910390f35b6101a4600480360381019061019f91906121e7565b6105d5565b005b3480156101b1575f80fd5b506101cc60048036038101906101c79190612290565b6108a6565b6040516101d991906122ca565b60405180910390f35b3480156101ed575f80fd5b5061020860048036038101906102039190612316565b6108c2565b6040516102159190612350565b60405180910390f35b348015610229575f80fd5b50610244600480360381019061023f9190612316565b6108f5565b005b348015610251575f80fd5b5061026c600480360381019061026791906123c3565b610c68565b005b348015610279575f80fd5b50610282610c8a565b60405161028f9190612410565b60405180910390f35b3480156102a3575f80fd5b506102be60048036038101906102b99190612429565b610c8e565b005b3480156102cb575f80fd5b506102e660048036038101906102e191906123c3565b610fdb565b005b3480156102f3575f80fd5b506102fc611056565b6040516103099190612350565b60405180910390f35b34801561031d575f80fd5b50610326611062565b6040516103339190612350565b60405180910390f35b348015610347575f80fd5b50610362600480360381019061035d91906124c7565b61106b565b005b34801561036f575f80fd5b5061037861123d565b60405161038591906122ca565b60405180910390f35b348015610399575f80fd5b506103b460048036038101906103af91906123c3565b611243565b6040516103c19190612092565b60405180910390f35b3480156103d5575f80fd5b506103de6112a6565b6040516103eb9190612350565b60405180910390f35b3480156103ff575f80fd5b5061041a60048036038101906104159190612429565b6112af565b005b348015610427575f80fd5b506104306116ec565b60405161043d91906122ca565b60405180910390f35b348015610451575f80fd5b5061045a6116f2565b6040516104679190612586565b60405180910390f35b610478611716565b005b348015610485575f80fd5b506104a0600480360381019061049b919061259f565b61195d565b6040516104ad9190612350565b60405180910390f35b3480156104c1575f80fd5b506104dc60048036038101906104d791906123c3565b611a62565b005b3480156104e9575f80fd5b506104f2611a84565b6040516104ff9190612350565b60405180910390f35b348015610513575f80fd5b5061051c611b20565b6040516105299190612350565b60405180910390f35b34801561053d575f80fd5b50610546611b28565b6040516105539190612350565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105ce57506105cd82611b4c565b5b9050919050565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff1615610659576040517f7845597700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000034600754610688919061260a565b11156106c0576040517f97651d1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052805f81526020018281526020018381526020016001151581525060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101908161073e9190612838565b5060408201518160020190816107549190612838565b506060820151816003015f6101000a81548160ff0219169083151502179055509050505f3411156108a2573460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610806919061260a565b925050819055503460075f82825461081e919061260a565b9250508190555060055f81548092919061083790612907565b91905055505f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c008346040516108999190612350565b60405180910390a35b5050565b5f805f8381526020019081526020015f20600101549050919050565b5f806108cc611a84565b9050670de0b6b3a764000081846108e3919061294e565b6108ed91906129bc565b915050919050565b6108fd611bb5565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff16610980576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67016345785d8a00008111156109d75767016345785d8a0000816040517fd859cbba0000000000000000000000000000000000000000000000000000000081526004016109ce9291906129ec565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a9a5780826040517f70e6417b000000000000000000000000000000000000000000000000000000008152600401610a919291906129ec565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b219190612a13565b925050819055508160075f828254610b399190612a13565b9250508190555060065f815480929190610b5290612907565b91905055505f3373ffffffffffffffffffffffffffffffffffffffff1683604051610b7c90612a73565b5f6040518083038185875af1925050503d805f8114610bb6576040519150601f19603f3d011682016040523d82523d5f602084013e610bbb565b606091505b5050905080610bf6576040517fbd6bfd0a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc8b1e2a9be32ce8c5fe81b6681739e4a0016bf546706482b49989431fe3d55ee85604051610c539190612350565b60405180910390a35050610c65611c04565b50565b610c71826108a6565b610c7a81611c0d565b610c848383611c21565b50505050565b5f81565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff16610d11576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900460ff166001811115610d7d57610d7c612a87565b5b6001811115610d8f57610d8e612a87565b5b81526020015f820160019054906101000a900460ff1660ff1660ff1681526020015f820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600180811115610e1957610e18612a87565b5b815f01516001811115610e2f57610e2e612a87565b5b14610e66576040517f5694952100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8203610e9f576040517f7803844200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f26919061260a565b9250508190555060055f815480929190610f3f90612907565b9190505550610f713330848673ffffffffffffffffffffffffffffffffffffffff16611d0a909392919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c00884604051610fce9190612350565b60405180910390a3505050565b610fe3611d8c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611047576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110518282611d93565b505050565b67016345785d8a000081565b5f600654905090565b5f801b61107781611c0d565b60405180606001604052808361108d575f611090565b60015b60018111156110a2576110a1612a87565b5b81526020018560ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681525060045f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083600181111561112f5761112e612a87565b5b02179055506020820151815f0160016101000a81548160ff021916908360ff1602179055506040820151815f0160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508473ffffffffffffffffffffffffffffffffffffffff167f243c26e9467b186d248bf33b7722de99a559aceda24c02928c2636071be4d99260045f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1660405161122e9190612afa565b60405180910390a25050505050565b5f801b81565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f600554905090565b6112b7611bb5565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff1661133a576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900460ff1660018111156113a6576113a5612a87565b5b60018111156113b8576113b7612a87565b5b81526020015f820160019054906101000a900460ff1660ff1660ff1681526020015f820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060018081111561144257611441612a87565b5b815f0151600181111561145857611457612a87565b5b1461148f576040517f5694952100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67016345785d8a00008211156114e65767016345785d8a0000826040517fd859cbba0000000000000000000000000000000000000000000000000000000081526004016114dd9291906129ec565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156115a95780836040517f70e6417b0000000000000000000000000000000000000000000000000000000081526004016115a09291906129ec565b60405180910390fd5b8260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546116309190612a13565b9250508190555060065f81548092919061164990612907565b919050555061167933848673ffffffffffffffffffffffffffffffffffffffff16611e7c9092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc8b1e2a9be32ce8c5fe81b6681739e4a0016bf546706482b49989431fe3d55ee856040516116d69190612350565b60405180910390a350506116e8611c04565b5050565b5f801b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff16611799576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f34036117d2576040517f7803844200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000034600754611801919061260a565b1115611839576040517f97651d1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546118c0919061260a565b925050819055503460075f8282546118d8919061260a565b9250508190555060055f8154809291906118f190612907565b91905055505f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c008346040516119539190612350565b60405180910390a3565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff166119e1576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611a6b826108a6565b611a7481611c0d565b611a7e8383611d93565b50505050565b5f807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611aef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b139190612b99565b5050509150508091505090565b6305f5e10081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600260015403611bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf190612c6a565b60405180910390fd5b6002600181905550565b60018081905550565b611c1e81611c19611d8c565b611efb565b50565b5f611c2c8383611243565b611d005760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611c9d611d8c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611d04565b5f90505b92915050565b611d86848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611d3f93929190612c88565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f4c565b50505050565b5f33905090565b5f611d9e8383611243565b15611e72575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611e0f611d8c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611e76565b5f90505b92915050565b611ef6838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611eaf929190612cbd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f4c565b505050565b611f058282611243565b611f485780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611f3f929190612ce4565b60405180910390fd5b5050565b5f8060205f8451602086015f885af180611f6b576040513d5f823e3d81fd5b3d92505f519150505f8214611f84576001811415611f9f565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611fe157836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611fd89190612410565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61202c81611ff8565b8114612036575f80fd5b50565b5f8135905061204781612023565b92915050565b5f6020828403121561206257612061611ff0565b5b5f61206f84828501612039565b91505092915050565b5f8115159050919050565b61208c81612078565b82525050565b5f6020820190506120a55f830184612083565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6120f9826120b3565b810181811067ffffffffffffffff82111715612118576121176120c3565b5b80604052505050565b5f61212a611fe7565b905061213682826120f0565b919050565b5f67ffffffffffffffff821115612155576121546120c3565b5b61215e826120b3565b9050602081019050919050565b828183375f83830152505050565b5f61218b6121868461213b565b612121565b9050828152602081018484840111156121a7576121a66120af565b5b6121b284828561216b565b509392505050565b5f82601f8301126121ce576121cd6120ab565b5b81356121de848260208601612179565b91505092915050565b5f80604083850312156121fd576121fc611ff0565b5b5f83013567ffffffffffffffff81111561221a57612219611ff4565b5b612226858286016121ba565b925050602083013567ffffffffffffffff81111561224757612246611ff4565b5b612253858286016121ba565b9150509250929050565b5f819050919050565b61226f8161225d565b8114612279575f80fd5b50565b5f8135905061228a81612266565b92915050565b5f602082840312156122a5576122a4611ff0565b5b5f6122b28482850161227c565b91505092915050565b6122c48161225d565b82525050565b5f6020820190506122dd5f8301846122bb565b92915050565b5f819050919050565b6122f5816122e3565b81146122ff575f80fd5b50565b5f81359050612310816122ec565b92915050565b5f6020828403121561232b5761232a611ff0565b5b5f61233884828501612302565b91505092915050565b61234a816122e3565b82525050565b5f6020820190506123635f830184612341565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61239282612369565b9050919050565b6123a281612388565b81146123ac575f80fd5b50565b5f813590506123bd81612399565b92915050565b5f80604083850312156123d9576123d8611ff0565b5b5f6123e68582860161227c565b92505060206123f7858286016123af565b9150509250929050565b61240a81612388565b82525050565b5f6020820190506124235f830184612401565b92915050565b5f806040838503121561243f5761243e611ff0565b5b5f61244c858286016123af565b925050602061245d85828601612302565b9150509250929050565b5f60ff82169050919050565b61247c81612467565b8114612486575f80fd5b50565b5f8135905061249781612473565b92915050565b6124a681612078565b81146124b0575f80fd5b50565b5f813590506124c18161249d565b92915050565b5f805f80608085870312156124df576124de611ff0565b5b5f6124ec878288016123af565b94505060206124fd87828801612489565b935050604061250e878288016123af565b925050606061251f878288016124b3565b91505092959194509250565b5f819050919050565b5f61254e61254961254484612369565b61252b565b612369565b9050919050565b5f61255f82612534565b9050919050565b5f61257082612555565b9050919050565b61258081612566565b82525050565b5f6020820190506125995f830184612577565b92915050565b5f80604083850312156125b5576125b4611ff0565b5b5f6125c2858286016123af565b92505060206125d3858286016123af565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612614826122e3565b915061261f836122e3565b9250828201905080821115612637576126366125dd565b5b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061268b57607f821691505b60208210810361269e5761269d612647565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026127007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126c5565b61270a86836126c5565b95508019841693508086168417925050509392505050565b5f61273c612737612732846122e3565b61252b565b6122e3565b9050919050565b5f819050919050565b61275583612722565b61276961276182612743565b8484546126d1565b825550505050565b5f90565b61277d612771565b61278881848461274c565b505050565b5b818110156127ab576127a05f82612775565b60018101905061278e565b5050565b601f8211156127f0576127c1816126a4565b6127ca846126b6565b810160208510156127d9578190505b6127ed6127e5856126b6565b83018261278d565b50505b505050565b5f82821c905092915050565b5f6128105f19846008026127f5565b1980831691505092915050565b5f6128288383612801565b9150826002028217905092915050565b6128418261263d565b67ffffffffffffffff81111561285a576128596120c3565b5b6128648254612674565b61286f8282856127af565b5f60209050601f8311600181146128a0575f841561288e578287015190505b612898858261281d565b8655506128ff565b601f1984166128ae866126a4565b5f5b828110156128d5578489015182556001820191506020850194506020810190506128b0565b868310156128f257848901516128ee601f891682612801565b8355505b6001600288020188555050505b505050505050565b5f612911826122e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612943576129426125dd565b5b600182019050919050565b5f612958826122e3565b9150612963836122e3565b9250828202612971816122e3565b91508282048414831517612988576129876125dd565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6129c6826122e3565b91506129d1836122e3565b9250826129e1576129e061298f565b5b828204905092915050565b5f6040820190506129ff5f830185612341565b612a0c6020830184612341565b9392505050565b5f612a1d826122e3565b9150612a28836122e3565b9250828203905081811115612a4057612a3f6125dd565b5b92915050565b5f81905092915050565b50565b5f612a5e5f83612a46565b9150612a6982612a50565b5f82019050919050565b5f612a7d82612a53565b9150819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60028110612ac557612ac4612a87565b5b50565b5f819050612ad582612ab4565b919050565b5f612ae482612ac8565b9050919050565b612af481612ada565b82525050565b5f602082019050612b0d5f830184612aeb565b92915050565b5f69ffffffffffffffffffff82169050919050565b612b3181612b13565b8114612b3b575f80fd5b50565b5f81519050612b4c81612b28565b92915050565b5f819050919050565b612b6481612b52565b8114612b6e575f80fd5b50565b5f81519050612b7f81612b5b565b92915050565b5f81519050612b93816122ec565b92915050565b5f805f805f60a08688031215612bb257612bb1611ff0565b5b5f612bbf88828901612b3e565b9550506020612bd088828901612b71565b9450506040612be188828901612b85565b9350506060612bf288828901612b85565b9250506080612c0388828901612b3e565b9150509295509295909350565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612c54601f83612c10565b9150612c5f82612c20565b602082019050919050565b5f6020820190508181035f830152612c8181612c48565b9050919050565b5f606082019050612c9b5f830186612401565b612ca86020830185612401565b612cb56040830184612341565b949350505050565b5f604082019050612cd05f830185612401565b612cdd6020830184612341565b9392505050565b5f604082019050612cf75f830185612401565b612d0460208301846122bb565b939250505056fea26469706673582212207b3e87135a3e30972853d6754fd3a8c03c08a44bf44d0342aff4351a242df3b764736f6c634300081a0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3033 CODESIZE SUB DUP1 PUSH2 0x3033 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x27E JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x4A PUSH0 DUP1 SHL CALLER PUSH2 0x8E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP1 PUSH1 0x80 DUP2 DUP2 MSTORE POP POP POP POP PUSH2 0x2BC JUMP JUMPDEST PUSH0 PUSH2 0x9F DUP4 DUP4 PUSH2 0x183 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x179 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x116 PUSH2 0x1E6 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x17D JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21A DUP3 PUSH2 0x1F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22A DUP2 PUSH2 0x210 JUMP JUMPDEST DUP2 EQ PUSH2 0x234 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x245 DUP2 PUSH2 0x221 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x25D DUP2 PUSH2 0x24B JUMP JUMPDEST DUP2 EQ PUSH2 0x267 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x278 DUP2 PUSH2 0x254 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x294 JUMPI PUSH2 0x293 PUSH2 0x1ED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2A1 DUP6 DUP3 DUP7 ADD PUSH2 0x237 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B2 DUP6 DUP3 DUP7 ADD PUSH2 0x26A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2D41 PUSH2 0x2F2 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x16F4 ADD MSTORE PUSH2 0x1A88 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x65B ADD MSTORE DUP2 DUP2 PUSH2 0x17D4 ADD MSTORE PUSH2 0x1B2A ADD MSTORE PUSH2 0x2D41 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xD4FAC45D EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xD67B98A9 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xD7128C58 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xF6687AF7 EQ PUSH2 0x532 JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x9363A141 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xB60FC72E EQ PUSH2 0x446 JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x31F7D964 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x44BA0EA2 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x47D04C71 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x4914E2CE EQ PUSH2 0x33C JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x19289287 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x27281025 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x246 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0xC68 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0xFDB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x106B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DE PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x2586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH2 0x1716 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST PUSH2 0x195D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0x1A62 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51C PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x546 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5CE JUMPI POP PUSH2 0x5CD DUP3 PUSH2 0x1B4C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7845597700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST GT ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97651D1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH0 CALLVALUE GT ISZERO PUSH2 0x8A2 JUMPI CALLVALUE PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x837 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8CC PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP5 PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x29BC JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x16345785D8A0000 DUP2 GT ISZERO PUSH2 0x9D7 JUMPI PUSH8 0x16345785D8A0000 DUP2 PUSH1 0x40 MLOAD PUSH32 0xD859CBBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA9A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x70E6417B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB52 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xB7C SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD6BFD0A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8B1E2A9BE32CE8C5FE81B6681739E4A0016BF546706482B49989431FE3D55EE DUP6 PUSH1 0x40 MLOAD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xC65 PUSH2 0x1C04 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC71 DUP3 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xC84 DUP4 DUP4 PUSH2 0x1C21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD7D JUMPI PUSH2 0xD7C PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD8F JUMPI PUSH2 0xD8E PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5694952100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x7803844200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF3F SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xF71 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFCE SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFE3 PUSH2 0x1D8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1051 DUP3 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x1077 DUP2 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH2 0x108D JUMPI PUSH0 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10A2 JUMPI PUSH2 0x10A1 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x112F JUMPI PUSH2 0x112E PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x243C26E9467B186D248BF33B7722DE99A559ACEDA24C02928C2636071BE4D992 PUSH1 0x4 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12B7 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x133A JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13A6 JUMPI PUSH2 0x13A5 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1457 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5694952100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH2 0x14E6 JUMPI PUSH8 0x16345785D8A0000 DUP3 PUSH1 0x40 MLOAD PUSH32 0xD859CBBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DD SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x15A9 JUMPI DUP1 DUP4 PUSH1 0x40 MLOAD PUSH32 0x70E6417B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A0 SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1630 SWAP2 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1649 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1679 CALLER DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E7C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8B1E2A9BE32CE8C5FE81B6681739E4A0016BF546706482B49989431FE3D55EE DUP6 PUSH1 0x40 MLOAD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x16E8 PUSH2 0x1C04 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x17D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7803844200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x1801 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST GT ISZERO PUSH2 0x1839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97651D1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18C0 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18D8 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18F1 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6B DUP3 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x1A74 DUP2 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1A7E DUP4 DUP4 PUSH2 0x1D93 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AEF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B13 SWAP2 SWAP1 PUSH2 0x2B99 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1BFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF1 SWAP1 PUSH2 0x2C6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1C1E DUP2 PUSH2 0x1C19 PUSH2 0x1D8C JUMP JUMPDEST PUSH2 0x1EFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2C DUP4 DUP4 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x1D00 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C9D PUSH2 0x1D8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D04 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D86 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D3F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F4C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1D9E DUP4 DUP4 PUSH2 0x1243 JUMP JUMPDEST ISZERO PUSH2 0x1E72 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1E0F PUSH2 0x1D8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1E76 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF6 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EAF SWAP3 SWAP2 SWAP1 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F05 DUP3 DUP3 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x1F48 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3F SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1F84 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1F9F JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1FE1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD8 SWAP2 SWAP1 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202C DUP2 PUSH2 0x1FF8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2036 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2047 DUP2 PUSH2 0x2023 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2062 JUMPI PUSH2 0x2061 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x206F DUP5 DUP3 DUP6 ADD PUSH2 0x2039 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208C DUP2 PUSH2 0x2078 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20F9 DUP3 PUSH2 0x20B3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2118 JUMPI PUSH2 0x2117 PUSH2 0x20C3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x212A PUSH2 0x1FE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x2136 DUP3 DUP3 PUSH2 0x20F0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x20C3 JUMP JUMPDEST JUMPDEST PUSH2 0x215E DUP3 PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x218B PUSH2 0x2186 DUP5 PUSH2 0x213B JUMP JUMPDEST PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21A7 JUMPI PUSH2 0x21A6 PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH2 0x21B2 DUP5 DUP3 DUP6 PUSH2 0x216B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21CE JUMPI PUSH2 0x21CD PUSH2 0x20AB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21FD JUMPI PUSH2 0x21FC PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH2 0x2219 PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST PUSH2 0x2226 DUP6 DUP3 DUP7 ADD PUSH2 0x21BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2247 JUMPI PUSH2 0x2246 PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST PUSH2 0x2253 DUP6 DUP3 DUP7 ADD PUSH2 0x21BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226F DUP2 PUSH2 0x225D JUMP JUMPDEST DUP2 EQ PUSH2 0x2279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228A DUP2 PUSH2 0x2266 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A5 JUMPI PUSH2 0x22A4 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22B2 DUP5 DUP3 DUP6 ADD PUSH2 0x227C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22C4 DUP2 PUSH2 0x225D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22DD PUSH0 DUP4 ADD DUP5 PUSH2 0x22BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F5 DUP2 PUSH2 0x22E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x22FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2310 DUP2 PUSH2 0x22EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x232B JUMPI PUSH2 0x232A PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2338 DUP5 DUP3 DUP6 ADD PUSH2 0x2302 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x234A DUP2 PUSH2 0x22E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2363 PUSH0 DUP4 ADD DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2392 DUP3 PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x2388 JUMP JUMPDEST DUP2 EQ PUSH2 0x23AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23BD DUP2 PUSH2 0x2399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23D9 JUMPI PUSH2 0x23D8 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23E6 DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23F7 DUP6 DUP3 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x240A DUP2 PUSH2 0x2388 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2423 PUSH0 DUP4 ADD DUP5 PUSH2 0x2401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x243F JUMPI PUSH2 0x243E PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x244C DUP6 DUP3 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x245D DUP6 DUP3 DUP7 ADD PUSH2 0x2302 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247C DUP2 PUSH2 0x2467 JUMP JUMPDEST DUP2 EQ PUSH2 0x2486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2497 DUP2 PUSH2 0x2473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24A6 DUP2 PUSH2 0x2078 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C1 DUP2 PUSH2 0x249D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24DF JUMPI PUSH2 0x24DE PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24EC DUP8 DUP3 DUP9 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x24FD DUP8 DUP3 DUP9 ADD PUSH2 0x2489 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x250E DUP8 DUP3 DUP9 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x251F DUP8 DUP3 DUP9 ADD PUSH2 0x24B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x254E PUSH2 0x2549 PUSH2 0x2544 DUP5 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x252B JUMP JUMPDEST PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x255F DUP3 PUSH2 0x2534 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2570 DUP3 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2580 DUP2 PUSH2 0x2566 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2599 PUSH0 DUP4 ADD DUP5 PUSH2 0x2577 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B4 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25C2 DUP6 DUP3 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25D3 DUP6 DUP3 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2614 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x261F DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2637 JUMPI PUSH2 0x2636 PUSH2 0x25DD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x268B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x269E JUMPI PUSH2 0x269D PUSH2 0x2647 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2700 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26C5 JUMP JUMPDEST PUSH2 0x270A DUP7 DUP4 PUSH2 0x26C5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x273C PUSH2 0x2737 PUSH2 0x2732 DUP5 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x252B JUMP JUMPDEST PUSH2 0x22E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2755 DUP4 PUSH2 0x2722 JUMP JUMPDEST PUSH2 0x2769 PUSH2 0x2761 DUP3 PUSH2 0x2743 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26D1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x277D PUSH2 0x2771 JUMP JUMPDEST PUSH2 0x2788 DUP2 DUP5 DUP5 PUSH2 0x274C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27AB JUMPI PUSH2 0x27A0 PUSH0 DUP3 PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x278E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27F0 JUMPI PUSH2 0x27C1 DUP2 PUSH2 0x26A4 JUMP JUMPDEST PUSH2 0x27CA DUP5 PUSH2 0x26B6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27D9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x27ED PUSH2 0x27E5 DUP6 PUSH2 0x26B6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x278D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2810 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x27F5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2828 DUP4 DUP4 PUSH2 0x2801 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2841 DUP3 PUSH2 0x263D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x285A JUMPI PUSH2 0x2859 PUSH2 0x20C3 JUMP JUMPDEST JUMPDEST PUSH2 0x2864 DUP3 SLOAD PUSH2 0x2674 JUMP JUMPDEST PUSH2 0x286F DUP3 DUP3 DUP6 PUSH2 0x27AF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28A0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x288E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2898 DUP6 DUP3 PUSH2 0x281D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28FF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28AE DUP7 PUSH2 0x26A4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28D5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28B0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x28F2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x28EE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2801 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2911 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2943 JUMPI PUSH2 0x2942 PUSH2 0x25DD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2958 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2963 DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2971 DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x25DD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x29C6 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D1 DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x29E1 JUMPI PUSH2 0x29E0 PUSH2 0x298F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29FF PUSH0 DUP4 ADD DUP6 PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x2A0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A1D DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A28 DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x25DD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5E PUSH0 DUP4 PUSH2 0x2A46 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A69 DUP3 PUSH2 0x2A50 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A7D DUP3 PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2AC5 JUMPI PUSH2 0x2AC4 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2AD5 DUP3 PUSH2 0x2AB4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AE4 DUP3 PUSH2 0x2AC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF4 DUP2 PUSH2 0x2ADA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B0D PUSH0 DUP4 ADD DUP5 PUSH2 0x2AEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B31 DUP2 PUSH2 0x2B13 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B4C DUP2 PUSH2 0x2B28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B64 DUP2 PUSH2 0x2B52 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B7F DUP2 PUSH2 0x2B5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B93 DUP2 PUSH2 0x22EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BB2 JUMPI PUSH2 0x2BB1 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BBF DUP9 DUP3 DUP10 ADD PUSH2 0x2B3E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2BD0 DUP9 DUP3 DUP10 ADD PUSH2 0x2B71 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2BE1 DUP9 DUP3 DUP10 ADD PUSH2 0x2B85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2BF2 DUP9 DUP3 DUP10 ADD PUSH2 0x2B85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2C03 DUP9 DUP3 DUP10 ADD PUSH2 0x2B3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C54 PUSH1 0x1F DUP4 PUSH2 0x2C10 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5F DUP3 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C81 DUP2 PUSH2 0x2C48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C9B PUSH0 DUP4 ADD DUP7 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x2CA8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x2CB5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CD0 PUSH0 DUP4 ADD DUP6 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x2CDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CF7 PUSH0 DUP4 ADD DUP6 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x2D04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x3E87135A3E30972853D6754FD3A8C03C08A44BF44D0342AFF4351A24 0x2D RETURN 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "549:9897:12:-:0;;;4622:207;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:1:6;1821:7;:22;;;;4690:34:12;2241:4:1;827:18:12;;4713:10;4690;;;:34;;:::i;:::-;;4773:19;4734:59;;;;;;;;;;4815:7;4803:19;;;;;;4622:207;;549:9897;;6155:316:1;6232:4;6253:22;6261:4;6267:7;6253;;;:22;;:::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;;;:12;;:::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;2830:136::-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;88:117:13:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:507::-;1284:6;1292;1341:2;1329:9;1320:7;1316:23;1312:32;1309:119;;;1347:79;;:::i;:::-;1309:119;1467:1;1492:64;1548:7;1539:6;1528:9;1524:22;1492:64;:::i;:::-;1482:74;;1438:128;1605:2;1631:64;1687:7;1678:6;1667:9;1663:22;1631:64;:::i;:::-;1621:74;;1576:129;1205:507;;;;;:::o;549:9897:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_1205": {
									"entryPoint": 4669,
									"id": 1205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_76": {
									"entryPoint": 5868,
									"id": 76,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_WITHDRAW_AMOUNT_1236": {
									"entryPoint": 4182,
									"id": 1236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@NATIVE_TOKEN_1242": {
									"entryPoint": 3210,
									"id": 1242,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@USD_FEED_DECIMALS_1233": {
									"entryPoint": 6944,
									"id": 1233,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1080": {
									"entryPoint": 8012,
									"id": 1080,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_140": {
									"entryPoint": 7181,
									"id": 140,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_161": {
									"entryPoint": 7931,
									"id": 161,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_grantRole_303": {
									"entryPoint": 7201,
									"id": 303,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1134": {
									"entryPoint": 7564,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_568": {
									"entryPoint": 7172,
									"id": 568,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_560": {
									"entryPoint": 7093,
									"id": 560,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revokeRole_341": {
									"entryPoint": 7571,
									"id": 341,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@convertWeiToUsd_1838": {
									"entryPoint": 2242,
									"id": 1838,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@createAccount_1460": {
									"entryPoint": 1493,
									"id": 1460,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@depositToken_1593": {
									"entryPoint": 3214,
									"id": 1593,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@deposit_1519": {
									"entryPoint": 5910,
									"id": 1519,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_1799": {
									"entryPoint": 6493,
									"id": 1799,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getDepositCount_1847": {
									"entryPoint": 4774,
									"id": 1847,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getEthPriceInUsd_1817": {
									"entryPoint": 6788,
									"id": 1817,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_175": {
									"entryPoint": 2214,
									"id": 175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getWithdrawCount_1856": {
									"entryPoint": 4194,
									"id": 1856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@grantRole_194": {
									"entryPoint": 3176,
									"id": 194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_127": {
									"entryPoint": 4675,
									"id": 127,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@i_bankCap_1244": {
									"entryPoint": 6952,
									"id": 1244,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@i_ethPriceFeed_1247": {
									"entryPoint": 5874,
									"id": 1247,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_236": {
									"entryPoint": 4059,
									"id": 236,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_213": {
									"entryPoint": 6754,
									"id": 213,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_730": {
									"entryPoint": 7434,
									"id": 730,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_703": {
									"entryPoint": 7804,
									"id": 703,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setToken_1388": {
									"entryPoint": 4203,
									"id": 1388,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@supportsInterface_109": {
									"entryPoint": 1372,
									"id": 109,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1175": {
									"entryPoint": 6988,
									"id": 1175,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@withdrawToken_1773": {
									"entryPoint": 4783,
									"id": 1773,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_1681": {
									"entryPoint": 2293,
									"id": 1681,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8828,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 8249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_int256_fromMemory": {
									"entryPoint": 11121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 8634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 8962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11141,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8": {
									"entryPoint": 9353,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint80_fromMemory": {
									"entryPoint": 11070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 9631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint8t_addresst_bool": {
									"entryPoint": 9415,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 8679,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8982,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory": {
									"entryPoint": 11161,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 8891,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack": {
									"entryPoint": 9591,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_TokenState_$1208_to_t_uint8_fromStack": {
									"entryPoint": 10987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9025,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9232,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11400,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 11492,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11453,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8338,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 8906,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed": {
									"entryPoint": 9606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_TokenState_$1208__to_t_uint8__fromStack_reversed": {
									"entryPoint": 11002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11370,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10732,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 8167,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 8507,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 11280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9738,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10574,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 10159,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 9096,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8312,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 8184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_TokenState_$1208": {
									"entryPoint": 10952,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_int256": {
									"entryPoint": 11090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 8931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 9319,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint80": {
									"entryPoint": 11027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 10125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_contract$_AggregatorV3Interface_$45_to_t_address": {
									"entryPoint": 9574,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_TokenState_$1208_to_t_uint8": {
									"entryPoint": 10970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9524,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 10018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10296,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8555,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9910,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9844,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 10269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 10241,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9693,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10639,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 10887,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9799,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8387,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 10051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8363,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8367,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 8180,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8371,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 10229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 10101,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 10832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 11296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9937,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 10060,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_TokenState_$1208": {
									"entryPoint": 10932,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9373,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 8227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_int256": {
									"entryPoint": 11099,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 8940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 9331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint80": {
									"entryPoint": 11048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 10097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24401:13",
										"nodeType": "YulBlock",
										"src": "0:24401:13",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:13",
													"nodeType": "YulBlock",
													"src": "47:35:13",
													"statements": [
														{
															"nativeSrc": "57:19:13",
															"nodeType": "YulAssignment",
															"src": "57:19:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:13",
																		"nodeType": "YulLiteral",
																		"src": "73:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:13"
																},
																"nativeSrc": "67:9:13",
																"nodeType": "YulFunctionCall",
																"src": "67:9:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:13"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:13",
														"nodeType": "YulTypedName",
														"src": "40:6:13",
														"type": ""
													}
												],
												"src": "7:75:13"
											},
											{
												"body": {
													"nativeSrc": "177:28:13",
													"nodeType": "YulBlock",
													"src": "177:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:13",
																		"nodeType": "YulLiteral",
																		"src": "194:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:13",
																		"nodeType": "YulLiteral",
																		"src": "197:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:13"
																},
																"nativeSrc": "187:12:13",
																"nodeType": "YulFunctionCall",
																"src": "187:12:13"
															},
															"nativeSrc": "187:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:13"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:13"
											},
											{
												"body": {
													"nativeSrc": "300:28:13",
													"nodeType": "YulBlock",
													"src": "300:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:13",
																		"nodeType": "YulLiteral",
																		"src": "317:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:13",
																		"nodeType": "YulLiteral",
																		"src": "320:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:13"
																},
																"nativeSrc": "310:12:13",
																"nodeType": "YulFunctionCall",
																"src": "310:12:13"
															},
															"nativeSrc": "310:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:13"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:13"
											},
											{
												"body": {
													"nativeSrc": "378:105:13",
													"nodeType": "YulBlock",
													"src": "378:105:13",
													"statements": [
														{
															"nativeSrc": "388:89:13",
															"nodeType": "YulAssignment",
															"src": "388:89:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:13",
																		"nodeType": "YulLiteral",
																		"src": "410:66:13",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:13"
																},
																"nativeSrc": "399:78:13",
																"nodeType": "YulFunctionCall",
																"src": "399:78:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:13",
														"nodeType": "YulTypedName",
														"src": "360:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:13",
														"nodeType": "YulTypedName",
														"src": "370:7:13",
														"type": ""
													}
												],
												"src": "334:149:13"
											},
											{
												"body": {
													"nativeSrc": "531:78:13",
													"nodeType": "YulBlock",
													"src": "531:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:13",
																"nodeType": "YulBlock",
																"src": "587:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:13",
																					"nodeType": "YulLiteral",
																					"src": "596:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:13",
																					"nodeType": "YulLiteral",
																					"src": "599:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:13"
																			},
																			"nativeSrc": "589:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:13"
																		},
																		"nativeSrc": "589:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:13"
																				},
																				"nativeSrc": "561:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:13"
																		},
																		"nativeSrc": "551:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:13"
																},
																"nativeSrc": "544:42:13",
																"nodeType": "YulFunctionCall",
																"src": "544:42:13"
															},
															"nativeSrc": "541:62:13",
															"nodeType": "YulIf",
															"src": "541:62:13"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:13",
														"nodeType": "YulTypedName",
														"src": "524:5:13",
														"type": ""
													}
												],
												"src": "489:120:13"
											},
											{
												"body": {
													"nativeSrc": "666:86:13",
													"nodeType": "YulBlock",
													"src": "666:86:13",
													"statements": [
														{
															"nativeSrc": "676:29:13",
															"nodeType": "YulAssignment",
															"src": "676:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:13"
																},
																"nativeSrc": "685:20:13",
																"nodeType": "YulFunctionCall",
																"src": "685:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:13"
																},
																"nativeSrc": "714:32:13",
																"nodeType": "YulFunctionCall",
																"src": "714:32:13"
															},
															"nativeSrc": "714:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:13"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:13",
														"nodeType": "YulTypedName",
														"src": "644:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:13",
														"nodeType": "YulTypedName",
														"src": "652:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:13",
														"nodeType": "YulTypedName",
														"src": "660:5:13",
														"type": ""
													}
												],
												"src": "615:137:13"
											},
											{
												"body": {
													"nativeSrc": "823:262:13",
													"nodeType": "YulBlock",
													"src": "823:262:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:13",
																"nodeType": "YulBlock",
																"src": "869:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:13"
																			},
																			"nativeSrc": "871:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:13"
																		},
																		"nativeSrc": "871:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:13"
																		},
																		"nativeSrc": "840:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:13",
																		"nodeType": "YulLiteral",
																		"src": "865:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:13"
																},
																"nativeSrc": "836:32:13",
																"nodeType": "YulFunctionCall",
																"src": "836:32:13"
															},
															"nativeSrc": "833:119:13",
															"nodeType": "YulIf",
															"src": "833:119:13"
														},
														{
															"nativeSrc": "962:116:13",
															"nodeType": "YulBlock",
															"src": "962:116:13",
															"statements": [
																{
																	"nativeSrc": "977:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:13",
																		"nodeType": "YulLiteral",
																		"src": "991:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:13",
																			"nodeType": "YulTypedName",
																			"src": "981:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:13",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:13"
																				},
																				"nativeSrc": "1036:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:13",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:13"
																		},
																		"nativeSrc": "1016:52:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:13",
														"nodeType": "YulTypedName",
														"src": "793:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:13",
														"nodeType": "YulTypedName",
														"src": "804:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:13",
														"nodeType": "YulTypedName",
														"src": "816:6:13",
														"type": ""
													}
												],
												"src": "758:327:13"
											},
											{
												"body": {
													"nativeSrc": "1133:48:13",
													"nodeType": "YulBlock",
													"src": "1133:48:13",
													"statements": [
														{
															"nativeSrc": "1143:32:13",
															"nodeType": "YulAssignment",
															"src": "1143:32:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:13"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:13"
																		},
																		"nativeSrc": "1161:13:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:13"
																},
																"nativeSrc": "1154:21:13",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:13",
														"nodeType": "YulTypedName",
														"src": "1115:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:13",
														"nodeType": "YulTypedName",
														"src": "1125:7:13",
														"type": ""
													}
												],
												"src": "1091:90:13"
											},
											{
												"body": {
													"nativeSrc": "1246:50:13",
													"nodeType": "YulBlock",
													"src": "1246:50:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:13",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:13"
																		},
																		"nativeSrc": "1268:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:13"
																},
																"nativeSrc": "1256:34:13",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:13"
															},
															"nativeSrc": "1256:34:13",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:13"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:13",
														"nodeType": "YulTypedName",
														"src": "1234:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:13",
														"nodeType": "YulTypedName",
														"src": "1241:3:13",
														"type": ""
													}
												],
												"src": "1187:109:13"
											},
											{
												"body": {
													"nativeSrc": "1394:118:13",
													"nodeType": "YulBlock",
													"src": "1394:118:13",
													"statements": [
														{
															"nativeSrc": "1404:26:13",
															"nodeType": "YulAssignment",
															"src": "1404:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:13",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:13"
																},
																"nativeSrc": "1412:18:13",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:13",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:13"
																		},
																		"nativeSrc": "1487:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:13",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:13"
																},
																"nativeSrc": "1440:65:13",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:13"
															},
															"nativeSrc": "1440:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:13",
														"nodeType": "YulTypedName",
														"src": "1366:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:13",
														"nodeType": "YulTypedName",
														"src": "1378:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:13",
														"nodeType": "YulTypedName",
														"src": "1389:4:13",
														"type": ""
													}
												],
												"src": "1302:210:13"
											},
											{
												"body": {
													"nativeSrc": "1607:28:13",
													"nodeType": "YulBlock",
													"src": "1607:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1624:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1624:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1627:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1627:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1617:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1617:6:13"
																},
																"nativeSrc": "1617:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1617:12:13"
															},
															"nativeSrc": "1617:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1617:12:13"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "1518:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1518:117:13"
											},
											{
												"body": {
													"nativeSrc": "1730:28:13",
													"nodeType": "YulBlock",
													"src": "1730:28:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1747:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1747:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1750:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1750:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1740:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1740:6:13"
																},
																"nativeSrc": "1740:12:13",
																"nodeType": "YulFunctionCall",
																"src": "1740:12:13"
															},
															"nativeSrc": "1740:12:13",
															"nodeType": "YulExpressionStatement",
															"src": "1740:12:13"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "1641:117:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1641:117:13"
											},
											{
												"body": {
													"nativeSrc": "1812:54:13",
													"nodeType": "YulBlock",
													"src": "1812:54:13",
													"statements": [
														{
															"nativeSrc": "1822:38:13",
															"nodeType": "YulAssignment",
															"src": "1822:38:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1840:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "1840:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1847:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1847:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1836:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1836:3:13"
																		},
																		"nativeSrc": "1836:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1836:14:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1856:2:13",
																				"nodeType": "YulLiteral",
																				"src": "1856:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1852:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "1852:3:13"
																		},
																		"nativeSrc": "1852:7:13",
																		"nodeType": "YulFunctionCall",
																		"src": "1852:7:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1832:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "1832:3:13"
																},
																"nativeSrc": "1832:28:13",
																"nodeType": "YulFunctionCall",
																"src": "1832:28:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1822:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1822:6:13"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1764:102:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1795:5:13",
														"nodeType": "YulTypedName",
														"src": "1795:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1805:6:13",
														"nodeType": "YulTypedName",
														"src": "1805:6:13",
														"type": ""
													}
												],
												"src": "1764:102:13"
											},
											{
												"body": {
													"nativeSrc": "1900:152:13",
													"nodeType": "YulBlock",
													"src": "1900:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1917:1:13",
																		"nodeType": "YulLiteral",
																		"src": "1917:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1920:77:13",
																		"nodeType": "YulLiteral",
																		"src": "1920:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1910:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "1910:6:13"
																},
																"nativeSrc": "1910:88:13",
																"nodeType": "YulFunctionCall",
																"src": "1910:88:13"
															},
															"nativeSrc": "1910:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "1910:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2014:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2014:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2017:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2017:4:13",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2007:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2007:6:13"
																},
																"nativeSrc": "2007:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2007:15:13"
															},
															"nativeSrc": "2007:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2007:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2038:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2038:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2041:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2041:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2031:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2031:6:13"
																},
																"nativeSrc": "2031:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2031:15:13"
															},
															"nativeSrc": "2031:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "2031:15:13"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1872:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "1872:180:13"
											},
											{
												"body": {
													"nativeSrc": "2101:238:13",
													"nodeType": "YulBlock",
													"src": "2101:238:13",
													"statements": [
														{
															"nativeSrc": "2111:58:13",
															"nodeType": "YulVariableDeclaration",
															"src": "2111:58:13",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2133:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2133:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "2163:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "2163:4:13"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2141:21:13",
																			"nodeType": "YulIdentifier",
																			"src": "2141:21:13"
																		},
																		"nativeSrc": "2141:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2141:27:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2129:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2129:3:13"
																},
																"nativeSrc": "2129:40:13",
																"nodeType": "YulFunctionCall",
																"src": "2129:40:13"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2115:10:13",
																	"nodeType": "YulTypedName",
																	"src": "2115:10:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2280:22:13",
																"nodeType": "YulBlock",
																"src": "2280:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2282:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2282:16:13"
																			},
																			"nativeSrc": "2282:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2282:18:13"
																		},
																		"nativeSrc": "2282:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2282:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2223:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "2223:10:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2235:18:13",
																				"nodeType": "YulLiteral",
																				"src": "2235:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2220:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2220:2:13"
																		},
																		"nativeSrc": "2220:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:34:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2259:10:13",
																				"nodeType": "YulIdentifier",
																				"src": "2259:10:13"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2271:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:13"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2256:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "2256:2:13"
																		},
																		"nativeSrc": "2256:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2256:22:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2217:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2217:2:13"
																},
																"nativeSrc": "2217:62:13",
																"nodeType": "YulFunctionCall",
																"src": "2217:62:13"
															},
															"nativeSrc": "2214:88:13",
															"nodeType": "YulIf",
															"src": "2214:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2318:2:13",
																		"nodeType": "YulLiteral",
																		"src": "2318:2:13",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2322:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "2322:10:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2311:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2311:6:13"
																},
																"nativeSrc": "2311:22:13",
																"nodeType": "YulFunctionCall",
																"src": "2311:22:13"
															},
															"nativeSrc": "2311:22:13",
															"nodeType": "YulExpressionStatement",
															"src": "2311:22:13"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "2058:281:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2087:6:13",
														"nodeType": "YulTypedName",
														"src": "2087:6:13",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "2095:4:13",
														"nodeType": "YulTypedName",
														"src": "2095:4:13",
														"type": ""
													}
												],
												"src": "2058:281:13"
											},
											{
												"body": {
													"nativeSrc": "2386:88:13",
													"nodeType": "YulBlock",
													"src": "2386:88:13",
													"statements": [
														{
															"nativeSrc": "2396:30:13",
															"nodeType": "YulAssignment",
															"src": "2396:30:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "2406:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "2406:18:13"
																},
																"nativeSrc": "2406:20:13",
																"nodeType": "YulFunctionCall",
																"src": "2406:20:13"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2396:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2396:6:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2455:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2455:6:13"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "2463:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2463:4:13"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "2435:19:13",
																	"nodeType": "YulIdentifier",
																	"src": "2435:19:13"
																},
																"nativeSrc": "2435:33:13",
																"nodeType": "YulFunctionCall",
																"src": "2435:33:13"
															},
															"nativeSrc": "2435:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "2435:33:13"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "2345:129:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "2370:4:13",
														"nodeType": "YulTypedName",
														"src": "2370:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "2379:6:13",
														"nodeType": "YulTypedName",
														"src": "2379:6:13",
														"type": ""
													}
												],
												"src": "2345:129:13"
											},
											{
												"body": {
													"nativeSrc": "2547:241:13",
													"nodeType": "YulBlock",
													"src": "2547:241:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "2652:22:13",
																"nodeType": "YulBlock",
																"src": "2652:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2654:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "2654:16:13"
																			},
																			"nativeSrc": "2654:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "2654:18:13"
																		},
																		"nativeSrc": "2654:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "2654:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2624:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2624:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2632:18:13",
																		"nodeType": "YulLiteral",
																		"src": "2632:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2621:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "2621:2:13"
																},
																"nativeSrc": "2621:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2621:30:13"
															},
															"nativeSrc": "2618:56:13",
															"nodeType": "YulIf",
															"src": "2618:56:13"
														},
														{
															"nativeSrc": "2684:37:13",
															"nodeType": "YulAssignment",
															"src": "2684:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "2714:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2714:6:13"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "2692:21:13",
																	"nodeType": "YulIdentifier",
																	"src": "2692:21:13"
																},
																"nativeSrc": "2692:29:13",
																"nodeType": "YulFunctionCall",
																"src": "2692:29:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2684:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2684:4:13"
																}
															]
														},
														{
															"nativeSrc": "2758:23:13",
															"nodeType": "YulAssignment",
															"src": "2758:23:13",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "2770:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "2770:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2776:4:13",
																		"nodeType": "YulLiteral",
																		"src": "2776:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2766:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "2766:3:13"
																},
																"nativeSrc": "2766:15:13",
																"nodeType": "YulFunctionCall",
																"src": "2766:15:13"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "2758:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "2758:4:13"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "2480:308:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "2531:6:13",
														"nodeType": "YulTypedName",
														"src": "2531:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "2542:4:13",
														"nodeType": "YulTypedName",
														"src": "2542:4:13",
														"type": ""
													}
												],
												"src": "2480:308:13"
											},
											{
												"body": {
													"nativeSrc": "2858:84:13",
													"nodeType": "YulBlock",
													"src": "2858:84:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2882:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2882:3:13"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2887:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "2887:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2892:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "2892:6:13"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2869:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "2869:12:13"
																},
																"nativeSrc": "2869:30:13",
																"nodeType": "YulFunctionCall",
																"src": "2869:30:13"
															},
															"nativeSrc": "2869:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "2869:30:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2919:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "2919:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2924:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "2924:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2915:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "2915:3:13"
																		},
																		"nativeSrc": "2915:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "2915:16:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2933:1:13",
																		"nodeType": "YulLiteral",
																		"src": "2933:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2908:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "2908:6:13"
																},
																"nativeSrc": "2908:27:13",
																"nodeType": "YulFunctionCall",
																"src": "2908:27:13"
															},
															"nativeSrc": "2908:27:13",
															"nodeType": "YulExpressionStatement",
															"src": "2908:27:13"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "2794:148:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2840:3:13",
														"nodeType": "YulTypedName",
														"src": "2840:3:13",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2845:3:13",
														"nodeType": "YulTypedName",
														"src": "2845:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2850:6:13",
														"nodeType": "YulTypedName",
														"src": "2850:6:13",
														"type": ""
													}
												],
												"src": "2794:148:13"
											},
											{
												"body": {
													"nativeSrc": "3032:341:13",
													"nodeType": "YulBlock",
													"src": "3032:341:13",
													"statements": [
														{
															"nativeSrc": "3042:75:13",
															"nodeType": "YulAssignment",
															"src": "3042:75:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3109:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3109:6:13"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "3067:41:13",
																			"nodeType": "YulIdentifier",
																			"src": "3067:41:13"
																		},
																		"nativeSrc": "3067:49:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3067:49:13"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "3051:15:13",
																	"nodeType": "YulIdentifier",
																	"src": "3051:15:13"
																},
																"nativeSrc": "3051:66:13",
																"nodeType": "YulFunctionCall",
																"src": "3051:66:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3042:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3042:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3133:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3133:5:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3140:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3140:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3126:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3126:6:13"
																},
																"nativeSrc": "3126:21:13",
																"nodeType": "YulFunctionCall",
																"src": "3126:21:13"
															},
															"nativeSrc": "3126:21:13",
															"nodeType": "YulExpressionStatement",
															"src": "3126:21:13"
														},
														{
															"nativeSrc": "3156:27:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3156:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "3171:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "3171:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3178:4:13",
																		"nodeType": "YulLiteral",
																		"src": "3178:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3167:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3167:3:13"
																},
																"nativeSrc": "3167:16:13",
																"nodeType": "YulFunctionCall",
																"src": "3167:16:13"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "3160:3:13",
																	"nodeType": "YulTypedName",
																	"src": "3160:3:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3221:83:13",
																"nodeType": "YulBlock",
																"src": "3221:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "3223:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:13"
																			},
																			"nativeSrc": "3223:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:13"
																		},
																		"nativeSrc": "3223:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "3202:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3202:3:13"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "3207:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3207:6:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3198:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3198:3:13"
																		},
																		"nativeSrc": "3198:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:16:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3216:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3216:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3195:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "3195:2:13"
																},
																"nativeSrc": "3195:25:13",
																"nodeType": "YulFunctionCall",
																"src": "3195:25:13"
															},
															"nativeSrc": "3192:112:13",
															"nodeType": "YulIf",
															"src": "3192:112:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3350:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3350:3:13"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "3355:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3355:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3360:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3360:6:13"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "3313:36:13",
																	"nodeType": "YulIdentifier",
																	"src": "3313:36:13"
																},
																"nativeSrc": "3313:54:13",
																"nodeType": "YulFunctionCall",
																"src": "3313:54:13"
															},
															"nativeSrc": "3313:54:13",
															"nodeType": "YulExpressionStatement",
															"src": "3313:54:13"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "2948:425:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "3005:3:13",
														"nodeType": "YulTypedName",
														"src": "3005:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "3010:6:13",
														"nodeType": "YulTypedName",
														"src": "3010:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3018:3:13",
														"nodeType": "YulTypedName",
														"src": "3018:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3026:5:13",
														"nodeType": "YulTypedName",
														"src": "3026:5:13",
														"type": ""
													}
												],
												"src": "2948:425:13"
											},
											{
												"body": {
													"nativeSrc": "3455:278:13",
													"nodeType": "YulBlock",
													"src": "3455:278:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3504:83:13",
																"nodeType": "YulBlock",
																"src": "3504:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "3506:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3506:77:13"
																			},
																			"nativeSrc": "3506:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3506:79:13"
																		},
																		"nativeSrc": "3506:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3506:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "3483:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "3483:6:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3491:4:13",
																						"nodeType": "YulLiteral",
																						"src": "3491:4:13",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3479:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "3479:3:13"
																				},
																				"nativeSrc": "3479:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "3479:17:13"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "3498:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "3498:3:13"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3475:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3475:3:13"
																		},
																		"nativeSrc": "3475:27:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3475:27:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3468:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "3468:6:13"
																},
																"nativeSrc": "3468:35:13",
																"nodeType": "YulFunctionCall",
																"src": "3468:35:13"
															},
															"nativeSrc": "3465:122:13",
															"nodeType": "YulIf",
															"src": "3465:122:13"
														},
														{
															"nativeSrc": "3596:34:13",
															"nodeType": "YulVariableDeclaration",
															"src": "3596:34:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3623:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3623:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3610:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "3610:12:13"
																},
																"nativeSrc": "3610:20:13",
																"nodeType": "YulFunctionCall",
																"src": "3610:20:13"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3600:6:13",
																	"nodeType": "YulTypedName",
																	"src": "3600:6:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3639:88:13",
															"nodeType": "YulAssignment",
															"src": "3639:88:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3700:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "3700:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3708:4:13",
																				"nodeType": "YulLiteral",
																				"src": "3708:4:13",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3696:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3696:3:13"
																		},
																		"nativeSrc": "3696:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3696:17:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3715:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "3715:6:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3723:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "3723:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "3648:47:13",
																	"nodeType": "YulIdentifier",
																	"src": "3648:47:13"
																},
																"nativeSrc": "3648:79:13",
																"nodeType": "YulFunctionCall",
																"src": "3648:79:13"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "3639:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "3639:5:13"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "3393:340:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3433:6:13",
														"nodeType": "YulTypedName",
														"src": "3433:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3441:3:13",
														"nodeType": "YulTypedName",
														"src": "3441:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "3449:5:13",
														"nodeType": "YulTypedName",
														"src": "3449:5:13",
														"type": ""
													}
												],
												"src": "3393:340:13"
											},
											{
												"body": {
													"nativeSrc": "3842:731:13",
													"nodeType": "YulBlock",
													"src": "3842:731:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "3888:83:13",
																"nodeType": "YulBlock",
																"src": "3888:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3890:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "3890:77:13"
																			},
																			"nativeSrc": "3890:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "3890:79:13"
																		},
																		"nativeSrc": "3890:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "3890:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3863:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "3863:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3872:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "3872:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3859:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:13"
																		},
																		"nativeSrc": "3859:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3884:2:13",
																		"nodeType": "YulLiteral",
																		"src": "3884:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3855:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:13"
																},
																"nativeSrc": "3855:32:13",
																"nodeType": "YulFunctionCall",
																"src": "3855:32:13"
															},
															"nativeSrc": "3852:119:13",
															"nodeType": "YulIf",
															"src": "3852:119:13"
														},
														{
															"nativeSrc": "3981:287:13",
															"nodeType": "YulBlock",
															"src": "3981:287:13",
															"statements": [
																{
																	"nativeSrc": "3996:45:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3996:45:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4027:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4027:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4038:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4038:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4023:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4023:3:13"
																				},
																				"nativeSrc": "4023:17:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4023:17:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4010:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "4010:12:13"
																		},
																		"nativeSrc": "4010:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4010:31:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4000:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4000:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4088:83:13",
																		"nodeType": "YulBlock",
																		"src": "4088:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4090:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4090:77:13"
																					},
																					"nativeSrc": "4090:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4090:79:13"
																				},
																				"nativeSrc": "4090:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4090:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4060:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4060:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4068:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4068:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4057:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4057:2:13"
																		},
																		"nativeSrc": "4057:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4057:30:13"
																	},
																	"nativeSrc": "4054:117:13",
																	"nodeType": "YulIf",
																	"src": "4054:117:13"
																},
																{
																	"nativeSrc": "4185:73:13",
																	"nodeType": "YulAssignment",
																	"src": "4185:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4230:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4230:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4241:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4241:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4226:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4226:3:13"
																				},
																				"nativeSrc": "4226:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4226:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4250:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4250:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "4195:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "4195:30:13"
																		},
																		"nativeSrc": "4195:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4195:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4185:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4185:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4278:288:13",
															"nodeType": "YulBlock",
															"src": "4278:288:13",
															"statements": [
																{
																	"nativeSrc": "4293:46:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4293:46:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4324:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4324:9:13"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4335:2:13",
																						"nodeType": "YulLiteral",
																						"src": "4335:2:13",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4320:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4320:3:13"
																				},
																				"nativeSrc": "4320:18:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4320:18:13"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4307:12:13",
																			"nodeType": "YulIdentifier",
																			"src": "4307:12:13"
																		},
																		"nativeSrc": "4307:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4307:32:13"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4297:6:13",
																			"nodeType": "YulTypedName",
																			"src": "4297:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "4386:83:13",
																		"nodeType": "YulBlock",
																		"src": "4386:83:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "4388:77:13",
																						"nodeType": "YulIdentifier",
																						"src": "4388:77:13"
																					},
																					"nativeSrc": "4388:79:13",
																					"nodeType": "YulFunctionCall",
																					"src": "4388:79:13"
																				},
																				"nativeSrc": "4388:79:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "4388:79:13"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "4358:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4358:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4366:18:13",
																				"nodeType": "YulLiteral",
																				"src": "4366:18:13",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4355:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4355:2:13"
																		},
																		"nativeSrc": "4355:30:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4355:30:13"
																	},
																	"nativeSrc": "4352:117:13",
																	"nodeType": "YulIf",
																	"src": "4352:117:13"
																},
																{
																	"nativeSrc": "4483:73:13",
																	"nodeType": "YulAssignment",
																	"src": "4483:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4528:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "4528:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4539:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "4539:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4524:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4524:3:13"
																				},
																				"nativeSrc": "4524:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4524:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4548:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "4548:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "4493:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "4493:30:13"
																		},
																		"nativeSrc": "4493:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4493:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4483:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4483:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "3739:834:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3804:9:13",
														"nodeType": "YulTypedName",
														"src": "3804:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3815:7:13",
														"nodeType": "YulTypedName",
														"src": "3815:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3827:6:13",
														"nodeType": "YulTypedName",
														"src": "3827:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3835:6:13",
														"nodeType": "YulTypedName",
														"src": "3835:6:13",
														"type": ""
													}
												],
												"src": "3739:834:13"
											},
											{
												"body": {
													"nativeSrc": "4624:32:13",
													"nodeType": "YulBlock",
													"src": "4624:32:13",
													"statements": [
														{
															"nativeSrc": "4634:16:13",
															"nodeType": "YulAssignment",
															"src": "4634:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "4645:5:13",
																"nodeType": "YulIdentifier",
																"src": "4645:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4634:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "4634:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "4579:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4606:5:13",
														"nodeType": "YulTypedName",
														"src": "4606:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4616:7:13",
														"nodeType": "YulTypedName",
														"src": "4616:7:13",
														"type": ""
													}
												],
												"src": "4579:77:13"
											},
											{
												"body": {
													"nativeSrc": "4705:79:13",
													"nodeType": "YulBlock",
													"src": "4705:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "4762:16:13",
																"nodeType": "YulBlock",
																"src": "4762:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4771:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4771:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4774:1:13",
																					"nodeType": "YulLiteral",
																					"src": "4774:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4764:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "4764:6:13"
																			},
																			"nativeSrc": "4764:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "4764:12:13"
																		},
																		"nativeSrc": "4764:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "4764:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4728:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "4728:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4753:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4753:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "4735:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "4735:17:13"
																				},
																				"nativeSrc": "4735:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4735:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4725:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "4725:2:13"
																		},
																		"nativeSrc": "4725:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4725:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4718:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "4718:6:13"
																},
																"nativeSrc": "4718:43:13",
																"nodeType": "YulFunctionCall",
																"src": "4718:43:13"
															},
															"nativeSrc": "4715:63:13",
															"nodeType": "YulIf",
															"src": "4715:63:13"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "4662:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4698:5:13",
														"nodeType": "YulTypedName",
														"src": "4698:5:13",
														"type": ""
													}
												],
												"src": "4662:122:13"
											},
											{
												"body": {
													"nativeSrc": "4842:87:13",
													"nodeType": "YulBlock",
													"src": "4842:87:13",
													"statements": [
														{
															"nativeSrc": "4852:29:13",
															"nodeType": "YulAssignment",
															"src": "4852:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4874:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "4874:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4861:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "4861:12:13"
																},
																"nativeSrc": "4861:20:13",
																"nodeType": "YulFunctionCall",
																"src": "4861:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4852:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "4852:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4917:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "4917:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "4890:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "4890:26:13"
																},
																"nativeSrc": "4890:33:13",
																"nodeType": "YulFunctionCall",
																"src": "4890:33:13"
															},
															"nativeSrc": "4890:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "4890:33:13"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "4790:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4820:6:13",
														"nodeType": "YulTypedName",
														"src": "4820:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4828:3:13",
														"nodeType": "YulTypedName",
														"src": "4828:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4836:5:13",
														"nodeType": "YulTypedName",
														"src": "4836:5:13",
														"type": ""
													}
												],
												"src": "4790:139:13"
											},
											{
												"body": {
													"nativeSrc": "5001:263:13",
													"nodeType": "YulBlock",
													"src": "5001:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5047:83:13",
																"nodeType": "YulBlock",
																"src": "5047:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5049:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "5049:77:13"
																			},
																			"nativeSrc": "5049:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5049:79:13"
																		},
																		"nativeSrc": "5049:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5049:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5022:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5022:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5031:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5031:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5018:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5018:3:13"
																		},
																		"nativeSrc": "5018:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5018:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5043:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5043:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5014:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5014:3:13"
																},
																"nativeSrc": "5014:32:13",
																"nodeType": "YulFunctionCall",
																"src": "5014:32:13"
															},
															"nativeSrc": "5011:119:13",
															"nodeType": "YulIf",
															"src": "5011:119:13"
														},
														{
															"nativeSrc": "5140:117:13",
															"nodeType": "YulBlock",
															"src": "5140:117:13",
															"statements": [
																{
																	"nativeSrc": "5155:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5155:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5169:1:13",
																		"nodeType": "YulLiteral",
																		"src": "5169:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5159:6:13",
																			"nodeType": "YulTypedName",
																			"src": "5159:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5184:63:13",
																	"nodeType": "YulAssignment",
																	"src": "5184:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5219:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5219:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5230:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "5230:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5215:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "5215:3:13"
																				},
																				"nativeSrc": "5215:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5215:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5239:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "5239:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "5194:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "5194:20:13"
																		},
																		"nativeSrc": "5194:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5194:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5184:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5184:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "4935:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4971:9:13",
														"nodeType": "YulTypedName",
														"src": "4971:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4982:7:13",
														"nodeType": "YulTypedName",
														"src": "4982:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4994:6:13",
														"nodeType": "YulTypedName",
														"src": "4994:6:13",
														"type": ""
													}
												],
												"src": "4935:329:13"
											},
											{
												"body": {
													"nativeSrc": "5335:53:13",
													"nodeType": "YulBlock",
													"src": "5335:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5352:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "5352:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5375:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5375:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "5357:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "5357:17:13"
																		},
																		"nativeSrc": "5357:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5345:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5345:6:13"
																},
																"nativeSrc": "5345:37:13",
																"nodeType": "YulFunctionCall",
																"src": "5345:37:13"
															},
															"nativeSrc": "5345:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "5345:37:13"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "5270:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5323:5:13",
														"nodeType": "YulTypedName",
														"src": "5323:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5330:3:13",
														"nodeType": "YulTypedName",
														"src": "5330:3:13",
														"type": ""
													}
												],
												"src": "5270:118:13"
											},
											{
												"body": {
													"nativeSrc": "5492:124:13",
													"nodeType": "YulBlock",
													"src": "5492:124:13",
													"statements": [
														{
															"nativeSrc": "5502:26:13",
															"nodeType": "YulAssignment",
															"src": "5502:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5514:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "5514:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5525:2:13",
																		"nodeType": "YulLiteral",
																		"src": "5525:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5510:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "5510:3:13"
																},
																"nativeSrc": "5510:18:13",
																"nodeType": "YulFunctionCall",
																"src": "5510:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5502:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "5502:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5582:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5582:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5595:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5595:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5606:1:13",
																				"nodeType": "YulLiteral",
																				"src": "5606:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5591:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5591:3:13"
																		},
																		"nativeSrc": "5591:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5591:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "5538:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "5538:43:13"
																},
																"nativeSrc": "5538:71:13",
																"nodeType": "YulFunctionCall",
																"src": "5538:71:13"
															},
															"nativeSrc": "5538:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "5538:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "5394:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5464:9:13",
														"nodeType": "YulTypedName",
														"src": "5464:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5476:6:13",
														"nodeType": "YulTypedName",
														"src": "5476:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5487:4:13",
														"nodeType": "YulTypedName",
														"src": "5487:4:13",
														"type": ""
													}
												],
												"src": "5394:222:13"
											},
											{
												"body": {
													"nativeSrc": "5667:32:13",
													"nodeType": "YulBlock",
													"src": "5667:32:13",
													"statements": [
														{
															"nativeSrc": "5677:16:13",
															"nodeType": "YulAssignment",
															"src": "5677:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "5688:5:13",
																"nodeType": "YulIdentifier",
																"src": "5688:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5677:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "5677:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "5622:77:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5649:5:13",
														"nodeType": "YulTypedName",
														"src": "5649:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5659:7:13",
														"nodeType": "YulTypedName",
														"src": "5659:7:13",
														"type": ""
													}
												],
												"src": "5622:77:13"
											},
											{
												"body": {
													"nativeSrc": "5748:79:13",
													"nodeType": "YulBlock",
													"src": "5748:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "5805:16:13",
																"nodeType": "YulBlock",
																"src": "5805:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5814:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5814:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5817:1:13",
																					"nodeType": "YulLiteral",
																					"src": "5817:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5807:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "5807:6:13"
																			},
																			"nativeSrc": "5807:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "5807:12:13"
																		},
																		"nativeSrc": "5807:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "5807:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5771:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5771:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5796:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5796:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5778:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "5778:17:13"
																				},
																				"nativeSrc": "5778:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5778:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5768:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "5768:2:13"
																		},
																		"nativeSrc": "5768:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5768:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5761:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "5761:6:13"
																},
																"nativeSrc": "5761:43:13",
																"nodeType": "YulFunctionCall",
																"src": "5761:43:13"
															},
															"nativeSrc": "5758:63:13",
															"nodeType": "YulIf",
															"src": "5758:63:13"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5705:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5741:5:13",
														"nodeType": "YulTypedName",
														"src": "5741:5:13",
														"type": ""
													}
												],
												"src": "5705:122:13"
											},
											{
												"body": {
													"nativeSrc": "5885:87:13",
													"nodeType": "YulBlock",
													"src": "5885:87:13",
													"statements": [
														{
															"nativeSrc": "5895:29:13",
															"nodeType": "YulAssignment",
															"src": "5895:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5917:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "5917:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5904:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "5904:12:13"
																},
																"nativeSrc": "5904:20:13",
																"nodeType": "YulFunctionCall",
																"src": "5904:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5895:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "5895:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5960:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "5960:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5933:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "5933:26:13"
																},
																"nativeSrc": "5933:33:13",
																"nodeType": "YulFunctionCall",
																"src": "5933:33:13"
															},
															"nativeSrc": "5933:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "5933:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5833:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5863:6:13",
														"nodeType": "YulTypedName",
														"src": "5863:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5871:3:13",
														"nodeType": "YulTypedName",
														"src": "5871:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5879:5:13",
														"nodeType": "YulTypedName",
														"src": "5879:5:13",
														"type": ""
													}
												],
												"src": "5833:139:13"
											},
											{
												"body": {
													"nativeSrc": "6044:263:13",
													"nodeType": "YulBlock",
													"src": "6044:263:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6090:83:13",
																"nodeType": "YulBlock",
																"src": "6090:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6092:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:77:13"
																			},
																			"nativeSrc": "6092:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6092:79:13"
																		},
																		"nativeSrc": "6092:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6092:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6065:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6065:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6074:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6074:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6061:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6061:3:13"
																		},
																		"nativeSrc": "6061:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6061:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6086:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6086:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6057:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6057:3:13"
																},
																"nativeSrc": "6057:32:13",
																"nodeType": "YulFunctionCall",
																"src": "6057:32:13"
															},
															"nativeSrc": "6054:119:13",
															"nodeType": "YulIf",
															"src": "6054:119:13"
														},
														{
															"nativeSrc": "6183:117:13",
															"nodeType": "YulBlock",
															"src": "6183:117:13",
															"statements": [
																{
																	"nativeSrc": "6198:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6198:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6212:1:13",
																		"nodeType": "YulLiteral",
																		"src": "6212:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6202:6:13",
																			"nodeType": "YulTypedName",
																			"src": "6202:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6227:63:13",
																	"nodeType": "YulAssignment",
																	"src": "6227:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6262:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "6262:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6273:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "6273:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6258:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6258:3:13"
																				},
																				"nativeSrc": "6258:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6258:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6282:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "6282:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6237:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "6237:20:13"
																		},
																		"nativeSrc": "6237:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6237:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6227:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "6227:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5978:329:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6014:9:13",
														"nodeType": "YulTypedName",
														"src": "6014:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6025:7:13",
														"nodeType": "YulTypedName",
														"src": "6025:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6037:6:13",
														"nodeType": "YulTypedName",
														"src": "6037:6:13",
														"type": ""
													}
												],
												"src": "5978:329:13"
											},
											{
												"body": {
													"nativeSrc": "6378:53:13",
													"nodeType": "YulBlock",
													"src": "6378:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6395:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "6395:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6418:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6418:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "6400:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "6400:17:13"
																		},
																		"nativeSrc": "6400:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6400:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6388:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6388:6:13"
																},
																"nativeSrc": "6388:37:13",
																"nodeType": "YulFunctionCall",
																"src": "6388:37:13"
															},
															"nativeSrc": "6388:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "6388:37:13"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6313:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6366:5:13",
														"nodeType": "YulTypedName",
														"src": "6366:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6373:3:13",
														"nodeType": "YulTypedName",
														"src": "6373:3:13",
														"type": ""
													}
												],
												"src": "6313:118:13"
											},
											{
												"body": {
													"nativeSrc": "6535:124:13",
													"nodeType": "YulBlock",
													"src": "6535:124:13",
													"statements": [
														{
															"nativeSrc": "6545:26:13",
															"nodeType": "YulAssignment",
															"src": "6545:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6557:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "6557:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6568:2:13",
																		"nodeType": "YulLiteral",
																		"src": "6568:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6553:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6553:3:13"
																},
																"nativeSrc": "6553:18:13",
																"nodeType": "YulFunctionCall",
																"src": "6553:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6545:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "6545:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6625:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "6625:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6638:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "6638:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6649:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6649:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6634:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:13"
																		},
																		"nativeSrc": "6634:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6634:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6581:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "6581:43:13"
																},
																"nativeSrc": "6581:71:13",
																"nodeType": "YulFunctionCall",
																"src": "6581:71:13"
															},
															"nativeSrc": "6581:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "6581:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "6437:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6507:9:13",
														"nodeType": "YulTypedName",
														"src": "6507:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6519:6:13",
														"nodeType": "YulTypedName",
														"src": "6519:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6530:4:13",
														"nodeType": "YulTypedName",
														"src": "6530:4:13",
														"type": ""
													}
												],
												"src": "6437:222:13"
											},
											{
												"body": {
													"nativeSrc": "6710:81:13",
													"nodeType": "YulBlock",
													"src": "6710:81:13",
													"statements": [
														{
															"nativeSrc": "6720:65:13",
															"nodeType": "YulAssignment",
															"src": "6720:65:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6735:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6735:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6742:42:13",
																		"nodeType": "YulLiteral",
																		"src": "6742:42:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6731:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "6731:3:13"
																},
																"nativeSrc": "6731:54:13",
																"nodeType": "YulFunctionCall",
																"src": "6731:54:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6720:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6720:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6665:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6692:5:13",
														"nodeType": "YulTypedName",
														"src": "6692:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6702:7:13",
														"nodeType": "YulTypedName",
														"src": "6702:7:13",
														"type": ""
													}
												],
												"src": "6665:126:13"
											},
											{
												"body": {
													"nativeSrc": "6842:51:13",
													"nodeType": "YulBlock",
													"src": "6842:51:13",
													"statements": [
														{
															"nativeSrc": "6852:35:13",
															"nodeType": "YulAssignment",
															"src": "6852:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6881:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "6881:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6863:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "6863:17:13"
																},
																"nativeSrc": "6863:24:13",
																"nodeType": "YulFunctionCall",
																"src": "6863:24:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6852:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "6852:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6797:96:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6824:5:13",
														"nodeType": "YulTypedName",
														"src": "6824:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6834:7:13",
														"nodeType": "YulTypedName",
														"src": "6834:7:13",
														"type": ""
													}
												],
												"src": "6797:96:13"
											},
											{
												"body": {
													"nativeSrc": "6942:79:13",
													"nodeType": "YulBlock",
													"src": "6942:79:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "6999:16:13",
																"nodeType": "YulBlock",
																"src": "6999:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7008:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7008:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7011:1:13",
																					"nodeType": "YulLiteral",
																					"src": "7011:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7001:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "7001:6:13"
																			},
																			"nativeSrc": "7001:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7001:12:13"
																		},
																		"nativeSrc": "7001:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7001:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6965:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6965:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6990:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "6990:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "6972:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "6972:17:13"
																				},
																				"nativeSrc": "6972:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6972:24:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6962:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "6962:2:13"
																		},
																		"nativeSrc": "6962:35:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6962:35:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6955:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "6955:6:13"
																},
																"nativeSrc": "6955:43:13",
																"nodeType": "YulFunctionCall",
																"src": "6955:43:13"
															},
															"nativeSrc": "6952:63:13",
															"nodeType": "YulIf",
															"src": "6952:63:13"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "6899:122:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6935:5:13",
														"nodeType": "YulTypedName",
														"src": "6935:5:13",
														"type": ""
													}
												],
												"src": "6899:122:13"
											},
											{
												"body": {
													"nativeSrc": "7079:87:13",
													"nodeType": "YulBlock",
													"src": "7079:87:13",
													"statements": [
														{
															"nativeSrc": "7089:29:13",
															"nodeType": "YulAssignment",
															"src": "7089:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7111:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7111:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7098:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "7098:12:13"
																},
																"nativeSrc": "7098:20:13",
																"nodeType": "YulFunctionCall",
																"src": "7098:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7089:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "7089:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7154:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "7154:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7127:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "7127:26:13"
																},
																"nativeSrc": "7127:33:13",
																"nodeType": "YulFunctionCall",
																"src": "7127:33:13"
															},
															"nativeSrc": "7127:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "7127:33:13"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "7027:139:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7057:6:13",
														"nodeType": "YulTypedName",
														"src": "7057:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7065:3:13",
														"nodeType": "YulTypedName",
														"src": "7065:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7073:5:13",
														"nodeType": "YulTypedName",
														"src": "7073:5:13",
														"type": ""
													}
												],
												"src": "7027:139:13"
											},
											{
												"body": {
													"nativeSrc": "7255:391:13",
													"nodeType": "YulBlock",
													"src": "7255:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "7301:83:13",
																"nodeType": "YulBlock",
																"src": "7301:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7303:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "7303:77:13"
																			},
																			"nativeSrc": "7303:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:79:13"
																		},
																		"nativeSrc": "7303:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "7303:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7276:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7276:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7285:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7285:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7272:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7272:3:13"
																		},
																		"nativeSrc": "7272:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7272:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7297:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7297:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7268:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7268:3:13"
																},
																"nativeSrc": "7268:32:13",
																"nodeType": "YulFunctionCall",
																"src": "7268:32:13"
															},
															"nativeSrc": "7265:119:13",
															"nodeType": "YulIf",
															"src": "7265:119:13"
														},
														{
															"nativeSrc": "7394:117:13",
															"nodeType": "YulBlock",
															"src": "7394:117:13",
															"statements": [
																{
																	"nativeSrc": "7409:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7409:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7423:1:13",
																		"nodeType": "YulLiteral",
																		"src": "7423:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7413:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7413:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7438:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7438:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7473:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7473:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7484:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7484:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7469:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7469:3:13"
																				},
																				"nativeSrc": "7469:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7469:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7493:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7493:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "7448:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7448:20:13"
																		},
																		"nativeSrc": "7448:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7448:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7438:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7438:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7521:118:13",
															"nodeType": "YulBlock",
															"src": "7521:118:13",
															"statements": [
																{
																	"nativeSrc": "7536:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7536:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7550:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7550:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7540:6:13",
																			"nodeType": "YulTypedName",
																			"src": "7540:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7566:63:13",
																	"nodeType": "YulAssignment",
																	"src": "7566:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7601:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "7601:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7612:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "7612:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7597:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "7597:3:13"
																				},
																				"nativeSrc": "7597:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "7597:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7621:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "7621:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7576:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "7576:20:13"
																		},
																		"nativeSrc": "7576:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7576:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7566:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "7566:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "7172:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7217:9:13",
														"nodeType": "YulTypedName",
														"src": "7217:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7228:7:13",
														"nodeType": "YulTypedName",
														"src": "7228:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7240:6:13",
														"nodeType": "YulTypedName",
														"src": "7240:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7248:6:13",
														"nodeType": "YulTypedName",
														"src": "7248:6:13",
														"type": ""
													}
												],
												"src": "7172:474:13"
											},
											{
												"body": {
													"nativeSrc": "7717:53:13",
													"nodeType": "YulBlock",
													"src": "7717:53:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7734:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "7734:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7757:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "7757:5:13"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7739:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "7739:17:13"
																		},
																		"nativeSrc": "7739:24:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7739:24:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7727:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "7727:6:13"
																},
																"nativeSrc": "7727:37:13",
																"nodeType": "YulFunctionCall",
																"src": "7727:37:13"
															},
															"nativeSrc": "7727:37:13",
															"nodeType": "YulExpressionStatement",
															"src": "7727:37:13"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7652:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7705:5:13",
														"nodeType": "YulTypedName",
														"src": "7705:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7712:3:13",
														"nodeType": "YulTypedName",
														"src": "7712:3:13",
														"type": ""
													}
												],
												"src": "7652:118:13"
											},
											{
												"body": {
													"nativeSrc": "7874:124:13",
													"nodeType": "YulBlock",
													"src": "7874:124:13",
													"statements": [
														{
															"nativeSrc": "7884:26:13",
															"nodeType": "YulAssignment",
															"src": "7884:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7896:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "7896:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7907:2:13",
																		"nodeType": "YulLiteral",
																		"src": "7907:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7892:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "7892:3:13"
																},
																"nativeSrc": "7892:18:13",
																"nodeType": "YulFunctionCall",
																"src": "7892:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7884:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "7884:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7964:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "7964:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7977:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "7977:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7988:1:13",
																				"nodeType": "YulLiteral",
																				"src": "7988:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7973:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "7973:3:13"
																		},
																		"nativeSrc": "7973:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "7973:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7920:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "7920:43:13"
																},
																"nativeSrc": "7920:71:13",
																"nodeType": "YulFunctionCall",
																"src": "7920:71:13"
															},
															"nativeSrc": "7920:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "7920:71:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7776:222:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7846:9:13",
														"nodeType": "YulTypedName",
														"src": "7846:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7858:6:13",
														"nodeType": "YulTypedName",
														"src": "7858:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7869:4:13",
														"nodeType": "YulTypedName",
														"src": "7869:4:13",
														"type": ""
													}
												],
												"src": "7776:222:13"
											},
											{
												"body": {
													"nativeSrc": "8087:391:13",
													"nodeType": "YulBlock",
													"src": "8087:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8133:83:13",
																"nodeType": "YulBlock",
																"src": "8133:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8135:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "8135:77:13"
																			},
																			"nativeSrc": "8135:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8135:79:13"
																		},
																		"nativeSrc": "8135:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8135:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8108:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8108:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8117:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "8117:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8104:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "8104:3:13"
																		},
																		"nativeSrc": "8104:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8104:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8129:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8129:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8100:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8100:3:13"
																},
																"nativeSrc": "8100:32:13",
																"nodeType": "YulFunctionCall",
																"src": "8100:32:13"
															},
															"nativeSrc": "8097:119:13",
															"nodeType": "YulIf",
															"src": "8097:119:13"
														},
														{
															"nativeSrc": "8226:117:13",
															"nodeType": "YulBlock",
															"src": "8226:117:13",
															"statements": [
																{
																	"nativeSrc": "8241:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8241:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8255:1:13",
																		"nodeType": "YulLiteral",
																		"src": "8255:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8245:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8245:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8270:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8270:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8305:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8305:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8316:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8316:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8301:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8301:3:13"
																				},
																				"nativeSrc": "8301:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8301:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8325:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8325:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8280:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8280:20:13"
																		},
																		"nativeSrc": "8280:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8280:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8270:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8270:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8353:118:13",
															"nodeType": "YulBlock",
															"src": "8353:118:13",
															"statements": [
																{
																	"nativeSrc": "8368:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8368:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8382:2:13",
																		"nodeType": "YulLiteral",
																		"src": "8382:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8372:6:13",
																			"nodeType": "YulTypedName",
																			"src": "8372:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8398:63:13",
																	"nodeType": "YulAssignment",
																	"src": "8398:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8433:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "8433:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8444:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "8444:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8429:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "8429:3:13"
																				},
																				"nativeSrc": "8429:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8429:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8453:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "8453:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8408:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "8408:20:13"
																		},
																		"nativeSrc": "8408:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8408:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8398:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "8398:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "8004:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8049:9:13",
														"nodeType": "YulTypedName",
														"src": "8049:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8060:7:13",
														"nodeType": "YulTypedName",
														"src": "8060:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8072:6:13",
														"nodeType": "YulTypedName",
														"src": "8072:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8080:6:13",
														"nodeType": "YulTypedName",
														"src": "8080:6:13",
														"type": ""
													}
												],
												"src": "8004:474:13"
											},
											{
												"body": {
													"nativeSrc": "8527:43:13",
													"nodeType": "YulBlock",
													"src": "8527:43:13",
													"statements": [
														{
															"nativeSrc": "8537:27:13",
															"nodeType": "YulAssignment",
															"src": "8537:27:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8552:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8552:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8559:4:13",
																		"nodeType": "YulLiteral",
																		"src": "8559:4:13",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8548:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "8548:3:13"
																},
																"nativeSrc": "8548:16:13",
																"nodeType": "YulFunctionCall",
																"src": "8548:16:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8537:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "8537:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "8484:86:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8509:5:13",
														"nodeType": "YulTypedName",
														"src": "8509:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8519:7:13",
														"nodeType": "YulTypedName",
														"src": "8519:7:13",
														"type": ""
													}
												],
												"src": "8484:86:13"
											},
											{
												"body": {
													"nativeSrc": "8617:77:13",
													"nodeType": "YulBlock",
													"src": "8617:77:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8672:16:13",
																"nodeType": "YulBlock",
																"src": "8672:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8681:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8681:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8684:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8684:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8674:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8674:6:13"
																			},
																			"nativeSrc": "8674:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8674:12:13"
																		},
																		"nativeSrc": "8674:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8674:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8640:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8640:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8663:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8663:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "8647:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "8647:15:13"
																				},
																				"nativeSrc": "8647:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8647:22:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8637:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8637:2:13"
																		},
																		"nativeSrc": "8637:33:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8637:33:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8630:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8630:6:13"
																},
																"nativeSrc": "8630:41:13",
																"nodeType": "YulFunctionCall",
																"src": "8630:41:13"
															},
															"nativeSrc": "8627:61:13",
															"nodeType": "YulIf",
															"src": "8627:61:13"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "8576:118:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8610:5:13",
														"nodeType": "YulTypedName",
														"src": "8610:5:13",
														"type": ""
													}
												],
												"src": "8576:118:13"
											},
											{
												"body": {
													"nativeSrc": "8750:85:13",
													"nodeType": "YulBlock",
													"src": "8750:85:13",
													"statements": [
														{
															"nativeSrc": "8760:29:13",
															"nodeType": "YulAssignment",
															"src": "8760:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8782:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "8782:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8769:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "8769:12:13"
																},
																"nativeSrc": "8769:20:13",
																"nodeType": "YulFunctionCall",
																"src": "8769:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8760:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "8760:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8823:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "8823:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "8798:24:13",
																	"nodeType": "YulIdentifier",
																	"src": "8798:24:13"
																},
																"nativeSrc": "8798:31:13",
																"nodeType": "YulFunctionCall",
																"src": "8798:31:13"
															},
															"nativeSrc": "8798:31:13",
															"nodeType": "YulExpressionStatement",
															"src": "8798:31:13"
														}
													]
												},
												"name": "abi_decode_t_uint8",
												"nativeSrc": "8700:135:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8728:6:13",
														"nodeType": "YulTypedName",
														"src": "8728:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8736:3:13",
														"nodeType": "YulTypedName",
														"src": "8736:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "8744:5:13",
														"nodeType": "YulTypedName",
														"src": "8744:5:13",
														"type": ""
													}
												],
												"src": "8700:135:13"
											},
											{
												"body": {
													"nativeSrc": "8881:76:13",
													"nodeType": "YulBlock",
													"src": "8881:76:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "8935:16:13",
																"nodeType": "YulBlock",
																"src": "8935:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8944:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8944:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8947:1:13",
																					"nodeType": "YulLiteral",
																					"src": "8947:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8937:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "8937:6:13"
																			},
																			"nativeSrc": "8937:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "8937:12:13"
																		},
																		"nativeSrc": "8937:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "8937:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8904:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "8904:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8926:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "8926:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "8911:14:13",
																					"nodeType": "YulIdentifier",
																					"src": "8911:14:13"
																				},
																				"nativeSrc": "8911:21:13",
																				"nodeType": "YulFunctionCall",
																				"src": "8911:21:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "8901:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "8901:2:13"
																		},
																		"nativeSrc": "8901:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "8901:32:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8894:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "8894:6:13"
																},
																"nativeSrc": "8894:40:13",
																"nodeType": "YulFunctionCall",
																"src": "8894:40:13"
															},
															"nativeSrc": "8891:60:13",
															"nodeType": "YulIf",
															"src": "8891:60:13"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "8841:116:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8874:5:13",
														"nodeType": "YulTypedName",
														"src": "8874:5:13",
														"type": ""
													}
												],
												"src": "8841:116:13"
											},
											{
												"body": {
													"nativeSrc": "9012:84:13",
													"nodeType": "YulBlock",
													"src": "9012:84:13",
													"statements": [
														{
															"nativeSrc": "9022:29:13",
															"nodeType": "YulAssignment",
															"src": "9022:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9044:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "9044:6:13"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9031:12:13",
																	"nodeType": "YulIdentifier",
																	"src": "9031:12:13"
																},
																"nativeSrc": "9031:20:13",
																"nodeType": "YulFunctionCall",
																"src": "9031:20:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9022:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "9022:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9084:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "9084:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9060:23:13",
																	"nodeType": "YulIdentifier",
																	"src": "9060:23:13"
																},
																"nativeSrc": "9060:30:13",
																"nodeType": "YulFunctionCall",
																"src": "9060:30:13"
															},
															"nativeSrc": "9060:30:13",
															"nodeType": "YulExpressionStatement",
															"src": "9060:30:13"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "8963:133:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8990:6:13",
														"nodeType": "YulTypedName",
														"src": "8990:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8998:3:13",
														"nodeType": "YulTypedName",
														"src": "8998:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9006:5:13",
														"nodeType": "YulTypedName",
														"src": "9006:5:13",
														"type": ""
													}
												],
												"src": "8963:133:13"
											},
											{
												"body": {
													"nativeSrc": "9214:643:13",
													"nodeType": "YulBlock",
													"src": "9214:643:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "9261:83:13",
																"nodeType": "YulBlock",
																"src": "9261:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9263:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "9263:77:13"
																			},
																			"nativeSrc": "9263:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "9263:79:13"
																		},
																		"nativeSrc": "9263:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "9263:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9235:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9235:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9244:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "9244:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9231:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "9231:3:13"
																		},
																		"nativeSrc": "9231:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9231:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9256:3:13",
																		"nodeType": "YulLiteral",
																		"src": "9256:3:13",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9227:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9227:3:13"
																},
																"nativeSrc": "9227:33:13",
																"nodeType": "YulFunctionCall",
																"src": "9227:33:13"
															},
															"nativeSrc": "9224:120:13",
															"nodeType": "YulIf",
															"src": "9224:120:13"
														},
														{
															"nativeSrc": "9354:117:13",
															"nodeType": "YulBlock",
															"src": "9354:117:13",
															"statements": [
																{
																	"nativeSrc": "9369:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9369:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9383:1:13",
																		"nodeType": "YulLiteral",
																		"src": "9383:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9373:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9373:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9398:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9398:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9433:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9433:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9444:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9444:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9429:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9429:3:13"
																				},
																				"nativeSrc": "9429:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9429:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9453:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9453:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9408:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9408:20:13"
																		},
																		"nativeSrc": "9408:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9408:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9398:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9398:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9481:116:13",
															"nodeType": "YulBlock",
															"src": "9481:116:13",
															"statements": [
																{
																	"nativeSrc": "9496:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9496:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9510:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9510:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9500:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9500:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9526:61:13",
																	"nodeType": "YulAssignment",
																	"src": "9526:61:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9559:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9559:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9570:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9570:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9555:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9555:3:13"
																				},
																				"nativeSrc": "9555:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9555:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9579:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9579:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8",
																			"nativeSrc": "9536:18:13",
																			"nodeType": "YulIdentifier",
																			"src": "9536:18:13"
																		},
																		"nativeSrc": "9536:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9536:51:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9526:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9607:118:13",
															"nodeType": "YulBlock",
															"src": "9607:118:13",
															"statements": [
																{
																	"nativeSrc": "9622:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9622:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9636:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9636:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9626:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9626:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9652:63:13",
																	"nodeType": "YulAssignment",
																	"src": "9652:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9687:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9687:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9698:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9698:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9683:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9683:3:13"
																				},
																				"nativeSrc": "9683:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9683:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9707:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9707:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9662:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "9662:20:13"
																		},
																		"nativeSrc": "9662:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9662:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9652:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9652:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9735:115:13",
															"nodeType": "YulBlock",
															"src": "9735:115:13",
															"statements": [
																{
																	"nativeSrc": "9750:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9750:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9764:2:13",
																		"nodeType": "YulLiteral",
																		"src": "9764:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9754:6:13",
																			"nodeType": "YulTypedName",
																			"src": "9754:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9780:60:13",
																	"nodeType": "YulAssignment",
																	"src": "9780:60:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9812:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "9812:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9823:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "9823:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9808:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "9808:3:13"
																				},
																				"nativeSrc": "9808:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "9808:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9832:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "9832:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "9790:17:13",
																			"nodeType": "YulIdentifier",
																			"src": "9790:17:13"
																		},
																		"nativeSrc": "9790:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "9790:50:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9780:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "9780:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint8t_addresst_bool",
												"nativeSrc": "9102:755:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9160:9:13",
														"nodeType": "YulTypedName",
														"src": "9160:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9171:7:13",
														"nodeType": "YulTypedName",
														"src": "9171:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9183:6:13",
														"nodeType": "YulTypedName",
														"src": "9183:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9191:6:13",
														"nodeType": "YulTypedName",
														"src": "9191:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9199:6:13",
														"nodeType": "YulTypedName",
														"src": "9199:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9207:6:13",
														"nodeType": "YulTypedName",
														"src": "9207:6:13",
														"type": ""
													}
												],
												"src": "9102:755:13"
											},
											{
												"body": {
													"nativeSrc": "9895:28:13",
													"nodeType": "YulBlock",
													"src": "9895:28:13",
													"statements": [
														{
															"nativeSrc": "9905:12:13",
															"nodeType": "YulAssignment",
															"src": "9905:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "9912:5:13",
																"nodeType": "YulIdentifier",
																"src": "9912:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9905:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "9905:3:13"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9863:60:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9881:5:13",
														"nodeType": "YulTypedName",
														"src": "9881:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9891:3:13",
														"nodeType": "YulTypedName",
														"src": "9891:3:13",
														"type": ""
													}
												],
												"src": "9863:60:13"
											},
											{
												"body": {
													"nativeSrc": "9989:82:13",
													"nodeType": "YulBlock",
													"src": "9989:82:13",
													"statements": [
														{
															"nativeSrc": "9999:66:13",
															"nodeType": "YulAssignment",
															"src": "9999:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10057:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "10057:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "10039:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "10039:17:13"
																				},
																				"nativeSrc": "10039:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "10039:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "10030:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "10030:8:13"
																		},
																		"nativeSrc": "10030:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10030:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "10012:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "10012:17:13"
																},
																"nativeSrc": "10012:53:13",
																"nodeType": "YulFunctionCall",
																"src": "10012:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9999:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "9999:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "9929:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9969:5:13",
														"nodeType": "YulTypedName",
														"src": "9969:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9979:9:13",
														"nodeType": "YulTypedName",
														"src": "9979:9:13",
														"type": ""
													}
												],
												"src": "9929:142:13"
											},
											{
												"body": {
													"nativeSrc": "10137:66:13",
													"nodeType": "YulBlock",
													"src": "10137:66:13",
													"statements": [
														{
															"nativeSrc": "10147:50:13",
															"nodeType": "YulAssignment",
															"src": "10147:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10191:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10191:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "10160:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "10160:30:13"
																},
																"nativeSrc": "10160:37:13",
																"nodeType": "YulFunctionCall",
																"src": "10160:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10147:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "10147:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "10077:126:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10117:5:13",
														"nodeType": "YulTypedName",
														"src": "10117:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10127:9:13",
														"nodeType": "YulTypedName",
														"src": "10127:9:13",
														"type": ""
													}
												],
												"src": "10077:126:13"
											},
											{
												"body": {
													"nativeSrc": "10297:66:13",
													"nodeType": "YulBlock",
													"src": "10297:66:13",
													"statements": [
														{
															"nativeSrc": "10307:50:13",
															"nodeType": "YulAssignment",
															"src": "10307:50:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10351:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "10351:5:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "10320:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "10320:30:13"
																},
																"nativeSrc": "10320:37:13",
																"nodeType": "YulFunctionCall",
																"src": "10320:37:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "10307:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "10307:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
												"nativeSrc": "10209:154:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10277:5:13",
														"nodeType": "YulTypedName",
														"src": "10277:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "10287:9:13",
														"nodeType": "YulTypedName",
														"src": "10287:9:13",
														"type": ""
													}
												],
												"src": "10209:154:13"
											},
											{
												"body": {
													"nativeSrc": "10462:94:13",
													"nodeType": "YulBlock",
													"src": "10462:94:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10479:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "10479:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10543:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "10543:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_AggregatorV3Interface_$45_to_t_address",
																			"nativeSrc": "10484:58:13",
																			"nodeType": "YulIdentifier",
																			"src": "10484:58:13"
																		},
																		"nativeSrc": "10484:65:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10484:65:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10472:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "10472:6:13"
																},
																"nativeSrc": "10472:78:13",
																"nodeType": "YulFunctionCall",
																"src": "10472:78:13"
															},
															"nativeSrc": "10472:78:13",
															"nodeType": "YulExpressionStatement",
															"src": "10472:78:13"
														}
													]
												},
												"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
												"nativeSrc": "10369:187:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10450:5:13",
														"nodeType": "YulTypedName",
														"src": "10450:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10457:3:13",
														"nodeType": "YulTypedName",
														"src": "10457:3:13",
														"type": ""
													}
												],
												"src": "10369:187:13"
											},
											{
												"body": {
													"nativeSrc": "10688:152:13",
													"nodeType": "YulBlock",
													"src": "10688:152:13",
													"statements": [
														{
															"nativeSrc": "10698:26:13",
															"nodeType": "YulAssignment",
															"src": "10698:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10710:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "10710:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10721:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10721:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10706:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10706:3:13"
																},
																"nativeSrc": "10706:18:13",
																"nodeType": "YulFunctionCall",
																"src": "10706:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10698:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "10698:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10806:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "10806:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10819:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10819:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10830:1:13",
																				"nodeType": "YulLiteral",
																				"src": "10830:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10815:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10815:3:13"
																		},
																		"nativeSrc": "10815:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10815:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack",
																	"nativeSrc": "10734:71:13",
																	"nodeType": "YulIdentifier",
																	"src": "10734:71:13"
																},
																"nativeSrc": "10734:99:13",
																"nodeType": "YulFunctionCall",
																"src": "10734:99:13"
															},
															"nativeSrc": "10734:99:13",
															"nodeType": "YulExpressionStatement",
															"src": "10734:99:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed",
												"nativeSrc": "10562:278:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10660:9:13",
														"nodeType": "YulTypedName",
														"src": "10660:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10672:6:13",
														"nodeType": "YulTypedName",
														"src": "10672:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10683:4:13",
														"nodeType": "YulTypedName",
														"src": "10683:4:13",
														"type": ""
													}
												],
												"src": "10562:278:13"
											},
											{
												"body": {
													"nativeSrc": "10929:391:13",
													"nodeType": "YulBlock",
													"src": "10929:391:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "10975:83:13",
																"nodeType": "YulBlock",
																"src": "10975:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10977:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "10977:77:13"
																			},
																			"nativeSrc": "10977:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "10977:79:13"
																		},
																		"nativeSrc": "10977:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "10977:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10950:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "10950:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10959:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "10959:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10946:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "10946:3:13"
																		},
																		"nativeSrc": "10946:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "10946:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10971:2:13",
																		"nodeType": "YulLiteral",
																		"src": "10971:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10942:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "10942:3:13"
																},
																"nativeSrc": "10942:32:13",
																"nodeType": "YulFunctionCall",
																"src": "10942:32:13"
															},
															"nativeSrc": "10939:119:13",
															"nodeType": "YulIf",
															"src": "10939:119:13"
														},
														{
															"nativeSrc": "11068:117:13",
															"nodeType": "YulBlock",
															"src": "11068:117:13",
															"statements": [
																{
																	"nativeSrc": "11083:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11083:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11097:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11097:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11087:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11087:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11112:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11112:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11147:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11147:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11158:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11158:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11143:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11143:3:13"
																				},
																				"nativeSrc": "11143:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11143:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11167:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11167:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11122:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11122:20:13"
																		},
																		"nativeSrc": "11122:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11122:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11112:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11112:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11195:118:13",
															"nodeType": "YulBlock",
															"src": "11195:118:13",
															"statements": [
																{
																	"nativeSrc": "11210:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11210:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11224:2:13",
																		"nodeType": "YulLiteral",
																		"src": "11224:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11214:6:13",
																			"nodeType": "YulTypedName",
																			"src": "11214:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11240:63:13",
																	"nodeType": "YulAssignment",
																	"src": "11240:63:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11275:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "11275:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11286:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "11286:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11271:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "11271:3:13"
																				},
																				"nativeSrc": "11271:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "11271:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11295:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "11295:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11250:20:13",
																			"nodeType": "YulIdentifier",
																			"src": "11250:20:13"
																		},
																		"nativeSrc": "11250:53:13",
																		"nodeType": "YulFunctionCall",
																		"src": "11250:53:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11240:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "11240:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "10846:474:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10891:9:13",
														"nodeType": "YulTypedName",
														"src": "10891:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10902:7:13",
														"nodeType": "YulTypedName",
														"src": "10902:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10914:6:13",
														"nodeType": "YulTypedName",
														"src": "10914:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10922:6:13",
														"nodeType": "YulTypedName",
														"src": "10922:6:13",
														"type": ""
													}
												],
												"src": "10846:474:13"
											},
											{
												"body": {
													"nativeSrc": "11354:152:13",
													"nodeType": "YulBlock",
													"src": "11354:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11371:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11371:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11374:77:13",
																		"nodeType": "YulLiteral",
																		"src": "11374:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11364:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11364:6:13"
																},
																"nativeSrc": "11364:88:13",
																"nodeType": "YulFunctionCall",
																"src": "11364:88:13"
															},
															"nativeSrc": "11364:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "11364:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11468:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11468:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11471:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11471:4:13",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11461:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11461:6:13"
																},
																"nativeSrc": "11461:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11461:15:13"
															},
															"nativeSrc": "11461:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11461:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11492:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11492:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11495:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11495:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11485:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11485:6:13"
																},
																"nativeSrc": "11485:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11485:15:13"
															},
															"nativeSrc": "11485:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11485:15:13"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11326:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "11326:180:13"
											},
											{
												"body": {
													"nativeSrc": "11556:147:13",
													"nodeType": "YulBlock",
													"src": "11556:147:13",
													"statements": [
														{
															"nativeSrc": "11566:25:13",
															"nodeType": "YulAssignment",
															"src": "11566:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11589:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11589:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11571:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11571:17:13"
																},
																"nativeSrc": "11571:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11571:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11566:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11566:1:13"
																}
															]
														},
														{
															"nativeSrc": "11600:25:13",
															"nodeType": "YulAssignment",
															"src": "11600:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11623:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11623:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11605:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "11605:17:13"
																},
																"nativeSrc": "11605:20:13",
																"nodeType": "YulFunctionCall",
																"src": "11605:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11600:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "11600:1:13"
																}
															]
														},
														{
															"nativeSrc": "11634:16:13",
															"nodeType": "YulAssignment",
															"src": "11634:16:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11645:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11645:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11648:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11648:1:13"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11641:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11641:3:13"
																},
																"nativeSrc": "11641:9:13",
																"nodeType": "YulFunctionCall",
																"src": "11641:9:13"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11634:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "11634:3:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11674:22:13",
																"nodeType": "YulBlock",
																"src": "11674:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11676:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "11676:16:13"
																			},
																			"nativeSrc": "11676:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "11676:18:13"
																		},
																		"nativeSrc": "11676:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "11676:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11666:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "11666:1:13"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11669:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "11669:3:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11663:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "11663:2:13"
																},
																"nativeSrc": "11663:10:13",
																"nodeType": "YulFunctionCall",
																"src": "11663:10:13"
															},
															"nativeSrc": "11660:36:13",
															"nodeType": "YulIf",
															"src": "11660:36:13"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11512:191:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11543:1:13",
														"nodeType": "YulTypedName",
														"src": "11543:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11546:1:13",
														"nodeType": "YulTypedName",
														"src": "11546:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11552:3:13",
														"nodeType": "YulTypedName",
														"src": "11552:3:13",
														"type": ""
													}
												],
												"src": "11512:191:13"
											},
											{
												"body": {
													"nativeSrc": "11768:40:13",
													"nodeType": "YulBlock",
													"src": "11768:40:13",
													"statements": [
														{
															"nativeSrc": "11779:22:13",
															"nodeType": "YulAssignment",
															"src": "11779:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11795:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "11795:5:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11789:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "11789:5:13"
																},
																"nativeSrc": "11789:12:13",
																"nodeType": "YulFunctionCall",
																"src": "11789:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11779:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11779:6:13"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "11709:99:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11751:5:13",
														"nodeType": "YulTypedName",
														"src": "11751:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11761:6:13",
														"nodeType": "YulTypedName",
														"src": "11761:6:13",
														"type": ""
													}
												],
												"src": "11709:99:13"
											},
											{
												"body": {
													"nativeSrc": "11842:152:13",
													"nodeType": "YulBlock",
													"src": "11842:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11859:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11859:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11862:77:13",
																		"nodeType": "YulLiteral",
																		"src": "11862:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11852:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11852:6:13"
																},
																"nativeSrc": "11852:88:13",
																"nodeType": "YulFunctionCall",
																"src": "11852:88:13"
															},
															"nativeSrc": "11852:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "11852:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11956:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11956:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11959:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11959:4:13",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11949:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11949:6:13"
																},
																"nativeSrc": "11949:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11949:15:13"
															},
															"nativeSrc": "11949:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11949:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11980:1:13",
																		"nodeType": "YulLiteral",
																		"src": "11980:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11983:4:13",
																		"nodeType": "YulLiteral",
																		"src": "11983:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11973:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "11973:6:13"
																},
																"nativeSrc": "11973:15:13",
																"nodeType": "YulFunctionCall",
																"src": "11973:15:13"
															},
															"nativeSrc": "11973:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "11973:15:13"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "11814:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "11814:180:13"
											},
											{
												"body": {
													"nativeSrc": "12051:269:13",
													"nodeType": "YulBlock",
													"src": "12051:269:13",
													"statements": [
														{
															"nativeSrc": "12061:22:13",
															"nodeType": "YulAssignment",
															"src": "12061:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12075:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12075:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12081:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12081:1:13",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12071:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12071:3:13"
																},
																"nativeSrc": "12071:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12071:12:13"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12061:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12061:6:13"
																}
															]
														},
														{
															"nativeSrc": "12092:38:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12092:38:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "12122:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12122:4:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12128:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12128:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "12118:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12118:3:13"
																},
																"nativeSrc": "12118:12:13",
																"nodeType": "YulFunctionCall",
																"src": "12118:12:13"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "12096:18:13",
																	"nodeType": "YulTypedName",
																	"src": "12096:18:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12169:51:13",
																"nodeType": "YulBlock",
																"src": "12169:51:13",
																"statements": [
																	{
																		"nativeSrc": "12183:27:13",
																		"nodeType": "YulAssignment",
																		"src": "12183:27:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "12197:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "12197:6:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12205:4:13",
																					"nodeType": "YulLiteral",
																					"src": "12205:4:13",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "12193:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "12193:3:13"
																			},
																			"nativeSrc": "12193:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12193:17:13"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "12183:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12183:6:13"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12149:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "12149:18:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12142:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12142:6:13"
																},
																"nativeSrc": "12142:26:13",
																"nodeType": "YulFunctionCall",
																"src": "12142:26:13"
															},
															"nativeSrc": "12139:81:13",
															"nodeType": "YulIf",
															"src": "12139:81:13"
														},
														{
															"body": {
																"nativeSrc": "12272:42:13",
																"nodeType": "YulBlock",
																"src": "12272:42:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "12286:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "12286:16:13"
																			},
																			"nativeSrc": "12286:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "12286:18:13"
																		},
																		"nativeSrc": "12286:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "12286:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "12236:18:13",
																		"nodeType": "YulIdentifier",
																		"src": "12236:18:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12259:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "12259:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12267:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12267:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "12256:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "12256:2:13"
																		},
																		"nativeSrc": "12256:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12256:14:13"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12233:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "12233:2:13"
																},
																"nativeSrc": "12233:38:13",
																"nodeType": "YulFunctionCall",
																"src": "12233:38:13"
															},
															"nativeSrc": "12230:84:13",
															"nodeType": "YulIf",
															"src": "12230:84:13"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "12000:320:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12035:4:13",
														"nodeType": "YulTypedName",
														"src": "12035:4:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12044:6:13",
														"nodeType": "YulTypedName",
														"src": "12044:6:13",
														"type": ""
													}
												],
												"src": "12000:320:13"
											},
											{
												"body": {
													"nativeSrc": "12380:87:13",
													"nodeType": "YulBlock",
													"src": "12380:87:13",
													"statements": [
														{
															"nativeSrc": "12390:11:13",
															"nodeType": "YulAssignment",
															"src": "12390:11:13",
															"value": {
																"name": "ptr",
																"nativeSrc": "12398:3:13",
																"nodeType": "YulIdentifier",
																"src": "12398:3:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12390:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12390:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12418:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12418:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "12421:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "12421:3:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12411:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12411:6:13"
																},
																"nativeSrc": "12411:14:13",
																"nodeType": "YulFunctionCall",
																"src": "12411:14:13"
															},
															"nativeSrc": "12411:14:13",
															"nodeType": "YulExpressionStatement",
															"src": "12411:14:13"
														},
														{
															"nativeSrc": "12434:26:13",
															"nodeType": "YulAssignment",
															"src": "12434:26:13",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12452:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12452:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12455:4:13",
																		"nodeType": "YulLiteral",
																		"src": "12455:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "12442:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "12442:9:13"
																},
																"nativeSrc": "12442:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12442:18:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "12434:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "12434:4:13"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "12326:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "12367:3:13",
														"nodeType": "YulTypedName",
														"src": "12367:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "12375:4:13",
														"nodeType": "YulTypedName",
														"src": "12375:4:13",
														"type": ""
													}
												],
												"src": "12326:141:13"
											},
											{
												"body": {
													"nativeSrc": "12517:49:13",
													"nodeType": "YulBlock",
													"src": "12517:49:13",
													"statements": [
														{
															"nativeSrc": "12527:33:13",
															"nodeType": "YulAssignment",
															"src": "12527:33:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12545:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "12545:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12552:2:13",
																				"nodeType": "YulLiteral",
																				"src": "12552:2:13",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12541:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "12541:3:13"
																		},
																		"nativeSrc": "12541:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "12541:14:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12557:2:13",
																		"nodeType": "YulLiteral",
																		"src": "12557:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "12537:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12537:3:13"
																},
																"nativeSrc": "12537:23:13",
																"nodeType": "YulFunctionCall",
																"src": "12537:23:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "12527:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "12527:6:13"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "12473:93:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12500:5:13",
														"nodeType": "YulTypedName",
														"src": "12500:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12510:6:13",
														"nodeType": "YulTypedName",
														"src": "12510:6:13",
														"type": ""
													}
												],
												"src": "12473:93:13"
											},
											{
												"body": {
													"nativeSrc": "12625:54:13",
													"nodeType": "YulBlock",
													"src": "12625:54:13",
													"statements": [
														{
															"nativeSrc": "12635:37:13",
															"nodeType": "YulAssignment",
															"src": "12635:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "12660:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "12660:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12666:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "12666:5:13"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "12656:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12656:3:13"
																},
																"nativeSrc": "12656:16:13",
																"nodeType": "YulFunctionCall",
																"src": "12656:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "12635:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "12635:8:13"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "12572:107:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "12600:4:13",
														"nodeType": "YulTypedName",
														"src": "12600:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "12606:5:13",
														"nodeType": "YulTypedName",
														"src": "12606:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "12616:8:13",
														"nodeType": "YulTypedName",
														"src": "12616:8:13",
														"type": ""
													}
												],
												"src": "12572:107:13"
											},
											{
												"body": {
													"nativeSrc": "12761:317:13",
													"nodeType": "YulBlock",
													"src": "12761:317:13",
													"statements": [
														{
															"nativeSrc": "12771:35:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12771:35:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "12792:10:13",
																		"nodeType": "YulIdentifier",
																		"src": "12792:10:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12804:1:13",
																		"nodeType": "YulLiteral",
																		"src": "12804:1:13",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12788:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "12788:3:13"
																},
																"nativeSrc": "12788:18:13",
																"nodeType": "YulFunctionCall",
																"src": "12788:18:13"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "12775:9:13",
																	"nodeType": "YulTypedName",
																	"src": "12775:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12815:109:13",
															"nodeType": "YulVariableDeclaration",
															"src": "12815:109:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "12846:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12846:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12857:66:13",
																		"nodeType": "YulLiteral",
																		"src": "12857:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "12827:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "12827:18:13"
																},
																"nativeSrc": "12827:97:13",
																"nodeType": "YulFunctionCall",
																"src": "12827:97:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "12819:4:13",
																	"nodeType": "YulTypedName",
																	"src": "12819:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12933:51:13",
															"nodeType": "YulAssignment",
															"src": "12933:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "12964:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "12964:9:13"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "12975:8:13",
																		"nodeType": "YulIdentifier",
																		"src": "12975:8:13"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "12945:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "12945:18:13"
																},
																"nativeSrc": "12945:39:13",
																"nodeType": "YulFunctionCall",
																"src": "12945:39:13"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "12933:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "12933:8:13"
																}
															]
														},
														{
															"nativeSrc": "12993:30:13",
															"nodeType": "YulAssignment",
															"src": "12993:30:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13006:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13006:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "13017:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13017:4:13"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "13013:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13013:3:13"
																		},
																		"nativeSrc": "13013:9:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13013:9:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13002:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13002:3:13"
																},
																"nativeSrc": "13002:21:13",
																"nodeType": "YulFunctionCall",
																"src": "13002:21:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12993:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "12993:5:13"
																}
															]
														},
														{
															"nativeSrc": "13032:40:13",
															"nodeType": "YulAssignment",
															"src": "13032:40:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13045:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13045:5:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "13056:8:13",
																				"nodeType": "YulIdentifier",
																				"src": "13056:8:13"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "13066:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "13066:4:13"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "13052:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "13052:3:13"
																		},
																		"nativeSrc": "13052:19:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13052:19:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13042:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13042:2:13"
																},
																"nativeSrc": "13042:30:13",
																"nodeType": "YulFunctionCall",
																"src": "13042:30:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13032:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13032:6:13"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "12685:393:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12722:5:13",
														"nodeType": "YulTypedName",
														"src": "12722:5:13",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "12729:10:13",
														"nodeType": "YulTypedName",
														"src": "12729:10:13",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "12741:8:13",
														"nodeType": "YulTypedName",
														"src": "12741:8:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "12754:6:13",
														"nodeType": "YulTypedName",
														"src": "12754:6:13",
														"type": ""
													}
												],
												"src": "12685:393:13"
											},
											{
												"body": {
													"nativeSrc": "13144:82:13",
													"nodeType": "YulBlock",
													"src": "13144:82:13",
													"statements": [
														{
															"nativeSrc": "13154:66:13",
															"nodeType": "YulAssignment",
															"src": "13154:66:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13212:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "13212:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "13194:17:13",
																					"nodeType": "YulIdentifier",
																					"src": "13194:17:13"
																				},
																				"nativeSrc": "13194:24:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13194:24:13"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "13185:8:13",
																			"nodeType": "YulIdentifier",
																			"src": "13185:8:13"
																		},
																		"nativeSrc": "13185:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13185:34:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13167:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "13167:17:13"
																},
																"nativeSrc": "13167:53:13",
																"nodeType": "YulFunctionCall",
																"src": "13167:53:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "13154:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "13154:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "13084:142:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13124:5:13",
														"nodeType": "YulTypedName",
														"src": "13124:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "13134:9:13",
														"nodeType": "YulTypedName",
														"src": "13134:9:13",
														"type": ""
													}
												],
												"src": "13084:142:13"
											},
											{
												"body": {
													"nativeSrc": "13279:28:13",
													"nodeType": "YulBlock",
													"src": "13279:28:13",
													"statements": [
														{
															"nativeSrc": "13289:12:13",
															"nodeType": "YulAssignment",
															"src": "13289:12:13",
															"value": {
																"name": "value",
																"nativeSrc": "13296:5:13",
																"nodeType": "YulIdentifier",
																"src": "13296:5:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13289:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13289:3:13"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "13232:75:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13265:5:13",
														"nodeType": "YulTypedName",
														"src": "13265:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13275:3:13",
														"nodeType": "YulTypedName",
														"src": "13275:3:13",
														"type": ""
													}
												],
												"src": "13232:75:13"
											},
											{
												"body": {
													"nativeSrc": "13389:193:13",
													"nodeType": "YulBlock",
													"src": "13389:193:13",
													"statements": [
														{
															"nativeSrc": "13399:63:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13399:63:13",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "13454:7:13",
																		"nodeType": "YulIdentifier",
																		"src": "13454:7:13"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "13423:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "13423:30:13"
																},
																"nativeSrc": "13423:39:13",
																"nodeType": "YulFunctionCall",
																"src": "13423:39:13"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "13403:16:13",
																	"nodeType": "YulTypedName",
																	"src": "13403:16:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13478:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13478:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "13518:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "13518:4:13"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "13512:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "13512:5:13"
																				},
																				"nativeSrc": "13512:11:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13512:11:13"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "13525:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "13525:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "13557:16:13",
																						"nodeType": "YulIdentifier",
																						"src": "13557:16:13"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "13533:23:13",
																					"nodeType": "YulIdentifier",
																					"src": "13533:23:13"
																				},
																				"nativeSrc": "13533:41:13",
																				"nodeType": "YulFunctionCall",
																				"src": "13533:41:13"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "13484:27:13",
																			"nodeType": "YulIdentifier",
																			"src": "13484:27:13"
																		},
																		"nativeSrc": "13484:91:13",
																		"nodeType": "YulFunctionCall",
																		"src": "13484:91:13"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "13471:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "13471:6:13"
																},
																"nativeSrc": "13471:105:13",
																"nodeType": "YulFunctionCall",
																"src": "13471:105:13"
															},
															"nativeSrc": "13471:105:13",
															"nodeType": "YulExpressionStatement",
															"src": "13471:105:13"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "13313:269:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13366:4:13",
														"nodeType": "YulTypedName",
														"src": "13366:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "13372:6:13",
														"nodeType": "YulTypedName",
														"src": "13372:6:13",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "13380:7:13",
														"nodeType": "YulTypedName",
														"src": "13380:7:13",
														"type": ""
													}
												],
												"src": "13313:269:13"
											},
											{
												"body": {
													"nativeSrc": "13637:24:13",
													"nodeType": "YulBlock",
													"src": "13637:24:13",
													"statements": [
														{
															"nativeSrc": "13647:8:13",
															"nodeType": "YulAssignment",
															"src": "13647:8:13",
															"value": {
																"kind": "number",
																"nativeSrc": "13654:1:13",
																"nodeType": "YulLiteral",
																"src": "13654:1:13",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "13647:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "13647:3:13"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "13588:73:13",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "13633:3:13",
														"nodeType": "YulTypedName",
														"src": "13633:3:13",
														"type": ""
													}
												],
												"src": "13588:73:13"
											},
											{
												"body": {
													"nativeSrc": "13720:136:13",
													"nodeType": "YulBlock",
													"src": "13720:136:13",
													"statements": [
														{
															"nativeSrc": "13730:46:13",
															"nodeType": "YulVariableDeclaration",
															"src": "13730:46:13",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "13744:30:13",
																	"nodeType": "YulIdentifier",
																	"src": "13744:30:13"
																},
																"nativeSrc": "13744:32:13",
																"nodeType": "YulFunctionCall",
																"src": "13744:32:13"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "13734:6:13",
																	"nodeType": "YulTypedName",
																	"src": "13734:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "13829:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "13829:4:13"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "13835:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13835:6:13"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "13843:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "13843:6:13"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "13785:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "13785:43:13"
																},
																"nativeSrc": "13785:65:13",
																"nodeType": "YulFunctionCall",
																"src": "13785:65:13"
															},
															"nativeSrc": "13785:65:13",
															"nodeType": "YulExpressionStatement",
															"src": "13785:65:13"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "13667:189:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13706:4:13",
														"nodeType": "YulTypedName",
														"src": "13706:4:13",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "13712:6:13",
														"nodeType": "YulTypedName",
														"src": "13712:6:13",
														"type": ""
													}
												],
												"src": "13667:189:13"
											},
											{
												"body": {
													"nativeSrc": "13912:136:13",
													"nodeType": "YulBlock",
													"src": "13912:136:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "13979:63:13",
																"nodeType": "YulBlock",
																"src": "13979:63:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "14023:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "14023:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14030:1:13",
																					"nodeType": "YulLiteral",
																					"src": "14030:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "13993:29:13",
																				"nodeType": "YulIdentifier",
																				"src": "13993:29:13"
																			},
																			"nativeSrc": "13993:39:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13993:39:13"
																		},
																		"nativeSrc": "13993:39:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "13993:39:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "13932:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "13932:5:13"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "13939:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "13939:3:13"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "13929:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "13929:2:13"
																},
																"nativeSrc": "13929:14:13",
																"nodeType": "YulFunctionCall",
																"src": "13929:14:13"
															},
															"nativeSrc": "13922:120:13",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "13944:26:13",
																"nodeType": "YulBlock",
																"src": "13944:26:13",
																"statements": [
																	{
																		"nativeSrc": "13946:22:13",
																		"nodeType": "YulAssignment",
																		"src": "13946:22:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "13959:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "13959:5:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13966:1:13",
																					"nodeType": "YulLiteral",
																					"src": "13966:1:13",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "13955:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "13955:3:13"
																			},
																			"nativeSrc": "13955:13:13",
																			"nodeType": "YulFunctionCall",
																			"src": "13955:13:13"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "13946:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "13946:5:13"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "13926:2:13",
																"nodeType": "YulBlock",
																"src": "13926:2:13",
																"statements": []
															},
															"src": "13922:120:13"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "13862:186:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "13900:5:13",
														"nodeType": "YulTypedName",
														"src": "13900:5:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13907:3:13",
														"nodeType": "YulTypedName",
														"src": "13907:3:13",
														"type": ""
													}
												],
												"src": "13862:186:13"
											},
											{
												"body": {
													"nativeSrc": "14133:464:13",
													"nodeType": "YulBlock",
													"src": "14133:464:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "14159:431:13",
																"nodeType": "YulBlock",
																"src": "14159:431:13",
																"statements": [
																	{
																		"nativeSrc": "14173:54:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14173:54:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "14221:5:13",
																					"nodeType": "YulIdentifier",
																					"src": "14221:5:13"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "14189:31:13",
																				"nodeType": "YulIdentifier",
																				"src": "14189:31:13"
																			},
																			"nativeSrc": "14189:38:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14189:38:13"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "14177:8:13",
																				"nodeType": "YulTypedName",
																				"src": "14177:8:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "14240:63:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "14240:63:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "14263:8:13",
																					"nodeType": "YulIdentifier",
																					"src": "14263:8:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "14291:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "14291:10:13"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "14273:17:13",
																						"nodeType": "YulIdentifier",
																						"src": "14273:17:13"
																					},
																					"nativeSrc": "14273:29:13",
																					"nodeType": "YulFunctionCall",
																					"src": "14273:29:13"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "14259:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "14259:3:13"
																			},
																			"nativeSrc": "14259:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14259:44:13"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "14244:11:13",
																				"nodeType": "YulTypedName",
																				"src": "14244:11:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "14460:27:13",
																			"nodeType": "YulBlock",
																			"src": "14460:27:13",
																			"statements": [
																				{
																					"nativeSrc": "14462:23:13",
																					"nodeType": "YulAssignment",
																					"src": "14462:23:13",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "14477:8:13",
																						"nodeType": "YulIdentifier",
																						"src": "14477:8:13"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "14462:11:13",
																							"nodeType": "YulIdentifier",
																							"src": "14462:11:13"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "14444:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "14444:10:13"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14456:2:13",
																					"nodeType": "YulLiteral",
																					"src": "14456:2:13",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "14441:2:13",
																				"nodeType": "YulIdentifier",
																				"src": "14441:2:13"
																			},
																			"nativeSrc": "14441:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14441:18:13"
																		},
																		"nativeSrc": "14438:49:13",
																		"nodeType": "YulIf",
																		"src": "14438:49:13"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "14529:11:13",
																					"nodeType": "YulIdentifier",
																					"src": "14529:11:13"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "14546:8:13",
																							"nodeType": "YulIdentifier",
																							"src": "14546:8:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "14574:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "14574:3:13"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "14556:17:13",
																								"nodeType": "YulIdentifier",
																								"src": "14556:17:13"
																							},
																							"nativeSrc": "14556:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "14556:22:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "14542:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "14542:3:13"
																					},
																					"nativeSrc": "14542:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "14542:37:13"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "14500:28:13",
																				"nodeType": "YulIdentifier",
																				"src": "14500:28:13"
																			},
																			"nativeSrc": "14500:80:13",
																			"nodeType": "YulFunctionCall",
																			"src": "14500:80:13"
																		},
																		"nativeSrc": "14500:80:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "14500:80:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "14150:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "14150:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14155:2:13",
																		"nodeType": "YulLiteral",
																		"src": "14155:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14147:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "14147:2:13"
																},
																"nativeSrc": "14147:11:13",
																"nodeType": "YulFunctionCall",
																"src": "14147:11:13"
															},
															"nativeSrc": "14144:446:13",
															"nodeType": "YulIf",
															"src": "14144:446:13"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "14054:543:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "14109:5:13",
														"nodeType": "YulTypedName",
														"src": "14109:5:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14116:3:13",
														"nodeType": "YulTypedName",
														"src": "14116:3:13",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "14121:10:13",
														"nodeType": "YulTypedName",
														"src": "14121:10:13",
														"type": ""
													}
												],
												"src": "14054:543:13"
											},
											{
												"body": {
													"nativeSrc": "14666:54:13",
													"nodeType": "YulBlock",
													"src": "14666:54:13",
													"statements": [
														{
															"nativeSrc": "14676:37:13",
															"nodeType": "YulAssignment",
															"src": "14676:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "14701:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14701:4:13"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "14707:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "14707:5:13"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "14697:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14697:3:13"
																},
																"nativeSrc": "14697:16:13",
																"nodeType": "YulFunctionCall",
																"src": "14697:16:13"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "14676:8:13",
																	"nodeType": "YulIdentifier",
																	"src": "14676:8:13"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "14603:117:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "14641:4:13",
														"nodeType": "YulTypedName",
														"src": "14641:4:13",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "14647:5:13",
														"nodeType": "YulTypedName",
														"src": "14647:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "14657:8:13",
														"nodeType": "YulTypedName",
														"src": "14657:8:13",
														"type": ""
													}
												],
												"src": "14603:117:13"
											},
											{
												"body": {
													"nativeSrc": "14777:118:13",
													"nodeType": "YulBlock",
													"src": "14777:118:13",
													"statements": [
														{
															"nativeSrc": "14787:68:13",
															"nodeType": "YulVariableDeclaration",
															"src": "14787:68:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14836:1:13",
																						"nodeType": "YulLiteral",
																						"src": "14836:1:13",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "14839:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "14839:5:13"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "14832:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14832:3:13"
																				},
																				"nativeSrc": "14832:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14832:13:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "14851:1:13",
																						"nodeType": "YulLiteral",
																						"src": "14851:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "14847:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "14847:3:13"
																				},
																				"nativeSrc": "14847:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "14847:6:13"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "14803:28:13",
																			"nodeType": "YulIdentifier",
																			"src": "14803:28:13"
																		},
																		"nativeSrc": "14803:51:13",
																		"nodeType": "YulFunctionCall",
																		"src": "14803:51:13"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "14799:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14799:3:13"
																},
																"nativeSrc": "14799:56:13",
																"nodeType": "YulFunctionCall",
																"src": "14799:56:13"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "14791:4:13",
																	"nodeType": "YulTypedName",
																	"src": "14791:4:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14864:25:13",
															"nodeType": "YulAssignment",
															"src": "14864:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "14878:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14878:4:13"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "14884:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "14884:4:13"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "14874:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "14874:3:13"
																},
																"nativeSrc": "14874:15:13",
																"nodeType": "YulFunctionCall",
																"src": "14874:15:13"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "14864:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "14864:6:13"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "14726:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14754:4:13",
														"nodeType": "YulTypedName",
														"src": "14754:4:13",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "14760:5:13",
														"nodeType": "YulTypedName",
														"src": "14760:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "14770:6:13",
														"nodeType": "YulTypedName",
														"src": "14770:6:13",
														"type": ""
													}
												],
												"src": "14726:169:13"
											},
											{
												"body": {
													"nativeSrc": "14981:214:13",
													"nodeType": "YulBlock",
													"src": "14981:214:13",
													"statements": [
														{
															"nativeSrc": "15114:37:13",
															"nodeType": "YulAssignment",
															"src": "15114:37:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15141:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15141:4:13"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "15147:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15147:3:13"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "15122:18:13",
																	"nodeType": "YulIdentifier",
																	"src": "15122:18:13"
																},
																"nativeSrc": "15122:29:13",
																"nodeType": "YulFunctionCall",
																"src": "15122:29:13"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15114:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15114:4:13"
																}
															]
														},
														{
															"nativeSrc": "15160:29:13",
															"nodeType": "YulAssignment",
															"src": "15160:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15171:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15171:4:13"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15181:1:13",
																				"nodeType": "YulLiteral",
																				"src": "15181:1:13",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "15184:3:13",
																				"nodeType": "YulIdentifier",
																				"src": "15184:3:13"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "15177:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "15177:3:13"
																		},
																		"nativeSrc": "15177:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15177:11:13"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "15168:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15168:2:13"
																},
																"nativeSrc": "15168:21:13",
																"nodeType": "YulFunctionCall",
																"src": "15168:21:13"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "15160:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "15160:4:13"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "14900:295:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "14962:4:13",
														"nodeType": "YulTypedName",
														"src": "14962:4:13",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "14968:3:13",
														"nodeType": "YulTypedName",
														"src": "14968:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "14976:4:13",
														"nodeType": "YulTypedName",
														"src": "14976:4:13",
														"type": ""
													}
												],
												"src": "14900:295:13"
											},
											{
												"body": {
													"nativeSrc": "15292:1303:13",
													"nodeType": "YulBlock",
													"src": "15292:1303:13",
													"statements": [
														{
															"nativeSrc": "15303:51:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15303:51:13",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "15350:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "15350:3:13"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "15317:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "15317:32:13"
																},
																"nativeSrc": "15317:37:13",
																"nodeType": "YulFunctionCall",
																"src": "15317:37:13"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "15307:6:13",
																	"nodeType": "YulTypedName",
																	"src": "15307:6:13",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15439:22:13",
																"nodeType": "YulBlock",
																"src": "15439:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "15441:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "15441:16:13"
																			},
																			"nativeSrc": "15441:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "15441:18:13"
																		},
																		"nativeSrc": "15441:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "15441:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "15411:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15411:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15419:18:13",
																		"nodeType": "YulLiteral",
																		"src": "15419:18:13",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15408:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15408:2:13"
																},
																"nativeSrc": "15408:30:13",
																"nodeType": "YulFunctionCall",
																"src": "15408:30:13"
															},
															"nativeSrc": "15405:56:13",
															"nodeType": "YulIf",
															"src": "15405:56:13"
														},
														{
															"nativeSrc": "15471:52:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15471:52:13",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "15517:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "15517:4:13"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "15511:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "15511:5:13"
																		},
																		"nativeSrc": "15511:11:13",
																		"nodeType": "YulFunctionCall",
																		"src": "15511:11:13"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "15485:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "15485:25:13"
																},
																"nativeSrc": "15485:38:13",
																"nodeType": "YulFunctionCall",
																"src": "15485:38:13"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "15475:6:13",
																	"nodeType": "YulTypedName",
																	"src": "15475:6:13",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "15616:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "15616:4:13"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "15622:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15622:6:13"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "15630:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15630:6:13"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "15570:45:13",
																	"nodeType": "YulIdentifier",
																	"src": "15570:45:13"
																},
																"nativeSrc": "15570:67:13",
																"nodeType": "YulFunctionCall",
																"src": "15570:67:13"
															},
															"nativeSrc": "15570:67:13",
															"nodeType": "YulExpressionStatement",
															"src": "15570:67:13"
														},
														{
															"nativeSrc": "15647:18:13",
															"nodeType": "YulVariableDeclaration",
															"src": "15647:18:13",
															"value": {
																"kind": "number",
																"nativeSrc": "15664:1:13",
																"nodeType": "YulLiteral",
																"src": "15664:1:13",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15651:9:13",
																	"nodeType": "YulTypedName",
																	"src": "15651:9:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15675:17:13",
															"nodeType": "YulAssignment",
															"src": "15675:17:13",
															"value": {
																"kind": "number",
																"nativeSrc": "15688:4:13",
																"nodeType": "YulLiteral",
																"src": "15688:4:13",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "15675:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "15675:9:13"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "15739:611:13",
																		"nodeType": "YulBlock",
																		"src": "15739:611:13",
																		"statements": [
																			{
																				"nativeSrc": "15753:37:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15753:37:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "15772:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "15772:6:13"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "15784:4:13",
																									"nodeType": "YulLiteral",
																									"src": "15784:4:13",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "15780:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "15780:3:13"
																							},
																							"nativeSrc": "15780:9:13",
																							"nodeType": "YulFunctionCall",
																							"src": "15780:9:13"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "15768:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "15768:3:13"
																					},
																					"nativeSrc": "15768:22:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15768:22:13"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "15757:7:13",
																						"nodeType": "YulTypedName",
																						"src": "15757:7:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15804:51:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15804:51:13",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15850:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "15850:4:13"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "15818:31:13",
																						"nodeType": "YulIdentifier",
																						"src": "15818:31:13"
																					},
																					"nativeSrc": "15818:37:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15818:37:13"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "15808:6:13",
																						"nodeType": "YulTypedName",
																						"src": "15808:6:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "15868:10:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15868:10:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15877:1:13",
																					"nodeType": "YulLiteral",
																					"src": "15877:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "15872:1:13",
																						"nodeType": "YulTypedName",
																						"src": "15872:1:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15936:163:13",
																					"nodeType": "YulBlock",
																					"src": "15936:163:13",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "15961:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "15961:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "15979:3:13",
																														"nodeType": "YulIdentifier",
																														"src": "15979:3:13"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "15984:9:13",
																														"nodeType": "YulIdentifier",
																														"src": "15984:9:13"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "15975:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "15975:3:13"
																												},
																												"nativeSrc": "15975:19:13",
																												"nodeType": "YulFunctionCall",
																												"src": "15975:19:13"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "15969:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "15969:5:13"
																										},
																										"nativeSrc": "15969:26:13",
																										"nodeType": "YulFunctionCall",
																										"src": "15969:26:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "15954:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "15954:6:13"
																								},
																								"nativeSrc": "15954:42:13",
																								"nodeType": "YulFunctionCall",
																								"src": "15954:42:13"
																							},
																							"nativeSrc": "15954:42:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "15954:42:13"
																						},
																						{
																							"nativeSrc": "16013:24:13",
																							"nodeType": "YulAssignment",
																							"src": "16013:24:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16027:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "16027:6:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16035:1:13",
																										"nodeType": "YulLiteral",
																										"src": "16035:1:13",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16023:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "16023:3:13"
																								},
																								"nativeSrc": "16023:14:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16023:14:13"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "16013:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "16013:6:13"
																								}
																							]
																						},
																						{
																							"nativeSrc": "16054:31:13",
																							"nodeType": "YulAssignment",
																							"src": "16054:31:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "16071:9:13",
																										"nodeType": "YulIdentifier",
																										"src": "16071:9:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "16082:2:13",
																										"nodeType": "YulLiteral",
																										"src": "16082:2:13",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "16067:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "16067:3:13"
																								},
																								"nativeSrc": "16067:18:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16067:18:13"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "16054:9:13",
																									"nodeType": "YulIdentifier",
																									"src": "16054:9:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "15902:1:13",
																							"nodeType": "YulIdentifier",
																							"src": "15902:1:13"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "15905:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "15905:7:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "15899:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "15899:2:13"
																					},
																					"nativeSrc": "15899:14:13",
																					"nodeType": "YulFunctionCall",
																					"src": "15899:14:13"
																				},
																				"nativeSrc": "15891:208:13",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "15914:21:13",
																					"nodeType": "YulBlock",
																					"src": "15914:21:13",
																					"statements": [
																						{
																							"nativeSrc": "15916:17:13",
																							"nodeType": "YulAssignment",
																							"src": "15916:17:13",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "15925:1:13",
																										"nodeType": "YulIdentifier",
																										"src": "15925:1:13"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "15928:4:13",
																										"nodeType": "YulLiteral",
																										"src": "15928:4:13",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "15921:3:13",
																									"nodeType": "YulIdentifier",
																									"src": "15921:3:13"
																								},
																								"nativeSrc": "15921:12:13",
																								"nodeType": "YulFunctionCall",
																								"src": "15921:12:13"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "15916:1:13",
																									"nodeType": "YulIdentifier",
																									"src": "15916:1:13"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "15895:3:13",
																					"nodeType": "YulBlock",
																					"src": "15895:3:13",
																					"statements": []
																				},
																				"src": "15891:208:13"
																			},
																			{
																				"body": {
																					"nativeSrc": "16135:156:13",
																					"nodeType": "YulBlock",
																					"src": "16135:156:13",
																					"statements": [
																						{
																							"nativeSrc": "16153:43:13",
																							"nodeType": "YulVariableDeclaration",
																							"src": "16153:43:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16180:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "16180:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16185:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "16185:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16176:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "16176:3:13"
																										},
																										"nativeSrc": "16176:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "16176:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16170:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "16170:5:13"
																								},
																								"nativeSrc": "16170:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16170:26:13"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "16157:9:13",
																									"nodeType": "YulTypedName",
																									"src": "16157:9:13",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "16220:6:13",
																										"nodeType": "YulIdentifier",
																										"src": "16220:6:13"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "16247:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "16247:9:13"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "16262:6:13",
																														"nodeType": "YulIdentifier",
																														"src": "16262:6:13"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "16270:4:13",
																														"nodeType": "YulLiteral",
																														"src": "16270:4:13",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "16258:3:13",
																													"nodeType": "YulIdentifier",
																													"src": "16258:3:13"
																												},
																												"nativeSrc": "16258:17:13",
																												"nodeType": "YulFunctionCall",
																												"src": "16258:17:13"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "16228:18:13",
																											"nodeType": "YulIdentifier",
																											"src": "16228:18:13"
																										},
																										"nativeSrc": "16228:48:13",
																										"nodeType": "YulFunctionCall",
																										"src": "16228:48:13"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "16213:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "16213:6:13"
																								},
																								"nativeSrc": "16213:64:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16213:64:13"
																							},
																							"nativeSrc": "16213:64:13",
																							"nodeType": "YulExpressionStatement",
																							"src": "16213:64:13"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "16118:7:13",
																							"nodeType": "YulIdentifier",
																							"src": "16118:7:13"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "16127:6:13",
																							"nodeType": "YulIdentifier",
																							"src": "16127:6:13"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "16115:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "16115:2:13"
																					},
																					"nativeSrc": "16115:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16115:19:13"
																				},
																				"nativeSrc": "16112:179:13",
																				"nodeType": "YulIf",
																				"src": "16112:179:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16311:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "16311:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "16325:6:13",
																											"nodeType": "YulIdentifier",
																											"src": "16325:6:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "16333:1:13",
																											"nodeType": "YulLiteral",
																											"src": "16333:1:13",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "16321:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "16321:3:13"
																									},
																									"nativeSrc": "16321:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "16321:14:13"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "16337:1:13",
																									"nodeType": "YulLiteral",
																									"src": "16337:1:13",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "16317:3:13",
																								"nodeType": "YulIdentifier",
																								"src": "16317:3:13"
																							},
																							"nativeSrc": "16317:22:13",
																							"nodeType": "YulFunctionCall",
																							"src": "16317:22:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16304:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16304:6:13"
																					},
																					"nativeSrc": "16304:36:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16304:36:13"
																				},
																				"nativeSrc": "16304:36:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "16304:36:13"
																			}
																		]
																	},
																	"nativeSrc": "15732:618:13",
																	"nodeType": "YulCase",
																	"src": "15732:618:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15737:1:13",
																		"nodeType": "YulLiteral",
																		"src": "15737:1:13",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "16367:222:13",
																		"nodeType": "YulBlock",
																		"src": "16367:222:13",
																		"statements": [
																			{
																				"nativeSrc": "16381:14:13",
																				"nodeType": "YulVariableDeclaration",
																				"src": "16381:14:13",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "16394:1:13",
																					"nodeType": "YulLiteral",
																					"src": "16394:1:13",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "16385:5:13",
																						"nodeType": "YulTypedName",
																						"src": "16385:5:13",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "16418:67:13",
																					"nodeType": "YulBlock",
																					"src": "16418:67:13",
																					"statements": [
																						{
																							"nativeSrc": "16436:35:13",
																							"nodeType": "YulAssignment",
																							"src": "16436:35:13",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "16455:3:13",
																												"nodeType": "YulIdentifier",
																												"src": "16455:3:13"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "16460:9:13",
																												"nodeType": "YulIdentifier",
																												"src": "16460:9:13"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "16451:3:13",
																											"nodeType": "YulIdentifier",
																											"src": "16451:3:13"
																										},
																										"nativeSrc": "16451:19:13",
																										"nodeType": "YulFunctionCall",
																										"src": "16451:19:13"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "16445:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "16445:5:13"
																								},
																								"nativeSrc": "16445:26:13",
																								"nodeType": "YulFunctionCall",
																								"src": "16445:26:13"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "16436:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "16436:5:13"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "16411:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "16411:6:13"
																				},
																				"nativeSrc": "16408:77:13",
																				"nodeType": "YulIf",
																				"src": "16408:77:13"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "16505:4:13",
																							"nodeType": "YulIdentifier",
																							"src": "16505:4:13"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "16564:5:13",
																									"nodeType": "YulIdentifier",
																									"src": "16564:5:13"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "16571:6:13",
																									"nodeType": "YulIdentifier",
																									"src": "16571:6:13"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "16511:52:13",
																								"nodeType": "YulIdentifier",
																								"src": "16511:52:13"
																							},
																							"nativeSrc": "16511:67:13",
																							"nodeType": "YulFunctionCall",
																							"src": "16511:67:13"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "16498:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "16498:6:13"
																					},
																					"nativeSrc": "16498:81:13",
																					"nodeType": "YulFunctionCall",
																					"src": "16498:81:13"
																				},
																				"nativeSrc": "16498:81:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "16498:81:13"
																			}
																		]
																	},
																	"nativeSrc": "16359:230:13",
																	"nodeType": "YulCase",
																	"src": "16359:230:13",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "15712:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "15712:6:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15720:2:13",
																		"nodeType": "YulLiteral",
																		"src": "15720:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15709:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "15709:2:13"
																},
																"nativeSrc": "15709:14:13",
																"nodeType": "YulFunctionCall",
																"src": "15709:14:13"
															},
															"nativeSrc": "15702:887:13",
															"nodeType": "YulSwitch",
															"src": "15702:887:13"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "15200:1395:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "15281:4:13",
														"nodeType": "YulTypedName",
														"src": "15281:4:13",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "15287:3:13",
														"nodeType": "YulTypedName",
														"src": "15287:3:13",
														"type": ""
													}
												],
												"src": "15200:1395:13"
											},
											{
												"body": {
													"nativeSrc": "16644:190:13",
													"nodeType": "YulBlock",
													"src": "16644:190:13",
													"statements": [
														{
															"nativeSrc": "16654:33:13",
															"nodeType": "YulAssignment",
															"src": "16654:33:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16681:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16681:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16663:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16663:17:13"
																},
																"nativeSrc": "16663:24:13",
																"nodeType": "YulFunctionCall",
																"src": "16663:24:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16654:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "16654:5:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16777:22:13",
																"nodeType": "YulBlock",
																"src": "16777:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16779:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "16779:16:13"
																			},
																			"nativeSrc": "16779:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "16779:18:13"
																		},
																		"nativeSrc": "16779:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "16779:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16702:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16702:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16709:66:13",
																		"nodeType": "YulLiteral",
																		"src": "16709:66:13",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "16699:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "16699:2:13"
																},
																"nativeSrc": "16699:77:13",
																"nodeType": "YulFunctionCall",
																"src": "16699:77:13"
															},
															"nativeSrc": "16696:103:13",
															"nodeType": "YulIf",
															"src": "16696:103:13"
														},
														{
															"nativeSrc": "16808:20:13",
															"nodeType": "YulAssignment",
															"src": "16808:20:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16819:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "16819:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16826:1:13",
																		"nodeType": "YulLiteral",
																		"src": "16826:1:13",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16815:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16815:3:13"
																},
																"nativeSrc": "16815:13:13",
																"nodeType": "YulFunctionCall",
																"src": "16815:13:13"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16808:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16808:3:13"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "16601:233:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16630:5:13",
														"nodeType": "YulTypedName",
														"src": "16630:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16640:3:13",
														"nodeType": "YulTypedName",
														"src": "16640:3:13",
														"type": ""
													}
												],
												"src": "16601:233:13"
											},
											{
												"body": {
													"nativeSrc": "16888:362:13",
													"nodeType": "YulBlock",
													"src": "16888:362:13",
													"statements": [
														{
															"nativeSrc": "16898:25:13",
															"nodeType": "YulAssignment",
															"src": "16898:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16921:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16921:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16903:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16903:17:13"
																},
																"nativeSrc": "16903:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16903:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "16898:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16898:1:13"
																}
															]
														},
														{
															"nativeSrc": "16932:25:13",
															"nodeType": "YulAssignment",
															"src": "16932:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "16955:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16955:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16937:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "16937:17:13"
																},
																"nativeSrc": "16937:20:13",
																"nodeType": "YulFunctionCall",
																"src": "16937:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "16932:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "16932:1:13"
																}
															]
														},
														{
															"nativeSrc": "16966:28:13",
															"nodeType": "YulVariableDeclaration",
															"src": "16966:28:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "16989:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16989:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "16992:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "16992:1:13"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "16985:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "16985:3:13"
																},
																"nativeSrc": "16985:9:13",
																"nodeType": "YulFunctionCall",
																"src": "16985:9:13"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "16970:11:13",
																	"nodeType": "YulTypedName",
																	"src": "16970:11:13",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "17003:41:13",
															"nodeType": "YulAssignment",
															"src": "17003:41:13",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "17032:11:13",
																		"nodeType": "YulIdentifier",
																		"src": "17032:11:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17014:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17014:17:13"
																},
																"nativeSrc": "17014:30:13",
																"nodeType": "YulFunctionCall",
																"src": "17014:30:13"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "17003:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "17003:7:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17221:22:13",
																"nodeType": "YulBlock",
																"src": "17221:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "17223:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "17223:16:13"
																			},
																			"nativeSrc": "17223:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17223:18:13"
																		},
																		"nativeSrc": "17223:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17223:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "17154:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "17154:1:13"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "17147:6:13",
																					"nodeType": "YulIdentifier",
																					"src": "17147:6:13"
																				},
																				"nativeSrc": "17147:9:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17147:9:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "17177:1:13",
																						"nodeType": "YulIdentifier",
																						"src": "17177:1:13"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "17184:7:13",
																								"nodeType": "YulIdentifier",
																								"src": "17184:7:13"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "17193:1:13",
																								"nodeType": "YulIdentifier",
																								"src": "17193:1:13"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "17180:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "17180:3:13"
																						},
																						"nativeSrc": "17180:15:13",
																						"nodeType": "YulFunctionCall",
																						"src": "17180:15:13"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "17174:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "17174:2:13"
																				},
																				"nativeSrc": "17174:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "17174:22:13"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17127:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "17127:2:13"
																		},
																		"nativeSrc": "17127:83:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17127:83:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17107:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17107:6:13"
																},
																"nativeSrc": "17107:113:13",
																"nodeType": "YulFunctionCall",
																"src": "17107:113:13"
															},
															"nativeSrc": "17104:139:13",
															"nodeType": "YulIf",
															"src": "17104:139:13"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "16840:410:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "16871:1:13",
														"nodeType": "YulTypedName",
														"src": "16871:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "16874:1:13",
														"nodeType": "YulTypedName",
														"src": "16874:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "16880:7:13",
														"nodeType": "YulTypedName",
														"src": "16880:7:13",
														"type": ""
													}
												],
												"src": "16840:410:13"
											},
											{
												"body": {
													"nativeSrc": "17284:152:13",
													"nodeType": "YulBlock",
													"src": "17284:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17301:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17301:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17304:77:13",
																		"nodeType": "YulLiteral",
																		"src": "17304:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17294:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17294:6:13"
																},
																"nativeSrc": "17294:88:13",
																"nodeType": "YulFunctionCall",
																"src": "17294:88:13"
															},
															"nativeSrc": "17294:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "17294:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17398:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17398:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17401:4:13",
																		"nodeType": "YulLiteral",
																		"src": "17401:4:13",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17391:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17391:6:13"
																},
																"nativeSrc": "17391:15:13",
																"nodeType": "YulFunctionCall",
																"src": "17391:15:13"
															},
															"nativeSrc": "17391:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "17391:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17422:1:13",
																		"nodeType": "YulLiteral",
																		"src": "17422:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17425:4:13",
																		"nodeType": "YulLiteral",
																		"src": "17425:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17415:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17415:6:13"
																},
																"nativeSrc": "17415:15:13",
																"nodeType": "YulFunctionCall",
																"src": "17415:15:13"
															},
															"nativeSrc": "17415:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "17415:15:13"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17256:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "17256:180:13"
											},
											{
												"body": {
													"nativeSrc": "17484:143:13",
													"nodeType": "YulBlock",
													"src": "17484:143:13",
													"statements": [
														{
															"nativeSrc": "17494:25:13",
															"nodeType": "YulAssignment",
															"src": "17494:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17517:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17517:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17499:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17499:17:13"
																},
																"nativeSrc": "17499:20:13",
																"nodeType": "YulFunctionCall",
																"src": "17499:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "17494:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "17494:1:13"
																}
															]
														},
														{
															"nativeSrc": "17528:25:13",
															"nodeType": "YulAssignment",
															"src": "17528:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17551:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17551:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "17533:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "17533:17:13"
																},
																"nativeSrc": "17533:20:13",
																"nodeType": "YulFunctionCall",
																"src": "17533:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "17528:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "17528:1:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "17575:22:13",
																"nodeType": "YulBlock",
																"src": "17575:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "17577:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "17577:16:13"
																			},
																			"nativeSrc": "17577:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "17577:18:13"
																		},
																		"nativeSrc": "17577:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "17577:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "17572:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17572:1:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17565:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "17565:6:13"
																},
																"nativeSrc": "17565:9:13",
																"nodeType": "YulFunctionCall",
																"src": "17565:9:13"
															},
															"nativeSrc": "17562:35:13",
															"nodeType": "YulIf",
															"src": "17562:35:13"
														},
														{
															"nativeSrc": "17607:14:13",
															"nodeType": "YulAssignment",
															"src": "17607:14:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "17616:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17616:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "17619:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "17619:1:13"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "17612:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17612:3:13"
																},
																"nativeSrc": "17612:9:13",
																"nodeType": "YulFunctionCall",
																"src": "17612:9:13"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "17607:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "17607:1:13"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "17442:185:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "17473:1:13",
														"nodeType": "YulTypedName",
														"src": "17473:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "17476:1:13",
														"nodeType": "YulTypedName",
														"src": "17476:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "17482:1:13",
														"nodeType": "YulTypedName",
														"src": "17482:1:13",
														"type": ""
													}
												],
												"src": "17442:185:13"
											},
											{
												"body": {
													"nativeSrc": "17759:206:13",
													"nodeType": "YulBlock",
													"src": "17759:206:13",
													"statements": [
														{
															"nativeSrc": "17769:26:13",
															"nodeType": "YulAssignment",
															"src": "17769:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17781:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "17781:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17792:2:13",
																		"nodeType": "YulLiteral",
																		"src": "17792:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17777:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "17777:3:13"
																},
																"nativeSrc": "17777:18:13",
																"nodeType": "YulFunctionCall",
																"src": "17777:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17769:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "17769:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17849:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17849:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17862:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17862:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17873:1:13",
																				"nodeType": "YulLiteral",
																				"src": "17873:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17858:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17858:3:13"
																		},
																		"nativeSrc": "17858:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17858:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17805:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17805:43:13"
																},
																"nativeSrc": "17805:71:13",
																"nodeType": "YulFunctionCall",
																"src": "17805:71:13"
															},
															"nativeSrc": "17805:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "17805:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17930:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "17930:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17943:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "17943:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17954:2:13",
																				"nodeType": "YulLiteral",
																				"src": "17954:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17939:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "17939:3:13"
																		},
																		"nativeSrc": "17939:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "17939:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17886:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "17886:43:13"
																},
																"nativeSrc": "17886:72:13",
																"nodeType": "YulFunctionCall",
																"src": "17886:72:13"
															},
															"nativeSrc": "17886:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "17886:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17633:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17723:9:13",
														"nodeType": "YulTypedName",
														"src": "17723:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17735:6:13",
														"nodeType": "YulTypedName",
														"src": "17735:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17743:6:13",
														"nodeType": "YulTypedName",
														"src": "17743:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17754:4:13",
														"nodeType": "YulTypedName",
														"src": "17754:4:13",
														"type": ""
													}
												],
												"src": "17633:332:13"
											},
											{
												"body": {
													"nativeSrc": "18016:149:13",
													"nodeType": "YulBlock",
													"src": "18016:149:13",
													"statements": [
														{
															"nativeSrc": "18026:25:13",
															"nodeType": "YulAssignment",
															"src": "18026:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18049:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18049:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18031:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18031:17:13"
																},
																"nativeSrc": "18031:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18031:20:13"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "18026:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18026:1:13"
																}
															]
														},
														{
															"nativeSrc": "18060:25:13",
															"nodeType": "YulAssignment",
															"src": "18060:25:13",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "18083:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18083:1:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18065:17:13",
																	"nodeType": "YulIdentifier",
																	"src": "18065:17:13"
																},
																"nativeSrc": "18065:20:13",
																"nodeType": "YulFunctionCall",
																"src": "18065:20:13"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "18060:1:13",
																	"nodeType": "YulIdentifier",
																	"src": "18060:1:13"
																}
															]
														},
														{
															"nativeSrc": "18094:17:13",
															"nodeType": "YulAssignment",
															"src": "18094:17:13",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "18106:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18106:1:13"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "18109:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18109:1:13"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "18102:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18102:3:13"
																},
																"nativeSrc": "18102:9:13",
																"nodeType": "YulFunctionCall",
																"src": "18102:9:13"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "18094:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "18094:4:13"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18136:22:13",
																"nodeType": "YulBlock",
																"src": "18136:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18138:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "18138:16:13"
																			},
																			"nativeSrc": "18138:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "18138:18:13"
																		},
																		"nativeSrc": "18138:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "18138:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "18127:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "18127:4:13"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "18133:1:13",
																		"nodeType": "YulIdentifier",
																		"src": "18133:1:13"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18124:2:13",
																	"nodeType": "YulIdentifier",
																	"src": "18124:2:13"
																},
																"nativeSrc": "18124:11:13",
																"nodeType": "YulFunctionCall",
																"src": "18124:11:13"
															},
															"nativeSrc": "18121:37:13",
															"nodeType": "YulIf",
															"src": "18121:37:13"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "17971:194:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "18002:1:13",
														"nodeType": "YulTypedName",
														"src": "18002:1:13",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "18005:1:13",
														"nodeType": "YulTypedName",
														"src": "18005:1:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "18011:4:13",
														"nodeType": "YulTypedName",
														"src": "18011:4:13",
														"type": ""
													}
												],
												"src": "17971:194:13"
											},
											{
												"body": {
													"nativeSrc": "18284:34:13",
													"nodeType": "YulBlock",
													"src": "18284:34:13",
													"statements": [
														{
															"nativeSrc": "18294:18:13",
															"nodeType": "YulAssignment",
															"src": "18294:18:13",
															"value": {
																"name": "pos",
																"nativeSrc": "18309:3:13",
																"nodeType": "YulIdentifier",
																"src": "18309:3:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18294:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "18294:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18171:147:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18256:3:13",
														"nodeType": "YulTypedName",
														"src": "18256:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18261:6:13",
														"nodeType": "YulTypedName",
														"src": "18261:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18272:11:13",
														"nodeType": "YulTypedName",
														"src": "18272:11:13",
														"type": ""
													}
												],
												"src": "18171:147:13"
											},
											{
												"body": {
													"nativeSrc": "18430:8:13",
													"nodeType": "YulBlock",
													"src": "18430:8:13",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nativeSrc": "18324:114:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18422:6:13",
														"nodeType": "YulTypedName",
														"src": "18422:6:13",
														"type": ""
													}
												],
												"src": "18324:114:13"
											},
											{
												"body": {
													"nativeSrc": "18607:235:13",
													"nodeType": "YulBlock",
													"src": "18607:235:13",
													"statements": [
														{
															"nativeSrc": "18617:90:13",
															"nodeType": "YulAssignment",
															"src": "18617:90:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18700:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18700:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18705:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18705:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18624:75:13",
																	"nodeType": "YulIdentifier",
																	"src": "18624:75:13"
																},
																"nativeSrc": "18624:83:13",
																"nodeType": "YulFunctionCall",
																"src": "18624:83:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18617:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18617:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18805:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18805:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nativeSrc": "18716:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "18716:88:13"
																},
																"nativeSrc": "18716:93:13",
																"nodeType": "YulFunctionCall",
																"src": "18716:93:13"
															},
															"nativeSrc": "18716:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "18716:93:13"
														},
														{
															"nativeSrc": "18818:18:13",
															"nodeType": "YulAssignment",
															"src": "18818:18:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18829:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "18829:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18834:1:13",
																		"nodeType": "YulLiteral",
																		"src": "18834:1:13",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18825:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18825:3:13"
																},
																"nativeSrc": "18825:11:13",
																"nodeType": "YulFunctionCall",
																"src": "18825:11:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18818:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "18818:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18444:398:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18595:3:13",
														"nodeType": "YulTypedName",
														"src": "18595:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18603:3:13",
														"nodeType": "YulTypedName",
														"src": "18603:3:13",
														"type": ""
													}
												],
												"src": "18444:398:13"
											},
											{
												"body": {
													"nativeSrc": "19036:191:13",
													"nodeType": "YulBlock",
													"src": "19036:191:13",
													"statements": [
														{
															"nativeSrc": "19047:154:13",
															"nodeType": "YulAssignment",
															"src": "19047:154:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19197:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19197:3:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19054:141:13",
																	"nodeType": "YulIdentifier",
																	"src": "19054:141:13"
																},
																"nativeSrc": "19054:147:13",
																"nodeType": "YulFunctionCall",
																"src": "19054:147:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19047:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19047:3:13"
																}
															]
														},
														{
															"nativeSrc": "19211:10:13",
															"nodeType": "YulAssignment",
															"src": "19211:10:13",
															"value": {
																"name": "pos",
																"nativeSrc": "19218:3:13",
																"nodeType": "YulIdentifier",
																"src": "19218:3:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19211:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "19211:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18848:379:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19023:3:13",
														"nodeType": "YulTypedName",
														"src": "19023:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19032:3:13",
														"nodeType": "YulTypedName",
														"src": "19032:3:13",
														"type": ""
													}
												],
												"src": "18848:379:13"
											},
											{
												"body": {
													"nativeSrc": "19261:152:13",
													"nodeType": "YulBlock",
													"src": "19261:152:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19278:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19278:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19281:77:13",
																		"nodeType": "YulLiteral",
																		"src": "19281:77:13",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19271:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19271:6:13"
																},
																"nativeSrc": "19271:88:13",
																"nodeType": "YulFunctionCall",
																"src": "19271:88:13"
															},
															"nativeSrc": "19271:88:13",
															"nodeType": "YulExpressionStatement",
															"src": "19271:88:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19375:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19375:1:13",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19378:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19378:4:13",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19368:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19368:6:13"
																},
																"nativeSrc": "19368:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19368:15:13"
															},
															"nativeSrc": "19368:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19368:15:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "19399:1:13",
																		"nodeType": "YulLiteral",
																		"src": "19399:1:13",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19402:4:13",
																		"nodeType": "YulLiteral",
																		"src": "19402:4:13",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "19392:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19392:6:13"
																},
																"nativeSrc": "19392:15:13",
																"nodeType": "YulFunctionCall",
																"src": "19392:15:13"
															},
															"nativeSrc": "19392:15:13",
															"nodeType": "YulExpressionStatement",
															"src": "19392:15:13"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "19233:180:13",
												"nodeType": "YulFunctionDefinition",
												"src": "19233:180:13"
											},
											{
												"body": {
													"nativeSrc": "19477:62:13",
													"nodeType": "YulBlock",
													"src": "19477:62:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "19511:22:13",
																"nodeType": "YulBlock",
																"src": "19511:22:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "19513:16:13",
																				"nodeType": "YulIdentifier",
																				"src": "19513:16:13"
																			},
																			"nativeSrc": "19513:18:13",
																			"nodeType": "YulFunctionCall",
																			"src": "19513:18:13"
																		},
																		"nativeSrc": "19513:18:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "19513:18:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19500:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19500:5:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19507:1:13",
																				"nodeType": "YulLiteral",
																				"src": "19507:1:13",
																				"type": "",
																				"value": "2"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "19497:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "19497:2:13"
																		},
																		"nativeSrc": "19497:12:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19497:12:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "19490:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19490:6:13"
																},
																"nativeSrc": "19490:20:13",
																"nodeType": "YulFunctionCall",
																"src": "19490:20:13"
															},
															"nativeSrc": "19487:46:13",
															"nodeType": "YulIf",
															"src": "19487:46:13"
														}
													]
												},
												"name": "validator_assert_t_enum$_TokenState_$1208",
												"nativeSrc": "19419:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19470:5:13",
														"nodeType": "YulTypedName",
														"src": "19470:5:13",
														"type": ""
													}
												],
												"src": "19419:120:13"
											},
											{
												"body": {
													"nativeSrc": "19605:81:13",
													"nodeType": "YulBlock",
													"src": "19605:81:13",
													"statements": [
														{
															"nativeSrc": "19615:16:13",
															"nodeType": "YulAssignment",
															"src": "19615:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "19626:5:13",
																"nodeType": "YulIdentifier",
																"src": "19626:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "19615:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "19615:7:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19674:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19674:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_TokenState_$1208",
																	"nativeSrc": "19632:41:13",
																	"nodeType": "YulIdentifier",
																	"src": "19632:41:13"
																},
																"nativeSrc": "19632:48:13",
																"nodeType": "YulFunctionCall",
																"src": "19632:48:13"
															},
															"nativeSrc": "19632:48:13",
															"nodeType": "YulExpressionStatement",
															"src": "19632:48:13"
														}
													]
												},
												"name": "cleanup_t_enum$_TokenState_$1208",
												"nativeSrc": "19545:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19587:5:13",
														"nodeType": "YulTypedName",
														"src": "19587:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "19597:7:13",
														"nodeType": "YulTypedName",
														"src": "19597:7:13",
														"type": ""
													}
												],
												"src": "19545:141:13"
											},
											{
												"body": {
													"nativeSrc": "19765:68:13",
													"nodeType": "YulBlock",
													"src": "19765:68:13",
													"statements": [
														{
															"nativeSrc": "19775:52:13",
															"nodeType": "YulAssignment",
															"src": "19775:52:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "19821:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "19821:5:13"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_TokenState_$1208",
																	"nativeSrc": "19788:32:13",
																	"nodeType": "YulIdentifier",
																	"src": "19788:32:13"
																},
																"nativeSrc": "19788:39:13",
																"nodeType": "YulFunctionCall",
																"src": "19788:39:13"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "19775:9:13",
																	"nodeType": "YulIdentifier",
																	"src": "19775:9:13"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_TokenState_$1208_to_t_uint8",
												"nativeSrc": "19692:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19745:5:13",
														"nodeType": "YulTypedName",
														"src": "19745:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "19755:9:13",
														"nodeType": "YulTypedName",
														"src": "19755:9:13",
														"type": ""
													}
												],
												"src": "19692:141:13"
											},
											{
												"body": {
													"nativeSrc": "19917:79:13",
													"nodeType": "YulBlock",
													"src": "19917:79:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19934:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "19934:3:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "19983:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "19983:5:13"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_TokenState_$1208_to_t_uint8",
																			"nativeSrc": "19939:43:13",
																			"nodeType": "YulIdentifier",
																			"src": "19939:43:13"
																		},
																		"nativeSrc": "19939:50:13",
																		"nodeType": "YulFunctionCall",
																		"src": "19939:50:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19927:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "19927:6:13"
																},
																"nativeSrc": "19927:63:13",
																"nodeType": "YulFunctionCall",
																"src": "19927:63:13"
															},
															"nativeSrc": "19927:63:13",
															"nodeType": "YulExpressionStatement",
															"src": "19927:63:13"
														}
													]
												},
												"name": "abi_encode_t_enum$_TokenState_$1208_to_t_uint8_fromStack",
												"nativeSrc": "19839:157:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "19905:5:13",
														"nodeType": "YulTypedName",
														"src": "19905:5:13",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "19912:3:13",
														"nodeType": "YulTypedName",
														"src": "19912:3:13",
														"type": ""
													}
												],
												"src": "19839:157:13"
											},
											{
												"body": {
													"nativeSrc": "20113:137:13",
													"nodeType": "YulBlock",
													"src": "20113:137:13",
													"statements": [
														{
															"nativeSrc": "20123:26:13",
															"nodeType": "YulAssignment",
															"src": "20123:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20135:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "20135:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20146:2:13",
																		"nodeType": "YulLiteral",
																		"src": "20146:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20131:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20131:3:13"
																},
																"nativeSrc": "20131:18:13",
																"nodeType": "YulFunctionCall",
																"src": "20131:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20123:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "20123:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20216:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20216:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20229:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "20229:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20240:1:13",
																				"nodeType": "YulLiteral",
																				"src": "20240:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20225:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "20225:3:13"
																		},
																		"nativeSrc": "20225:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20225:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_TokenState_$1208_to_t_uint8_fromStack",
																	"nativeSrc": "20159:56:13",
																	"nodeType": "YulIdentifier",
																	"src": "20159:56:13"
																},
																"nativeSrc": "20159:84:13",
																"nodeType": "YulFunctionCall",
																"src": "20159:84:13"
															},
															"nativeSrc": "20159:84:13",
															"nodeType": "YulExpressionStatement",
															"src": "20159:84:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_TokenState_$1208__to_t_uint8__fromStack_reversed",
												"nativeSrc": "20002:248:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20085:9:13",
														"nodeType": "YulTypedName",
														"src": "20085:9:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20097:6:13",
														"nodeType": "YulTypedName",
														"src": "20097:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20108:4:13",
														"nodeType": "YulTypedName",
														"src": "20108:4:13",
														"type": ""
													}
												],
												"src": "20002:248:13"
											},
											{
												"body": {
													"nativeSrc": "20300:61:13",
													"nodeType": "YulBlock",
													"src": "20300:61:13",
													"statements": [
														{
															"nativeSrc": "20310:45:13",
															"nodeType": "YulAssignment",
															"src": "20310:45:13",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20325:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20325:5:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20332:22:13",
																		"nodeType": "YulLiteral",
																		"src": "20332:22:13",
																		"type": "",
																		"value": "0xffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20321:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "20321:3:13"
																},
																"nativeSrc": "20321:34:13",
																"nodeType": "YulFunctionCall",
																"src": "20321:34:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20310:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "20310:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint80",
												"nativeSrc": "20256:105:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20282:5:13",
														"nodeType": "YulTypedName",
														"src": "20282:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20292:7:13",
														"nodeType": "YulTypedName",
														"src": "20292:7:13",
														"type": ""
													}
												],
												"src": "20256:105:13"
											},
											{
												"body": {
													"nativeSrc": "20409:78:13",
													"nodeType": "YulBlock",
													"src": "20409:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "20465:16:13",
																"nodeType": "YulBlock",
																"src": "20465:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20474:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20474:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20477:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20477:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20467:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20467:6:13"
																			},
																			"nativeSrc": "20467:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20467:12:13"
																		},
																		"nativeSrc": "20467:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20467:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20432:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "20432:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20456:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "20456:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint80",
																					"nativeSrc": "20439:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "20439:16:13"
																				},
																				"nativeSrc": "20439:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20439:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20429:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "20429:2:13"
																		},
																		"nativeSrc": "20429:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20429:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20422:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20422:6:13"
																},
																"nativeSrc": "20422:42:13",
																"nodeType": "YulFunctionCall",
																"src": "20422:42:13"
															},
															"nativeSrc": "20419:62:13",
															"nodeType": "YulIf",
															"src": "20419:62:13"
														}
													]
												},
												"name": "validator_revert_t_uint80",
												"nativeSrc": "20367:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20402:5:13",
														"nodeType": "YulTypedName",
														"src": "20402:5:13",
														"type": ""
													}
												],
												"src": "20367:120:13"
											},
											{
												"body": {
													"nativeSrc": "20555:79:13",
													"nodeType": "YulBlock",
													"src": "20555:79:13",
													"statements": [
														{
															"nativeSrc": "20565:22:13",
															"nodeType": "YulAssignment",
															"src": "20565:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20580:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20580:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20574:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20574:5:13"
																},
																"nativeSrc": "20574:13:13",
																"nodeType": "YulFunctionCall",
																"src": "20574:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20565:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20565:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20622:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20622:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint80",
																	"nativeSrc": "20596:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "20596:25:13"
																},
																"nativeSrc": "20596:32:13",
																"nodeType": "YulFunctionCall",
																"src": "20596:32:13"
															},
															"nativeSrc": "20596:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "20596:32:13"
														}
													]
												},
												"name": "abi_decode_t_uint80_fromMemory",
												"nativeSrc": "20493:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20533:6:13",
														"nodeType": "YulTypedName",
														"src": "20533:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20541:3:13",
														"nodeType": "YulTypedName",
														"src": "20541:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20549:5:13",
														"nodeType": "YulTypedName",
														"src": "20549:5:13",
														"type": ""
													}
												],
												"src": "20493:141:13"
											},
											{
												"body": {
													"nativeSrc": "20684:32:13",
													"nodeType": "YulBlock",
													"src": "20684:32:13",
													"statements": [
														{
															"nativeSrc": "20694:16:13",
															"nodeType": "YulAssignment",
															"src": "20694:16:13",
															"value": {
																"name": "value",
																"nativeSrc": "20705:5:13",
																"nodeType": "YulIdentifier",
																"src": "20705:5:13"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "20694:7:13",
																	"nodeType": "YulIdentifier",
																	"src": "20694:7:13"
																}
															]
														}
													]
												},
												"name": "cleanup_t_int256",
												"nativeSrc": "20640:76:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20666:5:13",
														"nodeType": "YulTypedName",
														"src": "20666:5:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "20676:7:13",
														"nodeType": "YulTypedName",
														"src": "20676:7:13",
														"type": ""
													}
												],
												"src": "20640:76:13"
											},
											{
												"body": {
													"nativeSrc": "20764:78:13",
													"nodeType": "YulBlock",
													"src": "20764:78:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "20820:16:13",
																"nodeType": "YulBlock",
																"src": "20820:16:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "20829:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20829:1:13",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "20832:1:13",
																					"nodeType": "YulLiteral",
																					"src": "20832:1:13",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "20822:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "20822:6:13"
																			},
																			"nativeSrc": "20822:12:13",
																			"nodeType": "YulFunctionCall",
																			"src": "20822:12:13"
																		},
																		"nativeSrc": "20822:12:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "20822:12:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "20787:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "20787:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "20811:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "20811:5:13"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_int256",
																					"nativeSrc": "20794:16:13",
																					"nodeType": "YulIdentifier",
																					"src": "20794:16:13"
																				},
																				"nativeSrc": "20794:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "20794:23:13"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20784:2:13",
																			"nodeType": "YulIdentifier",
																			"src": "20784:2:13"
																		},
																		"nativeSrc": "20784:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "20784:34:13"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20777:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "20777:6:13"
																},
																"nativeSrc": "20777:42:13",
																"nodeType": "YulFunctionCall",
																"src": "20777:42:13"
															},
															"nativeSrc": "20774:62:13",
															"nodeType": "YulIf",
															"src": "20774:62:13"
														}
													]
												},
												"name": "validator_revert_t_int256",
												"nativeSrc": "20722:120:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20757:5:13",
														"nodeType": "YulTypedName",
														"src": "20757:5:13",
														"type": ""
													}
												],
												"src": "20722:120:13"
											},
											{
												"body": {
													"nativeSrc": "20910:79:13",
													"nodeType": "YulBlock",
													"src": "20910:79:13",
													"statements": [
														{
															"nativeSrc": "20920:22:13",
															"nodeType": "YulAssignment",
															"src": "20920:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "20935:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "20935:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20929:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20929:5:13"
																},
																"nativeSrc": "20929:13:13",
																"nodeType": "YulFunctionCall",
																"src": "20929:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "20920:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "20920:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20977:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "20977:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int256",
																	"nativeSrc": "20951:25:13",
																	"nodeType": "YulIdentifier",
																	"src": "20951:25:13"
																},
																"nativeSrc": "20951:32:13",
																"nodeType": "YulFunctionCall",
																"src": "20951:32:13"
															},
															"nativeSrc": "20951:32:13",
															"nodeType": "YulExpressionStatement",
															"src": "20951:32:13"
														}
													]
												},
												"name": "abi_decode_t_int256_fromMemory",
												"nativeSrc": "20848:141:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "20888:6:13",
														"nodeType": "YulTypedName",
														"src": "20888:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "20896:3:13",
														"nodeType": "YulTypedName",
														"src": "20896:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "20904:5:13",
														"nodeType": "YulTypedName",
														"src": "20904:5:13",
														"type": ""
													}
												],
												"src": "20848:141:13"
											},
											{
												"body": {
													"nativeSrc": "21058:80:13",
													"nodeType": "YulBlock",
													"src": "21058:80:13",
													"statements": [
														{
															"nativeSrc": "21068:22:13",
															"nodeType": "YulAssignment",
															"src": "21068:22:13",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21083:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "21083:6:13"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21077:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21077:5:13"
																},
																"nativeSrc": "21077:13:13",
																"nodeType": "YulFunctionCall",
																"src": "21077:13:13"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21068:5:13",
																	"nodeType": "YulIdentifier",
																	"src": "21068:5:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21126:5:13",
																		"nodeType": "YulIdentifier",
																		"src": "21126:5:13"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "21099:26:13",
																	"nodeType": "YulIdentifier",
																	"src": "21099:26:13"
																},
																"nativeSrc": "21099:33:13",
																"nodeType": "YulFunctionCall",
																"src": "21099:33:13"
															},
															"nativeSrc": "21099:33:13",
															"nodeType": "YulExpressionStatement",
															"src": "21099:33:13"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "20995:143:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21036:6:13",
														"nodeType": "YulTypedName",
														"src": "21036:6:13",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21044:3:13",
														"nodeType": "YulTypedName",
														"src": "21044:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21052:5:13",
														"nodeType": "YulTypedName",
														"src": "21052:5:13",
														"type": ""
													}
												],
												"src": "20995:143:13"
											},
											{
												"body": {
													"nativeSrc": "21286:829:13",
													"nodeType": "YulBlock",
													"src": "21286:829:13",
													"statements": [
														{
															"body": {
																"nativeSrc": "21333:83:13",
																"nodeType": "YulBlock",
																"src": "21333:83:13",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "21335:77:13",
																				"nodeType": "YulIdentifier",
																				"src": "21335:77:13"
																			},
																			"nativeSrc": "21335:79:13",
																			"nodeType": "YulFunctionCall",
																			"src": "21335:79:13"
																		},
																		"nativeSrc": "21335:79:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "21335:79:13"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21307:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21307:7:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21316:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "21316:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21303:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "21303:3:13"
																		},
																		"nativeSrc": "21303:23:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21303:23:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21328:3:13",
																		"nodeType": "YulLiteral",
																		"src": "21328:3:13",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "21299:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "21299:3:13"
																},
																"nativeSrc": "21299:33:13",
																"nodeType": "YulFunctionCall",
																"src": "21299:33:13"
															},
															"nativeSrc": "21296:120:13",
															"nodeType": "YulIf",
															"src": "21296:120:13"
														},
														{
															"nativeSrc": "21426:127:13",
															"nodeType": "YulBlock",
															"src": "21426:127:13",
															"statements": [
																{
																	"nativeSrc": "21441:15:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21441:15:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21455:1:13",
																		"nodeType": "YulLiteral",
																		"src": "21455:1:13",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21445:6:13",
																			"nodeType": "YulTypedName",
																			"src": "21445:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21470:73:13",
																	"nodeType": "YulAssignment",
																	"src": "21470:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21515:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "21515:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21526:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "21526:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21511:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21511:3:13"
																				},
																				"nativeSrc": "21511:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21511:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21535:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21535:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "21480:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "21480:30:13"
																		},
																		"nativeSrc": "21480:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21480:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "21470:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "21470:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21563:128:13",
															"nodeType": "YulBlock",
															"src": "21563:128:13",
															"statements": [
																{
																	"nativeSrc": "21578:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21578:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21592:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21592:2:13",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21582:6:13",
																			"nodeType": "YulTypedName",
																			"src": "21582:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21608:73:13",
																	"nodeType": "YulAssignment",
																	"src": "21608:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21653:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "21653:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21664:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "21664:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21649:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21649:3:13"
																				},
																				"nativeSrc": "21649:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21649:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21673:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21673:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_int256_fromMemory",
																			"nativeSrc": "21618:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "21618:30:13"
																		},
																		"nativeSrc": "21618:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21618:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "21608:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "21608:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21701:129:13",
															"nodeType": "YulBlock",
															"src": "21701:129:13",
															"statements": [
																{
																	"nativeSrc": "21716:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21716:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21730:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21730:2:13",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21720:6:13",
																			"nodeType": "YulTypedName",
																			"src": "21720:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21746:74:13",
																	"nodeType": "YulAssignment",
																	"src": "21746:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21792:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "21792:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21803:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "21803:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21788:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21788:3:13"
																				},
																				"nativeSrc": "21788:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21788:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21812:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21812:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "21756:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "21756:31:13"
																		},
																		"nativeSrc": "21756:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21756:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "21746:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "21746:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21840:129:13",
															"nodeType": "YulBlock",
															"src": "21840:129:13",
															"statements": [
																{
																	"nativeSrc": "21855:16:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21855:16:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "21869:2:13",
																		"nodeType": "YulLiteral",
																		"src": "21869:2:13",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21859:6:13",
																			"nodeType": "YulTypedName",
																			"src": "21859:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "21885:74:13",
																	"nodeType": "YulAssignment",
																	"src": "21885:74:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "21931:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "21931:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "21942:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "21942:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "21927:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "21927:3:13"
																				},
																				"nativeSrc": "21927:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "21927:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "21951:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "21951:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "21895:31:13",
																			"nodeType": "YulIdentifier",
																			"src": "21895:31:13"
																		},
																		"nativeSrc": "21895:64:13",
																		"nodeType": "YulFunctionCall",
																		"src": "21895:64:13"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "21885:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "21885:6:13"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "21979:129:13",
															"nodeType": "YulBlock",
															"src": "21979:129:13",
															"statements": [
																{
																	"nativeSrc": "21994:17:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "21994:17:13",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22008:3:13",
																		"nodeType": "YulLiteral",
																		"src": "22008:3:13",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "21998:6:13",
																			"nodeType": "YulTypedName",
																			"src": "21998:6:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22025:73:13",
																	"nodeType": "YulAssignment",
																	"src": "22025:73:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22070:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "22070:9:13"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22081:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "22081:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22066:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "22066:3:13"
																				},
																				"nativeSrc": "22066:22:13",
																				"nodeType": "YulFunctionCall",
																				"src": "22066:22:13"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22090:7:13",
																				"nodeType": "YulIdentifier",
																				"src": "22090:7:13"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint80_fromMemory",
																			"nativeSrc": "22035:30:13",
																			"nodeType": "YulIdentifier",
																			"src": "22035:30:13"
																		},
																		"nativeSrc": "22035:63:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22035:63:13"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "22025:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "22025:6:13"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
												"nativeSrc": "21144:971:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21224:9:13",
														"nodeType": "YulTypedName",
														"src": "21224:9:13",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "21235:7:13",
														"nodeType": "YulTypedName",
														"src": "21235:7:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "21247:6:13",
														"nodeType": "YulTypedName",
														"src": "21247:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21255:6:13",
														"nodeType": "YulTypedName",
														"src": "21255:6:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21263:6:13",
														"nodeType": "YulTypedName",
														"src": "21263:6:13",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21271:6:13",
														"nodeType": "YulTypedName",
														"src": "21271:6:13",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "21279:6:13",
														"nodeType": "YulTypedName",
														"src": "21279:6:13",
														"type": ""
													}
												],
												"src": "21144:971:13"
											},
											{
												"body": {
													"nativeSrc": "22217:73:13",
													"nodeType": "YulBlock",
													"src": "22217:73:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22234:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22234:3:13"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "22239:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "22239:6:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22227:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22227:6:13"
																},
																"nativeSrc": "22227:19:13",
																"nodeType": "YulFunctionCall",
																"src": "22227:19:13"
															},
															"nativeSrc": "22227:19:13",
															"nodeType": "YulExpressionStatement",
															"src": "22227:19:13"
														},
														{
															"nativeSrc": "22255:29:13",
															"nodeType": "YulAssignment",
															"src": "22255:29:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22274:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22274:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22279:4:13",
																		"nodeType": "YulLiteral",
																		"src": "22279:4:13",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22270:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22270:3:13"
																},
																"nativeSrc": "22270:14:13",
																"nodeType": "YulFunctionCall",
																"src": "22270:14:13"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "22255:11:13",
																	"nodeType": "YulIdentifier",
																	"src": "22255:11:13"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "22121:169:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22189:3:13",
														"nodeType": "YulTypedName",
														"src": "22189:3:13",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "22194:6:13",
														"nodeType": "YulTypedName",
														"src": "22194:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "22205:11:13",
														"nodeType": "YulTypedName",
														"src": "22205:11:13",
														"type": ""
													}
												],
												"src": "22121:169:13"
											},
											{
												"body": {
													"nativeSrc": "22402:75:13",
													"nodeType": "YulBlock",
													"src": "22402:75:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22424:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "22424:6:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22432:1:13",
																				"nodeType": "YulLiteral",
																				"src": "22432:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22420:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "22420:3:13"
																		},
																		"nativeSrc": "22420:14:13",
																		"nodeType": "YulFunctionCall",
																		"src": "22420:14:13"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "22436:33:13",
																		"nodeType": "YulLiteral",
																		"src": "22436:33:13",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22413:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "22413:6:13"
																},
																"nativeSrc": "22413:57:13",
																"nodeType": "YulFunctionCall",
																"src": "22413:57:13"
															},
															"nativeSrc": "22413:57:13",
															"nodeType": "YulExpressionStatement",
															"src": "22413:57:13"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "22296:181:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22394:6:13",
														"nodeType": "YulTypedName",
														"src": "22394:6:13",
														"type": ""
													}
												],
												"src": "22296:181:13"
											},
											{
												"body": {
													"nativeSrc": "22629:220:13",
													"nodeType": "YulBlock",
													"src": "22629:220:13",
													"statements": [
														{
															"nativeSrc": "22639:74:13",
															"nodeType": "YulAssignment",
															"src": "22639:74:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22705:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22705:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22710:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22710:2:13",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22646:58:13",
																	"nodeType": "YulIdentifier",
																	"src": "22646:58:13"
																},
																"nativeSrc": "22646:67:13",
																"nodeType": "YulFunctionCall",
																"src": "22646:67:13"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22639:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22639:3:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22811:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22811:3:13"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "22722:88:13",
																	"nodeType": "YulIdentifier",
																	"src": "22722:88:13"
																},
																"nativeSrc": "22722:93:13",
																"nodeType": "YulFunctionCall",
																"src": "22722:93:13"
															},
															"nativeSrc": "22722:93:13",
															"nodeType": "YulExpressionStatement",
															"src": "22722:93:13"
														},
														{
															"nativeSrc": "22824:19:13",
															"nodeType": "YulAssignment",
															"src": "22824:19:13",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22835:3:13",
																		"nodeType": "YulIdentifier",
																		"src": "22835:3:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22840:2:13",
																		"nodeType": "YulLiteral",
																		"src": "22840:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22831:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22831:3:13"
																},
																"nativeSrc": "22831:12:13",
																"nodeType": "YulFunctionCall",
																"src": "22831:12:13"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22824:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "22824:3:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22483:366:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22617:3:13",
														"nodeType": "YulTypedName",
														"src": "22617:3:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22625:3:13",
														"nodeType": "YulTypedName",
														"src": "22625:3:13",
														"type": ""
													}
												],
												"src": "22483:366:13"
											},
											{
												"body": {
													"nativeSrc": "23026:248:13",
													"nodeType": "YulBlock",
													"src": "23026:248:13",
													"statements": [
														{
															"nativeSrc": "23036:26:13",
															"nodeType": "YulAssignment",
															"src": "23036:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23048:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23048:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23059:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23059:2:13",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23044:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23044:3:13"
																},
																"nativeSrc": "23044:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23044:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23036:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23036:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23083:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23083:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23094:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23094:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23079:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23079:3:13"
																		},
																		"nativeSrc": "23079:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23079:17:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23102:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "23102:4:13"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23108:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23108:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23098:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23098:3:13"
																		},
																		"nativeSrc": "23098:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23098:20:13"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23072:6:13",
																	"nodeType": "YulIdentifier",
																	"src": "23072:6:13"
																},
																"nativeSrc": "23072:47:13",
																"nodeType": "YulFunctionCall",
																"src": "23072:47:13"
															},
															"nativeSrc": "23072:47:13",
															"nodeType": "YulExpressionStatement",
															"src": "23072:47:13"
														},
														{
															"nativeSrc": "23128:139:13",
															"nodeType": "YulAssignment",
															"src": "23128:139:13",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23262:4:13",
																		"nodeType": "YulIdentifier",
																		"src": "23262:4:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23136:124:13",
																	"nodeType": "YulIdentifier",
																	"src": "23136:124:13"
																},
																"nativeSrc": "23136:131:13",
																"nodeType": "YulFunctionCall",
																"src": "23136:131:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23128:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23128:4:13"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22855:419:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23006:9:13",
														"nodeType": "YulTypedName",
														"src": "23006:9:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23021:4:13",
														"nodeType": "YulTypedName",
														"src": "23021:4:13",
														"type": ""
													}
												],
												"src": "22855:419:13"
											},
											{
												"body": {
													"nativeSrc": "23434:288:13",
													"nodeType": "YulBlock",
													"src": "23434:288:13",
													"statements": [
														{
															"nativeSrc": "23444:26:13",
															"nodeType": "YulAssignment",
															"src": "23444:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23456:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23456:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23467:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23467:2:13",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23452:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23452:3:13"
																},
																"nativeSrc": "23452:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23452:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23444:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23444:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23524:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23524:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23537:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23537:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23548:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23548:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23533:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23533:3:13"
																		},
																		"nativeSrc": "23533:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23533:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23480:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23480:43:13"
																},
																"nativeSrc": "23480:71:13",
																"nodeType": "YulFunctionCall",
																"src": "23480:71:13"
															},
															"nativeSrc": "23480:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "23480:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23605:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23605:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23618:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23618:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23629:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23629:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23614:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23614:3:13"
																		},
																		"nativeSrc": "23614:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23614:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23561:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23561:43:13"
																},
																"nativeSrc": "23561:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23561:72:13"
															},
															"nativeSrc": "23561:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23561:72:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23687:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23687:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23700:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23700:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23711:2:13",
																				"nodeType": "YulLiteral",
																				"src": "23711:2:13",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23696:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23696:3:13"
																		},
																		"nativeSrc": "23696:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23696:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23643:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23643:43:13"
																},
																"nativeSrc": "23643:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23643:72:13"
															},
															"nativeSrc": "23643:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23643:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23280:442:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23390:9:13",
														"nodeType": "YulTypedName",
														"src": "23390:9:13",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23402:6:13",
														"nodeType": "YulTypedName",
														"src": "23402:6:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23410:6:13",
														"nodeType": "YulTypedName",
														"src": "23410:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23418:6:13",
														"nodeType": "YulTypedName",
														"src": "23418:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23429:4:13",
														"nodeType": "YulTypedName",
														"src": "23429:4:13",
														"type": ""
													}
												],
												"src": "23280:442:13"
											},
											{
												"body": {
													"nativeSrc": "23854:206:13",
													"nodeType": "YulBlock",
													"src": "23854:206:13",
													"statements": [
														{
															"nativeSrc": "23864:26:13",
															"nodeType": "YulAssignment",
															"src": "23864:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23876:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "23876:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23887:2:13",
																		"nodeType": "YulLiteral",
																		"src": "23887:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23872:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "23872:3:13"
																},
																"nativeSrc": "23872:18:13",
																"nodeType": "YulFunctionCall",
																"src": "23872:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23864:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "23864:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23944:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "23944:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23957:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "23957:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23968:1:13",
																				"nodeType": "YulLiteral",
																				"src": "23968:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23953:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "23953:3:13"
																		},
																		"nativeSrc": "23953:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "23953:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23900:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23900:43:13"
																},
																"nativeSrc": "23900:71:13",
																"nodeType": "YulFunctionCall",
																"src": "23900:71:13"
															},
															"nativeSrc": "23900:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "23900:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24025:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24025:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24038:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24038:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24049:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24049:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24034:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24034:3:13"
																		},
																		"nativeSrc": "24034:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24034:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23981:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "23981:43:13"
																},
																"nativeSrc": "23981:72:13",
																"nodeType": "YulFunctionCall",
																"src": "23981:72:13"
															},
															"nativeSrc": "23981:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "23981:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23728:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23818:9:13",
														"nodeType": "YulTypedName",
														"src": "23818:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23830:6:13",
														"nodeType": "YulTypedName",
														"src": "23830:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23838:6:13",
														"nodeType": "YulTypedName",
														"src": "23838:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23849:4:13",
														"nodeType": "YulTypedName",
														"src": "23849:4:13",
														"type": ""
													}
												],
												"src": "23728:332:13"
											},
											{
												"body": {
													"nativeSrc": "24192:206:13",
													"nodeType": "YulBlock",
													"src": "24192:206:13",
													"statements": [
														{
															"nativeSrc": "24202:26:13",
															"nodeType": "YulAssignment",
															"src": "24202:26:13",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24214:9:13",
																		"nodeType": "YulIdentifier",
																		"src": "24214:9:13"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24225:2:13",
																		"nodeType": "YulLiteral",
																		"src": "24225:2:13",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24210:3:13",
																	"nodeType": "YulIdentifier",
																	"src": "24210:3:13"
																},
																"nativeSrc": "24210:18:13",
																"nodeType": "YulFunctionCall",
																"src": "24210:18:13"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24202:4:13",
																	"nodeType": "YulIdentifier",
																	"src": "24202:4:13"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24282:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24282:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24295:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24295:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24306:1:13",
																				"nodeType": "YulLiteral",
																				"src": "24306:1:13",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24291:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24291:3:13"
																		},
																		"nativeSrc": "24291:17:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24291:17:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "24238:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24238:43:13"
																},
																"nativeSrc": "24238:71:13",
																"nodeType": "YulFunctionCall",
																"src": "24238:71:13"
															},
															"nativeSrc": "24238:71:13",
															"nodeType": "YulExpressionStatement",
															"src": "24238:71:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24363:6:13",
																		"nodeType": "YulIdentifier",
																		"src": "24363:6:13"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24376:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "24376:9:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24387:2:13",
																				"nodeType": "YulLiteral",
																				"src": "24387:2:13",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24372:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "24372:3:13"
																		},
																		"nativeSrc": "24372:18:13",
																		"nodeType": "YulFunctionCall",
																		"src": "24372:18:13"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "24319:43:13",
																	"nodeType": "YulIdentifier",
																	"src": "24319:43:13"
																},
																"nativeSrc": "24319:72:13",
																"nodeType": "YulFunctionCall",
																"src": "24319:72:13"
															},
															"nativeSrc": "24319:72:13",
															"nodeType": "YulExpressionStatement",
															"src": "24319:72:13"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "24066:332:13",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24156:9:13",
														"nodeType": "YulTypedName",
														"src": "24156:9:13",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24168:6:13",
														"nodeType": "YulTypedName",
														"src": "24168:6:13",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24176:6:13",
														"nodeType": "YulTypedName",
														"src": "24176:6:13",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24187:4:13",
														"nodeType": "YulTypedName",
														"src": "24187:4:13",
														"type": ""
													}
												],
												"src": "24066:332:13"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint8t_addresst_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AggregatorV3Interface_$45_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AggregatorV3Interface_$45__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AggregatorV3Interface_$45_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_TokenState_$1208(value) {\n        if iszero(lt(value, 2)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_TokenState_$1208(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_TokenState_$1208(value)\n    }\n\n    function convert_t_enum$_TokenState_$1208_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_TokenState_$1208(value)\n    }\n\n    function abi_encode_t_enum$_TokenState_$1208_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_TokenState_$1208_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_TokenState_$1208__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_enum$_TokenState_$1208_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint80(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint80(value) {\n        if iszero(eq(value, cleanup_t_uint80(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint80_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint80(value)\n    }\n\n    function cleanup_t_int256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_int256(value) {\n        if iszero(eq(value, cleanup_t_int256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_int256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_int256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_int256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint80_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 13,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1244": [
									{
										"length": 32,
										"start": 1627
									},
									{
										"length": 32,
										"start": 6100
									},
									{
										"length": 32,
										"start": 6954
									}
								],
								"1247": [
									{
										"length": 32,
										"start": 5876
									},
									{
										"length": 32,
										"start": 6792
									}
								]
							},
							"linkReferences": {},
							"object": "60806040526004361061014a575f3560e01c806375b238fc116100b5578063d0e30db01161006e578063d0e30db014610470578063d4fac45d1461047a578063d547741f146104b6578063d67b98a9146104de578063d7128c5814610508578063f6687af7146105325761014a565b806375b238fc1461036457806391d148541461038e5780639363a141146103ca5780639e281a98146103f4578063a217fddf1461041c578063b60fc72e146104465761014a565b806331f7d9641161010757806331f7d9641461026e578063338b5dea1461029857806336568abe146102c057806344ba0ea2146102e857806347d04c71146103125780634914e2ce1461033c5761014a565b806301ffc9a71461014e578063192892871461018a578063248a9ca3146101a657806327281025146101e25780632e1a7d4d1461021e5780632f2ff15d14610246575b5f80fd5b348015610159575f80fd5b50610174600480360381019061016f919061204d565b61055c565b6040516101819190612092565b60405180910390f35b6101a4600480360381019061019f91906121e7565b6105d5565b005b3480156101b1575f80fd5b506101cc60048036038101906101c79190612290565b6108a6565b6040516101d991906122ca565b60405180910390f35b3480156101ed575f80fd5b5061020860048036038101906102039190612316565b6108c2565b6040516102159190612350565b60405180910390f35b348015610229575f80fd5b50610244600480360381019061023f9190612316565b6108f5565b005b348015610251575f80fd5b5061026c600480360381019061026791906123c3565b610c68565b005b348015610279575f80fd5b50610282610c8a565b60405161028f9190612410565b60405180910390f35b3480156102a3575f80fd5b506102be60048036038101906102b99190612429565b610c8e565b005b3480156102cb575f80fd5b506102e660048036038101906102e191906123c3565b610fdb565b005b3480156102f3575f80fd5b506102fc611056565b6040516103099190612350565b60405180910390f35b34801561031d575f80fd5b50610326611062565b6040516103339190612350565b60405180910390f35b348015610347575f80fd5b50610362600480360381019061035d91906124c7565b61106b565b005b34801561036f575f80fd5b5061037861123d565b60405161038591906122ca565b60405180910390f35b348015610399575f80fd5b506103b460048036038101906103af91906123c3565b611243565b6040516103c19190612092565b60405180910390f35b3480156103d5575f80fd5b506103de6112a6565b6040516103eb9190612350565b60405180910390f35b3480156103ff575f80fd5b5061041a60048036038101906104159190612429565b6112af565b005b348015610427575f80fd5b506104306116ec565b60405161043d91906122ca565b60405180910390f35b348015610451575f80fd5b5061045a6116f2565b6040516104679190612586565b60405180910390f35b610478611716565b005b348015610485575f80fd5b506104a0600480360381019061049b919061259f565b61195d565b6040516104ad9190612350565b60405180910390f35b3480156104c1575f80fd5b506104dc60048036038101906104d791906123c3565b611a62565b005b3480156104e9575f80fd5b506104f2611a84565b6040516104ff9190612350565b60405180910390f35b348015610513575f80fd5b5061051c611b20565b6040516105299190612350565b60405180910390f35b34801561053d575f80fd5b50610546611b28565b6040516105539190612350565b60405180910390f35b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806105ce57506105cd82611b4c565b5b9050919050565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff1615610659576040517f7845597700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000034600754610688919061260a565b11156106c0576040517f97651d1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60405180608001604052805f81526020018281526020018381526020016001151581525060025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f0155602082015181600101908161073e9190612838565b5060408201518160020190816107549190612838565b506060820151816003015f6101000a81548160ff0219169083151502179055509050505f3411156108a2573460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610806919061260a565b925050819055503460075f82825461081e919061260a565b9250508190555060055f81548092919061083790612907565b91905055505f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c008346040516108999190612350565b60405180910390a35b5050565b5f805f8381526020019081526020015f20600101549050919050565b5f806108cc611a84565b9050670de0b6b3a764000081846108e3919061294e565b6108ed91906129bc565b915050919050565b6108fd611bb5565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff16610980576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67016345785d8a00008111156109d75767016345785d8a0000816040517fd859cbba0000000000000000000000000000000000000000000000000000000081526004016109ce9291906129ec565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610a9a5780826040517f70e6417b000000000000000000000000000000000000000000000000000000008152600401610a919291906129ec565b60405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610b219190612a13565b925050819055508160075f828254610b399190612a13565b9250508190555060065f815480929190610b5290612907565b91905055505f3373ffffffffffffffffffffffffffffffffffffffff1683604051610b7c90612a73565b5f6040518083038185875af1925050503d805f8114610bb6576040519150601f19603f3d011682016040523d82523d5f602084013e610bbb565b606091505b5050905080610bf6576040517fbd6bfd0a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc8b1e2a9be32ce8c5fe81b6681739e4a0016bf546706482b49989431fe3d55ee85604051610c539190612350565b60405180910390a35050610c65611c04565b50565b610c71826108a6565b610c7a81611c0d565b610c848383611c21565b50505050565b5f81565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff16610d11576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900460ff166001811115610d7d57610d7c612a87565b5b6001811115610d8f57610d8e612a87565b5b81526020015f820160019054906101000a900460ff1660ff1660ff1681526020015f820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600180811115610e1957610e18612a87565b5b815f01516001811115610e2f57610e2e612a87565b5b14610e66576040517f5694952100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8203610e9f576040517f7803844200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610f26919061260a565b9250508190555060055f815480929190610f3f90612907565b9190505550610f713330848673ffffffffffffffffffffffffffffffffffffffff16611d0a909392919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c00884604051610fce9190612350565b60405180910390a3505050565b610fe3611d8c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611047576040517f6697b23200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6110518282611d93565b505050565b67016345785d8a000081565b5f600654905090565b5f801b61107781611c0d565b60405180606001604052808361108d575f611090565b60015b60018111156110a2576110a1612a87565b5b81526020018560ff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681525060045f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a81548160ff0219169083600181111561112f5761112e612a87565b5b02179055506020820151815f0160016101000a81548160ff021916908360ff1602179055506040820151815f0160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050508473ffffffffffffffffffffffffffffffffffffffff167f243c26e9467b186d248bf33b7722de99a559aceda24c02928c2636071be4d99260045f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f015f9054906101000a900460ff1660405161122e9190612afa565b60405180910390a25050505050565b5f801b81565b5f805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f600554905090565b6112b7611bb5565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff1661133a576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60045f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060600160405290815f82015f9054906101000a900460ff1660018111156113a6576113a5612a87565b5b60018111156113b8576113b7612a87565b5b81526020015f820160019054906101000a900460ff1660ff1660ff1681526020015f820160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681525050905060018081111561144257611441612a87565b5b815f0151600181111561145857611457612a87565b5b1461148f576040517f5694952100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b67016345785d8a00008211156114e65767016345785d8a0000826040517fd859cbba0000000000000000000000000000000000000000000000000000000081526004016114dd9291906129ec565b60405180910390fd5b5f60035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050828110156115a95780836040517f70e6417b0000000000000000000000000000000000000000000000000000000081526004016115a09291906129ec565b60405180910390fd5b8260035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546116309190612a13565b9250508190555060065f81548092919061164990612907565b919050555061167933848673ffffffffffffffffffffffffffffffffffffffff16611e7c9092919063ffffffff16565b8373ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167fc8b1e2a9be32ce8c5fe81b6681739e4a0016bf546706482b49989431fe3d55ee856040516116d69190612350565b60405180910390a350506116e8611c04565b5050565b5f801b81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff16611799576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f34036117d2576040517f7803844200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000034600754611801919061260a565b1115611839576040517f97651d1e00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3460035f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546118c0919061260a565b925050819055503460075f8282546118d8919061260a565b9250508190555060055f8154809291906118f190612907565b91905055505f73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c008346040516119539190612350565b60405180910390a3565b5f60025f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206003015f9054906101000a900460ff166119e1576040517f566b044000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60035f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b611a6b826108a6565b611a7481611c0d565b611a7e8383611d93565b50505050565b5f807f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015611aef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611b139190612b99565b5050509150508091505090565b6305f5e10081565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600260015403611bfa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bf190612c6a565b60405180910390fd5b6002600181905550565b60018081905550565b611c1e81611c19611d8c565b611efb565b50565b5f611c2c8383611243565b611d005760015f808581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611c9d611d8c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a460019050611d04565b5f90505b92915050565b611d86848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611d3f93929190612c88565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f4c565b50505050565b5f33905090565b5f611d9e8383611243565b15611e72575f805f8581526020019081526020015f205f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550611e0f611d8c565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16847ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a460019050611e76565b5f90505b92915050565b611ef6838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611eaf929190612cbd565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611f4c565b505050565b611f058282611243565b611f485780826040517fe2517d3f000000000000000000000000000000000000000000000000000000008152600401611f3f929190612ce4565b60405180910390fd5b5050565b5f8060205f8451602086015f885af180611f6b576040513d5f823e3d81fd5b3d92505f519150505f8214611f84576001811415611f9f565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611fe157836040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611fd89190612410565b60405180910390fd5b50505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61202c81611ff8565b8114612036575f80fd5b50565b5f8135905061204781612023565b92915050565b5f6020828403121561206257612061611ff0565b5b5f61206f84828501612039565b91505092915050565b5f8115159050919050565b61208c81612078565b82525050565b5f6020820190506120a55f830184612083565b92915050565b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6120f9826120b3565b810181811067ffffffffffffffff82111715612118576121176120c3565b5b80604052505050565b5f61212a611fe7565b905061213682826120f0565b919050565b5f67ffffffffffffffff821115612155576121546120c3565b5b61215e826120b3565b9050602081019050919050565b828183375f83830152505050565b5f61218b6121868461213b565b612121565b9050828152602081018484840111156121a7576121a66120af565b5b6121b284828561216b565b509392505050565b5f82601f8301126121ce576121cd6120ab565b5b81356121de848260208601612179565b91505092915050565b5f80604083850312156121fd576121fc611ff0565b5b5f83013567ffffffffffffffff81111561221a57612219611ff4565b5b612226858286016121ba565b925050602083013567ffffffffffffffff81111561224757612246611ff4565b5b612253858286016121ba565b9150509250929050565b5f819050919050565b61226f8161225d565b8114612279575f80fd5b50565b5f8135905061228a81612266565b92915050565b5f602082840312156122a5576122a4611ff0565b5b5f6122b28482850161227c565b91505092915050565b6122c48161225d565b82525050565b5f6020820190506122dd5f8301846122bb565b92915050565b5f819050919050565b6122f5816122e3565b81146122ff575f80fd5b50565b5f81359050612310816122ec565b92915050565b5f6020828403121561232b5761232a611ff0565b5b5f61233884828501612302565b91505092915050565b61234a816122e3565b82525050565b5f6020820190506123635f830184612341565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61239282612369565b9050919050565b6123a281612388565b81146123ac575f80fd5b50565b5f813590506123bd81612399565b92915050565b5f80604083850312156123d9576123d8611ff0565b5b5f6123e68582860161227c565b92505060206123f7858286016123af565b9150509250929050565b61240a81612388565b82525050565b5f6020820190506124235f830184612401565b92915050565b5f806040838503121561243f5761243e611ff0565b5b5f61244c858286016123af565b925050602061245d85828601612302565b9150509250929050565b5f60ff82169050919050565b61247c81612467565b8114612486575f80fd5b50565b5f8135905061249781612473565b92915050565b6124a681612078565b81146124b0575f80fd5b50565b5f813590506124c18161249d565b92915050565b5f805f80608085870312156124df576124de611ff0565b5b5f6124ec878288016123af565b94505060206124fd87828801612489565b935050604061250e878288016123af565b925050606061251f878288016124b3565b91505092959194509250565b5f819050919050565b5f61254e61254961254484612369565b61252b565b612369565b9050919050565b5f61255f82612534565b9050919050565b5f61257082612555565b9050919050565b61258081612566565b82525050565b5f6020820190506125995f830184612577565b92915050565b5f80604083850312156125b5576125b4611ff0565b5b5f6125c2858286016123af565b92505060206125d3858286016123af565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612614826122e3565b915061261f836122e3565b9250828201905080821115612637576126366125dd565b5b92915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061268b57607f821691505b60208210810361269e5761269d612647565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026127007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826126c5565b61270a86836126c5565b95508019841693508086168417925050509392505050565b5f61273c612737612732846122e3565b61252b565b6122e3565b9050919050565b5f819050919050565b61275583612722565b61276961276182612743565b8484546126d1565b825550505050565b5f90565b61277d612771565b61278881848461274c565b505050565b5b818110156127ab576127a05f82612775565b60018101905061278e565b5050565b601f8211156127f0576127c1816126a4565b6127ca846126b6565b810160208510156127d9578190505b6127ed6127e5856126b6565b83018261278d565b50505b505050565b5f82821c905092915050565b5f6128105f19846008026127f5565b1980831691505092915050565b5f6128288383612801565b9150826002028217905092915050565b6128418261263d565b67ffffffffffffffff81111561285a576128596120c3565b5b6128648254612674565b61286f8282856127af565b5f60209050601f8311600181146128a0575f841561288e578287015190505b612898858261281d565b8655506128ff565b601f1984166128ae866126a4565b5f5b828110156128d5578489015182556001820191506020850194506020810190506128b0565b868310156128f257848901516128ee601f891682612801565b8355505b6001600288020188555050505b505050505050565b5f612911826122e3565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612943576129426125dd565b5b600182019050919050565b5f612958826122e3565b9150612963836122e3565b9250828202612971816122e3565b91508282048414831517612988576129876125dd565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6129c6826122e3565b91506129d1836122e3565b9250826129e1576129e061298f565b5b828204905092915050565b5f6040820190506129ff5f830185612341565b612a0c6020830184612341565b9392505050565b5f612a1d826122e3565b9150612a28836122e3565b9250828203905081811115612a4057612a3f6125dd565b5b92915050565b5f81905092915050565b50565b5f612a5e5f83612a46565b9150612a6982612a50565b5f82019050919050565b5f612a7d82612a53565b9150819050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b60028110612ac557612ac4612a87565b5b50565b5f819050612ad582612ab4565b919050565b5f612ae482612ac8565b9050919050565b612af481612ada565b82525050565b5f602082019050612b0d5f830184612aeb565b92915050565b5f69ffffffffffffffffffff82169050919050565b612b3181612b13565b8114612b3b575f80fd5b50565b5f81519050612b4c81612b28565b92915050565b5f819050919050565b612b6481612b52565b8114612b6e575f80fd5b50565b5f81519050612b7f81612b5b565b92915050565b5f81519050612b93816122ec565b92915050565b5f805f805f60a08688031215612bb257612bb1611ff0565b5b5f612bbf88828901612b3e565b9550506020612bd088828901612b71565b9450506040612be188828901612b85565b9350506060612bf288828901612b85565b9250506080612c0388828901612b3e565b9150509295509295909350565b5f82825260208201905092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612c54601f83612c10565b9150612c5f82612c20565b602082019050919050565b5f6020820190508181035f830152612c8181612c48565b9050919050565b5f606082019050612c9b5f830186612401565b612ca86020830185612401565b612cb56040830184612341565b949350505050565b5f604082019050612cd05f830185612401565b612cdd6020830184612341565b9392505050565b5f604082019050612cf75f830185612401565b612d0460208301846122bb565b939250505056fea26469706673582212207b3e87135a3e30972853d6754fd3a8c03c08a44bf44d0342aff4351a242df3b764736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75B238FC GT PUSH2 0xB5 JUMPI DUP1 PUSH4 0xD0E30DB0 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0xD0E30DB0 EQ PUSH2 0x470 JUMPI DUP1 PUSH4 0xD4FAC45D EQ PUSH2 0x47A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4B6 JUMPI DUP1 PUSH4 0xD67B98A9 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0xD7128C58 EQ PUSH2 0x508 JUMPI DUP1 PUSH4 0xF6687AF7 EQ PUSH2 0x532 JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x75B238FC EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x9363A141 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0x9E281A98 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xB60FC72E EQ PUSH2 0x446 JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x31F7D964 GT PUSH2 0x107 JUMPI DUP1 PUSH4 0x31F7D964 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x44BA0EA2 EQ PUSH2 0x2E8 JUMPI DUP1 PUSH4 0x47D04C71 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0x4914E2CE EQ PUSH2 0x33C JUMPI PUSH2 0x14A JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0x19289287 EQ PUSH2 0x18A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x27281025 EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x246 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x159 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x174 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16F SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH2 0x55C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x181 SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x21E7 JUMP JUMPDEST PUSH2 0x5D5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C7 SWAP2 SWAP1 PUSH2 0x2290 JUMP JUMPDEST PUSH2 0x8A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D9 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x208 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x203 SWAP2 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH2 0x8C2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x2316 JUMP JUMPDEST PUSH2 0x8F5 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x251 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0xC68 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x282 PUSH2 0xC8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28F SWAP2 SWAP1 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0xC8E JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0xFDB JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FC PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x326 PUSH2 0x1062 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x333 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x362 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35D SWAP2 SWAP1 PUSH2 0x24C7 JUMP JUMPDEST PUSH2 0x106B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x378 PUSH2 0x123D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0x1243 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x2092 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DE PUSH2 0x12A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EB SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x430 PUSH2 0x16EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43D SWAP2 SWAP1 PUSH2 0x22CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x451 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x45A PUSH2 0x16F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x2586 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x478 PUSH2 0x1716 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x49B SWAP2 SWAP1 PUSH2 0x259F JUMP JUMPDEST PUSH2 0x195D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4AD SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x23C3 JUMP JUMPDEST PUSH2 0x1A62 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4F2 PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4FF SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x51C PUSH2 0x1B20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x546 PUSH2 0x1B28 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x553 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x5CE JUMPI POP PUSH2 0x5CD DUP3 PUSH2 0x1B4C JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7845597700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x688 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST GT ISZERO PUSH2 0x6C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97651D1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SWAP1 DUP2 PUSH2 0x73E SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x2838 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH0 CALLVALUE GT ISZERO PUSH2 0x8A2 JUMPI CALLVALUE PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x806 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x81E SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x837 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x899 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8CC PUSH2 0x1A84 JUMP JUMPDEST SWAP1 POP PUSH8 0xDE0B6B3A7640000 DUP2 DUP5 PUSH2 0x8E3 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0x8ED SWAP2 SWAP1 PUSH2 0x29BC JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8FD PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x16345785D8A0000 DUP2 GT ISZERO PUSH2 0x9D7 JUMPI PUSH8 0x16345785D8A0000 DUP2 PUSH1 0x40 MLOAD PUSH32 0xD859CBBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CE SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xA9A JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0x70E6417B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA91 SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB21 SWAP2 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xB39 SWAP2 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xB52 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0xB7C SWAP1 PUSH2 0x2A73 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBBB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH32 0xBD6BFD0A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8B1E2A9BE32CE8C5FE81B6681739E4A0016BF546706482B49989431FE3D55EE DUP6 PUSH1 0x40 MLOAD PUSH2 0xC53 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xC65 PUSH2 0x1C04 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC71 DUP3 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0xC7A DUP2 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0xC84 DUP4 DUP4 PUSH2 0x1C21 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xD11 JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD7D JUMPI PUSH2 0xD7C PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xD8F JUMPI PUSH2 0xD8E PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0xE19 JUMPI PUSH2 0xE18 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xE2F JUMPI PUSH2 0xE2E PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xE66 JUMPI PUSH1 0x40 MLOAD PUSH32 0x5694952100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0xE9F JUMPI PUSH1 0x40 MLOAD PUSH32 0x7803844200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF26 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF3F SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0xF71 CALLER ADDRESS DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D0A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008 DUP5 PUSH1 0x40 MLOAD PUSH2 0xFCE SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xFE3 PUSH2 0x1D8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1047 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6697B23200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1051 DUP3 DUP3 PUSH2 0x1D93 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x6 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 SHL PUSH2 0x1077 DUP2 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH2 0x108D JUMPI PUSH0 PUSH2 0x1090 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x10A2 JUMPI PUSH2 0x10A1 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP PUSH1 0x4 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x112F JUMPI PUSH2 0x112E PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x243C26E9467B186D248BF33B7722DE99A559ACEDA24C02928C2636071BE4D992 PUSH1 0x4 PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x122E SWAP2 SWAP1 PUSH2 0x2AFA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12B7 PUSH2 0x1BB5 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x133A JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13A6 JUMPI PUSH2 0x13A5 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x13B8 JUMPI PUSH2 0x13B7 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x1 DUP1 DUP2 GT ISZERO PUSH2 0x1442 JUMPI PUSH2 0x1441 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST DUP2 PUSH0 ADD MLOAD PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1458 JUMPI PUSH2 0x1457 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x148F JUMPI PUSH1 0x40 MLOAD PUSH32 0x5694952100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH8 0x16345785D8A0000 DUP3 GT ISZERO PUSH2 0x14E6 JUMPI PUSH8 0x16345785D8A0000 DUP3 PUSH1 0x40 MLOAD PUSH32 0xD859CBBA00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14DD SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x15A9 JUMPI DUP1 DUP4 PUSH1 0x40 MLOAD PUSH32 0x70E6417B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15A0 SWAP3 SWAP2 SWAP1 PUSH2 0x29EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1630 SWAP2 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1649 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x1679 CALLER DUP5 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1E7C SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC8B1E2A9BE32CE8C5FE81B6681739E4A0016BF546706482B49989431FE3D55EE DUP6 PUSH1 0x40 MLOAD PUSH2 0x16D6 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x16E8 PUSH2 0x1C04 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x1799 JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLVALUE SUB PUSH2 0x17D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x7803844200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 CALLVALUE PUSH1 0x7 SLOAD PUSH2 0x1801 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST GT ISZERO PUSH2 0x1839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x97651D1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0x3 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18C0 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x18D8 SWAP2 SWAP1 PUSH2 0x260A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x18F1 SWAP1 PUSH2 0x2907 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1953 SWAP2 SWAP1 PUSH2 0x2350 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19E1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x566B044000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1A6B DUP3 PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x1A74 DUP2 PUSH2 0x1C0D JUMP JUMPDEST PUSH2 0x1A7E DUP4 DUP4 PUSH2 0x1D93 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xFEAF968C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xA0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1AEF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B13 SWAP2 SWAP1 PUSH2 0x2B99 JUMP JUMPDEST POP POP POP SWAP2 POP POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH4 0x5F5E100 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1BFA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BF1 SWAP1 PUSH2 0x2C6A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1C1E DUP2 PUSH2 0x1C19 PUSH2 0x1D8C JUMP JUMPDEST PUSH2 0x1EFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x1C2C DUP4 DUP4 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x1D00 JUMPI PUSH1 0x1 PUSH0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C9D PUSH2 0x1D8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1D04 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1D86 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1D3F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2C88 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F4C JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x1D9E DUP4 DUP4 PUSH2 0x1243 JUMP JUMPDEST ISZERO PUSH2 0x1E72 JUMPI PUSH0 DUP1 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1E0F PUSH2 0x1D8C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP1 POP PUSH2 0x1E76 JUMP JUMPDEST PUSH0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1EF6 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1EAF SWAP3 SWAP2 SWAP1 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1F4C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1F05 DUP3 DUP3 PUSH2 0x1243 JUMP JUMPDEST PUSH2 0x1F48 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH32 0xE2517D3F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3F SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1F6B JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x1F84 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x1F9F JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1FE1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD8 SWAP2 SWAP1 PUSH2 0x2410 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202C DUP2 PUSH2 0x1FF8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2036 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2047 DUP2 PUSH2 0x2023 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2062 JUMPI PUSH2 0x2061 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x206F DUP5 DUP3 DUP6 ADD PUSH2 0x2039 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x208C DUP2 PUSH2 0x2078 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20A5 PUSH0 DUP4 ADD DUP5 PUSH2 0x2083 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x20F9 DUP3 PUSH2 0x20B3 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2118 JUMPI PUSH2 0x2117 PUSH2 0x20C3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x212A PUSH2 0x1FE7 JUMP JUMPDEST SWAP1 POP PUSH2 0x2136 DUP3 DUP3 PUSH2 0x20F0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2155 JUMPI PUSH2 0x2154 PUSH2 0x20C3 JUMP JUMPDEST JUMPDEST PUSH2 0x215E DUP3 PUSH2 0x20B3 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x218B PUSH2 0x2186 DUP5 PUSH2 0x213B JUMP JUMPDEST PUSH2 0x2121 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21A7 JUMPI PUSH2 0x21A6 PUSH2 0x20AF JUMP JUMPDEST JUMPDEST PUSH2 0x21B2 DUP5 DUP3 DUP6 PUSH2 0x216B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21CE JUMPI PUSH2 0x21CD PUSH2 0x20AB JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21DE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21FD JUMPI PUSH2 0x21FC PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH2 0x2219 PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST PUSH2 0x2226 DUP6 DUP3 DUP7 ADD PUSH2 0x21BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2247 JUMPI PUSH2 0x2246 PUSH2 0x1FF4 JUMP JUMPDEST JUMPDEST PUSH2 0x2253 DUP6 DUP3 DUP7 ADD PUSH2 0x21BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x226F DUP2 PUSH2 0x225D JUMP JUMPDEST DUP2 EQ PUSH2 0x2279 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x228A DUP2 PUSH2 0x2266 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22A5 JUMPI PUSH2 0x22A4 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22B2 DUP5 DUP3 DUP6 ADD PUSH2 0x227C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22C4 DUP2 PUSH2 0x225D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22DD PUSH0 DUP4 ADD DUP5 PUSH2 0x22BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22F5 DUP2 PUSH2 0x22E3 JUMP JUMPDEST DUP2 EQ PUSH2 0x22FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2310 DUP2 PUSH2 0x22EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x232B JUMPI PUSH2 0x232A PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2338 DUP5 DUP3 DUP6 ADD PUSH2 0x2302 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x234A DUP2 PUSH2 0x22E3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2363 PUSH0 DUP4 ADD DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2392 DUP3 PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23A2 DUP2 PUSH2 0x2388 JUMP JUMPDEST DUP2 EQ PUSH2 0x23AC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23BD DUP2 PUSH2 0x2399 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23D9 JUMPI PUSH2 0x23D8 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23E6 DUP6 DUP3 DUP7 ADD PUSH2 0x227C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x23F7 DUP6 DUP3 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x240A DUP2 PUSH2 0x2388 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2423 PUSH0 DUP4 ADD DUP5 PUSH2 0x2401 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x243F JUMPI PUSH2 0x243E PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x244C DUP6 DUP3 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x245D DUP6 DUP3 DUP7 ADD PUSH2 0x2302 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x247C DUP2 PUSH2 0x2467 JUMP JUMPDEST DUP2 EQ PUSH2 0x2486 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2497 DUP2 PUSH2 0x2473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x24A6 DUP2 PUSH2 0x2078 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C1 DUP2 PUSH2 0x249D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x24DF JUMPI PUSH2 0x24DE PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24EC DUP8 DUP3 DUP9 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x24FD DUP8 DUP3 DUP9 ADD PUSH2 0x2489 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x250E DUP8 DUP3 DUP9 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x251F DUP8 DUP3 DUP9 ADD PUSH2 0x24B3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x254E PUSH2 0x2549 PUSH2 0x2544 DUP5 PUSH2 0x2369 JUMP JUMPDEST PUSH2 0x252B JUMP JUMPDEST PUSH2 0x2369 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x255F DUP3 PUSH2 0x2534 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2570 DUP3 PUSH2 0x2555 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2580 DUP2 PUSH2 0x2566 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2599 PUSH0 DUP4 ADD DUP5 PUSH2 0x2577 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B5 JUMPI PUSH2 0x25B4 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25C2 DUP6 DUP3 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25D3 DUP6 DUP3 DUP7 ADD PUSH2 0x23AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2614 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x261F DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2637 JUMPI PUSH2 0x2636 PUSH2 0x25DD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x268B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x269E JUMPI PUSH2 0x269D PUSH2 0x2647 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2700 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x26C5 JUMP JUMPDEST PUSH2 0x270A DUP7 DUP4 PUSH2 0x26C5 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x273C PUSH2 0x2737 PUSH2 0x2732 DUP5 PUSH2 0x22E3 JUMP JUMPDEST PUSH2 0x252B JUMP JUMPDEST PUSH2 0x22E3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2755 DUP4 PUSH2 0x2722 JUMP JUMPDEST PUSH2 0x2769 PUSH2 0x2761 DUP3 PUSH2 0x2743 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x26D1 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x277D PUSH2 0x2771 JUMP JUMPDEST PUSH2 0x2788 DUP2 DUP5 DUP5 PUSH2 0x274C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x27AB JUMPI PUSH2 0x27A0 PUSH0 DUP3 PUSH2 0x2775 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x278E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x27F0 JUMPI PUSH2 0x27C1 DUP2 PUSH2 0x26A4 JUMP JUMPDEST PUSH2 0x27CA DUP5 PUSH2 0x26B6 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x27D9 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x27ED PUSH2 0x27E5 DUP6 PUSH2 0x26B6 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x278D JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2810 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x27F5 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2828 DUP4 DUP4 PUSH2 0x2801 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2841 DUP3 PUSH2 0x263D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x285A JUMPI PUSH2 0x2859 PUSH2 0x20C3 JUMP JUMPDEST JUMPDEST PUSH2 0x2864 DUP3 SLOAD PUSH2 0x2674 JUMP JUMPDEST PUSH2 0x286F DUP3 DUP3 DUP6 PUSH2 0x27AF JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x28A0 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x288E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2898 DUP6 DUP3 PUSH2 0x281D JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x28FF JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x28AE DUP7 PUSH2 0x26A4 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x28D5 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x28B0 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x28F2 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x28EE PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2801 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2911 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2943 JUMPI PUSH2 0x2942 PUSH2 0x25DD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2958 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2963 DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2971 DUP2 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2988 JUMPI PUSH2 0x2987 PUSH2 0x25DD JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x29C6 DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x29D1 DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x29E1 JUMPI PUSH2 0x29E0 PUSH2 0x298F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x29FF PUSH0 DUP4 ADD DUP6 PUSH2 0x2341 JUMP JUMPDEST PUSH2 0x2A0C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2A1D DUP3 PUSH2 0x22E3 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A28 DUP4 PUSH2 0x22E3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A40 JUMPI PUSH2 0x2A3F PUSH2 0x25DD JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x2A5E PUSH0 DUP4 PUSH2 0x2A46 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A69 DUP3 PUSH2 0x2A50 JUMP JUMPDEST PUSH0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2A7D DUP3 PUSH2 0x2A53 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x2 DUP2 LT PUSH2 0x2AC5 JUMPI PUSH2 0x2AC4 PUSH2 0x2A87 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2AD5 DUP3 PUSH2 0x2AB4 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AE4 DUP3 PUSH2 0x2AC8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2AF4 DUP2 PUSH2 0x2ADA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2B0D PUSH0 DUP4 ADD DUP5 PUSH2 0x2AEB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B31 DUP2 PUSH2 0x2B13 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B3B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B4C DUP2 PUSH2 0x2B28 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B64 DUP2 PUSH2 0x2B52 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B6E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B7F DUP2 PUSH2 0x2B5B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2B93 DUP2 PUSH2 0x22EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2BB2 JUMPI PUSH2 0x2BB1 PUSH2 0x1FF0 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2BBF DUP9 DUP3 DUP10 ADD PUSH2 0x2B3E JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2BD0 DUP9 DUP3 DUP10 ADD PUSH2 0x2B71 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2BE1 DUP9 DUP3 DUP10 ADD PUSH2 0x2B85 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2BF2 DUP9 DUP3 DUP10 ADD PUSH2 0x2B85 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x2C03 DUP9 DUP3 DUP10 ADD PUSH2 0x2B3E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C54 PUSH1 0x1F DUP4 PUSH2 0x2C10 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C5F DUP3 PUSH2 0x2C20 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C81 DUP2 PUSH2 0x2C48 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2C9B PUSH0 DUP4 ADD DUP7 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x2CA8 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x2CB5 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CD0 PUSH0 DUP4 ADD DUP6 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x2CDD PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2341 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CF7 PUSH0 DUP4 ADD DUP6 PUSH2 0x2401 JUMP JUMPDEST PUSH2 0x2D04 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22BB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0x3E87135A3E30972853D6754FD3A8C03C08A44BF44D0342AFF4351A24 0x2D RETURN 0xB7 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "549:9897:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2541:202:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5773:649:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3786:120:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9934:169:12;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7741:701;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4202:136:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1920:49:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6989:533;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5304:245:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:55:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10344:100;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5046:417;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;790:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2830:136:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10176:98:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8504:726;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2196:49:1;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2086:53:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6483:451;;;:::i;:::-;;9459:193;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4618:138:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9714:159:12;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1740:47;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1998:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2541:202:1;2626:4;2664:32;2649:47;;;:11;:47;;;;:87;;;;2700:36;2724:11;2700:23;:36::i;:::-;2649:87;2642:94;;2541:202;;;:::o;5773:649:12:-;5868:8;:20;5877:10;5868:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;5864:67;;;5904:27;;;;;;;;;;;;;;5864:67;5978:9;5966;5945:18;;:30;;;;:::i;:::-;:42;5941:75;;;5996:20;;;;;;;;;;;;;;5941:75;6050:119;;;;;;;;6081:1;6050:119;;;;6128:4;6050:119;;;;6103:5;6050:119;;;;6154:4;6050:119;;;;;6027:8;:20;6036:10;6027:20;;;;;;;;;;;;;;;:142;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6196:1;6184:9;:13;6180:236;;;6251:9;6213:8;:20;6222:10;6213:20;;;;;;;;;;;;;;;:34;1967:1;6213:34;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;6296:9;6274:18;;:31;;;;;;;:::i;:::-;;;;;;;;6319:16;;:18;;;;;;;;;:::i;:::-;;;;;;1967:1;6356:49;;6369:10;6356:49;;;6395:9;6356:49;;;;;;:::i;:::-;;;;;;;;6180:236;5773:649;;:::o;3786:120:1:-;3851:7;3877:6;:12;3884:4;3877:12;;;;;;;;;;;:22;;;3870:29;;3786:120;;;:::o;9934:169:12:-;10000:7;10019:13;10035:18;:16;:18::i;:::-;10019:34;;10092:4;10083:5;10071:9;:17;;;;:::i;:::-;10070:26;;;;:::i;:::-;10063:33;;;9934:169;;;:::o;7741:701::-;2261:21:6;:19;:21::i;:::-;7812:8:12::1;:20;7821:10;7812:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;7807:64;;7848:23;;;;;;;;;;;;;;7807:64;1877:9;7885:6;:28;7881:95;;;1877:9;7969:6;7922:54;;;;;;;;;;;;:::i;:::-;;;;;;;;7881:95;7986:19;8008:8;:20;8017:10;8008:20;;;;;;;;;;;;;;;:34;1967:1:::0;8008:34:::1;;;;;;;;;;;;;;;;7986:56;;8070:6;8056:11;:20;8052:76;;;8108:11;8121:6;8085:43;;;;;;;;;;;;:::i;:::-;;;;;;;;8052:76;8177:6;8139:8;:20;8148:10;8139:20;;;;;;;;;;;;;;;:34;1967:1:::0;8139:34:::1;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;8215:6;8193:18;;:28;;;;;;;:::i;:::-;;;;;;;;8231:17;;:19;;;;;;;;;:::i;:::-;;;;;;8262:12;8287:10;8279:24;;8311:6;8279:43;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8261:61;;;8337:7;8332:41;;8353:20;;;;;;;;;;;;;;8332:41;1967:1;8388:47;;8402:10;8388:47;;;8428:6;8388:47;;;;;;:::i;:::-;;;;;;;;7797:645;;2303:20:6::0;:18;:20::i;:::-;7741:701:12;:::o;4202:136:1:-;4276:18;4289:4;4276:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4306:25:::1;4317:4;4323:7;4306:10;:25::i;:::-;;4202:136:::0;;;:::o;1920:49:12:-;1967:1;1920:49;:::o;6989:533::-;7066:8;:20;7075:10;7066:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;7061:64;;7102:23;;;;;;;;;;;;;;7061:64;7135:19;7157:12;:19;7170:5;7157:19;;;;;;;;;;;;;;;7135:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7202:20;7190:32;;;;;;;;:::i;:::-;;:2;:8;;;:32;;;;;;;;:::i;:::-;;;7186:69;;7231:24;;;;;;;;;;;;;;7186:69;7279:1;7269:6;:11;7265:45;;7289:21;;;;;;;;;;;;;;7265:45;7352:6;7321:8;:20;7330:10;7321:20;;;;;;;;;;;;;;;:27;7342:5;7321:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;7368:16;;:18;;;;;;;;;:::i;:::-;;;;;;7396:65;7427:10;7447:4;7454:6;7403:5;7396:30;;;;:65;;;;;;:::i;:::-;7501:5;7476:39;;7489:10;7476:39;;;7508:6;7476:39;;;;;;:::i;:::-;;;;;;;;7051:471;6989:533;;:::o;5304:245:1:-;5419:12;:10;:12::i;:::-;5397:34;;:18;:34;;;5393:102;;5454:30;;;;;;;;;;;;;;5393:102;5505:37;5517:4;5523:18;5505:11;:37::i;:::-;;5304:245;;:::o;1831:55:12:-;1877:9;1831:55;:::o;10344:100::-;10394:7;10420:17;;10413:24;;10344:100;:::o;5046:417::-;2241:4:1;827:18:12;;2473:16:1;2484:4;2473:10;:16::i;:::-;5230:165:12::1;;;;;;;;5261:9;:57;;5296:22;5261:57;;;5273:20;5261:57;5230:165;;;;;;;;:::i;:::-;;;;;;5342:8;5230:165;;;;;;5375:9;5230:165;;;;::::0;5208:12:::1;:19;5221:5;5208:19;;;;;;;;;;;;;;;:187;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5423:5;5410:46;;;5430:12;:19;5443:5;5430:19;;;;;;;;;;;;;;;:25;;;;;;;;;;;;5410:46;;;;;;:::i;:::-;;;;;;;;5046:417:::0;;;;;:::o;790:55::-;2241:4:1;827:18:12;;790:55;:::o;2830:136:1:-;2907:4;2930:6;:12;2937:4;2930:12;;;;;;;;;;;:20;;:29;2951:7;2930:29;;;;;;;;;;;;;;;;;;;;;;;;;2923:36;;2830:136;;;;:::o;10176:98:12:-;10225:7;10251:16;;10244:23;;10176:98;:::o;8504:726::-;2261:21:6;:19;:21::i;:::-;8595:8:12::1;:20;8604:10;8595:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;8590:64;;8631:23;;;;;;;;;;;;;;8590:64;8664:19;8686:12;:19;8699:5;8686:19;;;;;;;;;;;;;;;8664:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;8731:20;8719:32:::0;::::1;;;;;;;:::i;:::-;;:2;:8;;;:32;;;;;;;;:::i;:::-;;;8715:69;;8760:24;;;;;;;;;;;;;;8715:69;1877:9;8798:6;:28;8794:95;;;1877:9;8882:6;8835:54;;;;;;;;;;;;:::i;:::-;;;;;;;;8794:95;8900:19;8922:8;:20;8931:10;8922:20;;;;;;;;;;;;;;;:27;8943:5;8922:27;;;;;;;;;;;;;;;;8900:49;;8977:6;8963:11;:20;8959:76;;;9015:11;9028:6;8992:43;;;;;;;;;;;;:::i;:::-;;;;;;;;8959:76;9077:6;9046:8;:20;9055:10;9046:20;;;;;;;;;;;;;;;:27;9067:5;9046:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;9093:17;;:19;;;;;;;;;:::i;:::-;;;;;;9122:46;9149:10;9161:6;9129:5;9122:26;;;;:46;;;;;:::i;:::-;9209:5;9183:40;;9197:10;9183:40;;;9216:6;9183:40;;;;;;:::i;:::-;;;;;;;;8580:650;;2303:20:6::0;:18;:20::i;:::-;8504:726:12;;:::o;2196:49:1:-;2241:4;2196:49;;;:::o;2086:53:12:-;;;:::o;6483:451::-;6534:8;:20;6543:10;6534:20;;;;;;;;;;;;;;;:27;;;;;;;;;;;;6529:64;;6570:23;;;;;;;;;;;;;;6529:64;6620:1;6607:9;:14;6603:48;;6630:21;;;;;;;;;;;;;;6603:48;6698:9;6686;6665:18;;:30;;;;:::i;:::-;:42;6661:75;;;6716:20;;;;;;;;;;;;;;6661:75;6785:9;6747:8;:20;6756:10;6747:20;;;;;;;;;;;;;;;:34;1967:1;6747:34;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;6826:9;6804:18;;:31;;;;;;;:::i;:::-;;;;;;;;6845:16;;:18;;;;;;;;;:::i;:::-;;;;;;1967:1;6878:49;;6891:10;6878:49;;;6917:9;6878:49;;;;;;:::i;:::-;;;;;;;;6483:451::o;9459:193::-;9530:7;9554:8;:14;9563:4;9554:14;;;;;;;;;;;;;;;:21;;;;;;;;;;;;9549:58;;9584:23;;;;;;;;;;;;;;9549:58;9624:8;:14;9633:4;9624:14;;;;;;;;;;;;;;;:21;9639:5;9624:21;;;;;;;;;;;;;;;;9617:28;;9459:193;;;;:::o;4618:138:1:-;4693:18;4706:4;4693:12;:18::i;:::-;2473:16;2484:4;2473:10;:16::i;:::-;4723:26:::1;4735:4;4741:7;4723:11;:26::i;:::-;;4618:138:::0;;;:::o;9714:159:12:-;9762:7;9784:12;9803:14;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9781:54;;;;;;9860:5;9845:21;;;9714:159;:::o;1740:47::-;1784:3;1740:47;:::o;1998:34::-;;;:::o;730:146:10:-;806:4;844:25;829:40;;;:11;:40;;;;822:47;;730:146;;;:::o;2336:287:6:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;3175:103:1:-;3241:30;3252:4;3258:12;:10;:12::i;:::-;3241:10;:30::i;:::-;3175:103;:::o;6155:316::-;6232:4;6253:22;6261:4;6267:7;6253;:22::i;:::-;6248:217;;6323:4;6291:6;:12;6298:4;6291:12;;;;;;;;;;;:20;;:29;6312:7;6291:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;6373:12;:10;:12::i;:::-;6346:40;;6364:7;6346:40;;6358:4;6346:40;;;;;;;;;;6407:4;6400:11;;;;6248:217;6449:5;6442:12;;6155:316;;;;;:::o;1618:188:8:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;6708:317:1:-;6786:4;6806:22;6814:4;6820:7;6806;:22::i;:::-;6802:217;;;6876:5;6844:6;:12;6851:4;6844:12;;;;;;;;;;;:20;;:29;6865:7;6844:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;6927:12;:10;:12::i;:::-;6900:40;;6918:7;6900:40;;6912:4;6900:40;;;;;;;;;;6961:4;6954:11;;;;6802:217;7003:5;6996:12;;6708:317;;;;;:::o;1219:160:8:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;3408:197:1:-;3496:22;3504:4;3510:7;3496;:22::i;:::-;3491:108;;3574:7;3583:4;3541:47;;;;;;;;;;;;:::i;:::-;;;;;;;;3491:108;3408:197;;:::o;8370:720:8:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;7:75:13:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:117::-;1627:1;1624;1617:12;1641:117;1750:1;1747;1740:12;1764:102;1805:6;1856:2;1852:7;1847:2;1840:5;1836:14;1832:28;1822:38;;1764:102;;;:::o;1872:180::-;1920:77;1917:1;1910:88;2017:4;2014:1;2007:15;2041:4;2038:1;2031:15;2058:281;2141:27;2163:4;2141:27;:::i;:::-;2133:6;2129:40;2271:6;2259:10;2256:22;2235:18;2223:10;2220:34;2217:62;2214:88;;;2282:18;;:::i;:::-;2214:88;2322:10;2318:2;2311:22;2101:238;2058:281;;:::o;2345:129::-;2379:6;2406:20;;:::i;:::-;2396:30;;2435:33;2463:4;2455:6;2435:33;:::i;:::-;2345:129;;;:::o;2480:308::-;2542:4;2632:18;2624:6;2621:30;2618:56;;;2654:18;;:::i;:::-;2618:56;2692:29;2714:6;2692:29;:::i;:::-;2684:37;;2776:4;2770;2766:15;2758:23;;2480:308;;;:::o;2794:148::-;2892:6;2887:3;2882;2869:30;2933:1;2924:6;2919:3;2915:16;2908:27;2794:148;;;:::o;2948:425::-;3026:5;3051:66;3067:49;3109:6;3067:49;:::i;:::-;3051:66;:::i;:::-;3042:75;;3140:6;3133:5;3126:21;3178:4;3171:5;3167:16;3216:3;3207:6;3202:3;3198:16;3195:25;3192:112;;;3223:79;;:::i;:::-;3192:112;3313:54;3360:6;3355:3;3350;3313:54;:::i;:::-;3032:341;2948:425;;;;;:::o;3393:340::-;3449:5;3498:3;3491:4;3483:6;3479:17;3475:27;3465:122;;3506:79;;:::i;:::-;3465:122;3623:6;3610:20;3648:79;3723:3;3715:6;3708:4;3700:6;3696:17;3648:79;:::i;:::-;3639:88;;3455:278;3393:340;;;;:::o;3739:834::-;3827:6;3835;3884:2;3872:9;3863:7;3859:23;3855:32;3852:119;;;3890:79;;:::i;:::-;3852:119;4038:1;4027:9;4023:17;4010:31;4068:18;4060:6;4057:30;4054:117;;;4090:79;;:::i;:::-;4054:117;4195:63;4250:7;4241:6;4230:9;4226:22;4195:63;:::i;:::-;4185:73;;3981:287;4335:2;4324:9;4320:18;4307:32;4366:18;4358:6;4355:30;4352:117;;;4388:79;;:::i;:::-;4352:117;4493:63;4548:7;4539:6;4528:9;4524:22;4493:63;:::i;:::-;4483:73;;4278:288;3739:834;;;;;:::o;4579:77::-;4616:7;4645:5;4634:16;;4579:77;;;:::o;4662:122::-;4735:24;4753:5;4735:24;:::i;:::-;4728:5;4725:35;4715:63;;4774:1;4771;4764:12;4715:63;4662:122;:::o;4790:139::-;4836:5;4874:6;4861:20;4852:29;;4890:33;4917:5;4890:33;:::i;:::-;4790:139;;;;:::o;4935:329::-;4994:6;5043:2;5031:9;5022:7;5018:23;5014:32;5011:119;;;5049:79;;:::i;:::-;5011:119;5169:1;5194:53;5239:7;5230:6;5219:9;5215:22;5194:53;:::i;:::-;5184:63;;5140:117;4935:329;;;;:::o;5270:118::-;5357:24;5375:5;5357:24;:::i;:::-;5352:3;5345:37;5270:118;;:::o;5394:222::-;5487:4;5525:2;5514:9;5510:18;5502:26;;5538:71;5606:1;5595:9;5591:17;5582:6;5538:71;:::i;:::-;5394:222;;;;:::o;5622:77::-;5659:7;5688:5;5677:16;;5622:77;;;:::o;5705:122::-;5778:24;5796:5;5778:24;:::i;:::-;5771:5;5768:35;5758:63;;5817:1;5814;5807:12;5758:63;5705:122;:::o;5833:139::-;5879:5;5917:6;5904:20;5895:29;;5933:33;5960:5;5933:33;:::i;:::-;5833:139;;;;:::o;5978:329::-;6037:6;6086:2;6074:9;6065:7;6061:23;6057:32;6054:119;;;6092:79;;:::i;:::-;6054:119;6212:1;6237:53;6282:7;6273:6;6262:9;6258:22;6237:53;:::i;:::-;6227:63;;6183:117;5978:329;;;;:::o;6313:118::-;6400:24;6418:5;6400:24;:::i;:::-;6395:3;6388:37;6313:118;;:::o;6437:222::-;6530:4;6568:2;6557:9;6553:18;6545:26;;6581:71;6649:1;6638:9;6634:17;6625:6;6581:71;:::i;:::-;6437:222;;;;:::o;6665:126::-;6702:7;6742:42;6735:5;6731:54;6720:65;;6665:126;;;:::o;6797:96::-;6834:7;6863:24;6881:5;6863:24;:::i;:::-;6852:35;;6797:96;;;:::o;6899:122::-;6972:24;6990:5;6972:24;:::i;:::-;6965:5;6962:35;6952:63;;7011:1;7008;7001:12;6952:63;6899:122;:::o;7027:139::-;7073:5;7111:6;7098:20;7089:29;;7127:33;7154:5;7127:33;:::i;:::-;7027:139;;;;:::o;7172:474::-;7240:6;7248;7297:2;7285:9;7276:7;7272:23;7268:32;7265:119;;;7303:79;;:::i;:::-;7265:119;7423:1;7448:53;7493:7;7484:6;7473:9;7469:22;7448:53;:::i;:::-;7438:63;;7394:117;7550:2;7576:53;7621:7;7612:6;7601:9;7597:22;7576:53;:::i;:::-;7566:63;;7521:118;7172:474;;;;;:::o;7652:118::-;7739:24;7757:5;7739:24;:::i;:::-;7734:3;7727:37;7652:118;;:::o;7776:222::-;7869:4;7907:2;7896:9;7892:18;7884:26;;7920:71;7988:1;7977:9;7973:17;7964:6;7920:71;:::i;:::-;7776:222;;;;:::o;8004:474::-;8072:6;8080;8129:2;8117:9;8108:7;8104:23;8100:32;8097:119;;;8135:79;;:::i;:::-;8097:119;8255:1;8280:53;8325:7;8316:6;8305:9;8301:22;8280:53;:::i;:::-;8270:63;;8226:117;8382:2;8408:53;8453:7;8444:6;8433:9;8429:22;8408:53;:::i;:::-;8398:63;;8353:118;8004:474;;;;;:::o;8484:86::-;8519:7;8559:4;8552:5;8548:16;8537:27;;8484:86;;;:::o;8576:118::-;8647:22;8663:5;8647:22;:::i;:::-;8640:5;8637:33;8627:61;;8684:1;8681;8674:12;8627:61;8576:118;:::o;8700:135::-;8744:5;8782:6;8769:20;8760:29;;8798:31;8823:5;8798:31;:::i;:::-;8700:135;;;;:::o;8841:116::-;8911:21;8926:5;8911:21;:::i;:::-;8904:5;8901:32;8891:60;;8947:1;8944;8937:12;8891:60;8841:116;:::o;8963:133::-;9006:5;9044:6;9031:20;9022:29;;9060:30;9084:5;9060:30;:::i;:::-;8963:133;;;;:::o;9102:755::-;9183:6;9191;9199;9207;9256:3;9244:9;9235:7;9231:23;9227:33;9224:120;;;9263:79;;:::i;:::-;9224:120;9383:1;9408:53;9453:7;9444:6;9433:9;9429:22;9408:53;:::i;:::-;9398:63;;9354:117;9510:2;9536:51;9579:7;9570:6;9559:9;9555:22;9536:51;:::i;:::-;9526:61;;9481:116;9636:2;9662:53;9707:7;9698:6;9687:9;9683:22;9662:53;:::i;:::-;9652:63;;9607:118;9764:2;9790:50;9832:7;9823:6;9812:9;9808:22;9790:50;:::i;:::-;9780:60;;9735:115;9102:755;;;;;;;:::o;9863:60::-;9891:3;9912:5;9905:12;;9863:60;;;:::o;9929:142::-;9979:9;10012:53;10030:34;10039:24;10057:5;10039:24;:::i;:::-;10030:34;:::i;:::-;10012:53;:::i;:::-;9999:66;;9929:142;;;:::o;10077:126::-;10127:9;10160:37;10191:5;10160:37;:::i;:::-;10147:50;;10077:126;;;:::o;10209:154::-;10287:9;10320:37;10351:5;10320:37;:::i;:::-;10307:50;;10209:154;;;:::o;10369:187::-;10484:65;10543:5;10484:65;:::i;:::-;10479:3;10472:78;10369:187;;:::o;10562:278::-;10683:4;10721:2;10710:9;10706:18;10698:26;;10734:99;10830:1;10819:9;10815:17;10806:6;10734:99;:::i;:::-;10562:278;;;;:::o;10846:474::-;10914:6;10922;10971:2;10959:9;10950:7;10946:23;10942:32;10939:119;;;10977:79;;:::i;:::-;10939:119;11097:1;11122:53;11167:7;11158:6;11147:9;11143:22;11122:53;:::i;:::-;11112:63;;11068:117;11224:2;11250:53;11295:7;11286:6;11275:9;11271:22;11250:53;:::i;:::-;11240:63;;11195:118;10846:474;;;;;:::o;11326:180::-;11374:77;11371:1;11364:88;11471:4;11468:1;11461:15;11495:4;11492:1;11485:15;11512:191;11552:3;11571:20;11589:1;11571:20;:::i;:::-;11566:25;;11605:20;11623:1;11605:20;:::i;:::-;11600:25;;11648:1;11645;11641:9;11634:16;;11669:3;11666:1;11663:10;11660:36;;;11676:18;;:::i;:::-;11660:36;11512:191;;;;:::o;11709:99::-;11761:6;11795:5;11789:12;11779:22;;11709:99;;;:::o;11814:180::-;11862:77;11859:1;11852:88;11959:4;11956:1;11949:15;11983:4;11980:1;11973:15;12000:320;12044:6;12081:1;12075:4;12071:12;12061:22;;12128:1;12122:4;12118:12;12149:18;12139:81;;12205:4;12197:6;12193:17;12183:27;;12139:81;12267:2;12259:6;12256:14;12236:18;12233:38;12230:84;;12286:18;;:::i;:::-;12230:84;12051:269;12000:320;;;:::o;12326:141::-;12375:4;12398:3;12390:11;;12421:3;12418:1;12411:14;12455:4;12452:1;12442:18;12434:26;;12326:141;;;:::o;12473:93::-;12510:6;12557:2;12552;12545:5;12541:14;12537:23;12527:33;;12473:93;;;:::o;12572:107::-;12616:8;12666:5;12660:4;12656:16;12635:37;;12572:107;;;;:::o;12685:393::-;12754:6;12804:1;12792:10;12788:18;12827:97;12857:66;12846:9;12827:97;:::i;:::-;12945:39;12975:8;12964:9;12945:39;:::i;:::-;12933:51;;13017:4;13013:9;13006:5;13002:21;12993:30;;13066:4;13056:8;13052:19;13045:5;13042:30;13032:40;;12761:317;;12685:393;;;;;:::o;13084:142::-;13134:9;13167:53;13185:34;13194:24;13212:5;13194:24;:::i;:::-;13185:34;:::i;:::-;13167:53;:::i;:::-;13154:66;;13084:142;;;:::o;13232:75::-;13275:3;13296:5;13289:12;;13232:75;;;:::o;13313:269::-;13423:39;13454:7;13423:39;:::i;:::-;13484:91;13533:41;13557:16;13533:41;:::i;:::-;13525:6;13518:4;13512:11;13484:91;:::i;:::-;13478:4;13471:105;13389:193;13313:269;;;:::o;13588:73::-;13633:3;13588:73;:::o;13667:189::-;13744:32;;:::i;:::-;13785:65;13843:6;13835;13829:4;13785:65;:::i;:::-;13720:136;13667:189;;:::o;13862:186::-;13922:120;13939:3;13932:5;13929:14;13922:120;;;13993:39;14030:1;14023:5;13993:39;:::i;:::-;13966:1;13959:5;13955:13;13946:22;;13922:120;;;13862:186;;:::o;14054:543::-;14155:2;14150:3;14147:11;14144:446;;;14189:38;14221:5;14189:38;:::i;:::-;14273:29;14291:10;14273:29;:::i;:::-;14263:8;14259:44;14456:2;14444:10;14441:18;14438:49;;;14477:8;14462:23;;14438:49;14500:80;14556:22;14574:3;14556:22;:::i;:::-;14546:8;14542:37;14529:11;14500:80;:::i;:::-;14159:431;;14144:446;14054:543;;;:::o;14603:117::-;14657:8;14707:5;14701:4;14697:16;14676:37;;14603:117;;;;:::o;14726:169::-;14770:6;14803:51;14851:1;14847:6;14839:5;14836:1;14832:13;14803:51;:::i;:::-;14799:56;14884:4;14878;14874:15;14864:25;;14777:118;14726:169;;;;:::o;14900:295::-;14976:4;15122:29;15147:3;15141:4;15122:29;:::i;:::-;15114:37;;15184:3;15181:1;15177:11;15171:4;15168:21;15160:29;;14900:295;;;;:::o;15200:1395::-;15317:37;15350:3;15317:37;:::i;:::-;15419:18;15411:6;15408:30;15405:56;;;15441:18;;:::i;:::-;15405:56;15485:38;15517:4;15511:11;15485:38;:::i;:::-;15570:67;15630:6;15622;15616:4;15570:67;:::i;:::-;15664:1;15688:4;15675:17;;15720:2;15712:6;15709:14;15737:1;15732:618;;;;16394:1;16411:6;16408:77;;;16460:9;16455:3;16451:19;16445:26;16436:35;;16408:77;16511:67;16571:6;16564:5;16511:67;:::i;:::-;16505:4;16498:81;16367:222;15702:887;;15732:618;15784:4;15780:9;15772:6;15768:22;15818:37;15850:4;15818:37;:::i;:::-;15877:1;15891:208;15905:7;15902:1;15899:14;15891:208;;;15984:9;15979:3;15975:19;15969:26;15961:6;15954:42;16035:1;16027:6;16023:14;16013:24;;16082:2;16071:9;16067:18;16054:31;;15928:4;15925:1;15921:12;15916:17;;15891:208;;;16127:6;16118:7;16115:19;16112:179;;;16185:9;16180:3;16176:19;16170:26;16228:48;16270:4;16262:6;16258:17;16247:9;16228:48;:::i;:::-;16220:6;16213:64;16135:156;16112:179;16337:1;16333;16325:6;16321:14;16317:22;16311:4;16304:36;15739:611;;;15702:887;;15292:1303;;;15200:1395;;:::o;16601:233::-;16640:3;16663:24;16681:5;16663:24;:::i;:::-;16654:33;;16709:66;16702:5;16699:77;16696:103;;16779:18;;:::i;:::-;16696:103;16826:1;16819:5;16815:13;16808:20;;16601:233;;;:::o;16840:410::-;16880:7;16903:20;16921:1;16903:20;:::i;:::-;16898:25;;16937:20;16955:1;16937:20;:::i;:::-;16932:25;;16992:1;16989;16985:9;17014:30;17032:11;17014:30;:::i;:::-;17003:41;;17193:1;17184:7;17180:15;17177:1;17174:22;17154:1;17147:9;17127:83;17104:139;;17223:18;;:::i;:::-;17104:139;16888:362;16840:410;;;;:::o;17256:180::-;17304:77;17301:1;17294:88;17401:4;17398:1;17391:15;17425:4;17422:1;17415:15;17442:185;17482:1;17499:20;17517:1;17499:20;:::i;:::-;17494:25;;17533:20;17551:1;17533:20;:::i;:::-;17528:25;;17572:1;17562:35;;17577:18;;:::i;:::-;17562:35;17619:1;17616;17612:9;17607:14;;17442:185;;;;:::o;17633:332::-;17754:4;17792:2;17781:9;17777:18;17769:26;;17805:71;17873:1;17862:9;17858:17;17849:6;17805:71;:::i;:::-;17886:72;17954:2;17943:9;17939:18;17930:6;17886:72;:::i;:::-;17633:332;;;;;:::o;17971:194::-;18011:4;18031:20;18049:1;18031:20;:::i;:::-;18026:25;;18065:20;18083:1;18065:20;:::i;:::-;18060:25;;18109:1;18106;18102:9;18094:17;;18133:1;18127:4;18124:11;18121:37;;;18138:18;;:::i;:::-;18121:37;17971:194;;;;:::o;18171:147::-;18272:11;18309:3;18294:18;;18171:147;;;;:::o;18324:114::-;;:::o;18444:398::-;18603:3;18624:83;18705:1;18700:3;18624:83;:::i;:::-;18617:90;;18716:93;18805:3;18716:93;:::i;:::-;18834:1;18829:3;18825:11;18818:18;;18444:398;;;:::o;18848:379::-;19032:3;19054:147;19197:3;19054:147;:::i;:::-;19047:154;;19218:3;19211:10;;18848:379;;;:::o;19233:180::-;19281:77;19278:1;19271:88;19378:4;19375:1;19368:15;19402:4;19399:1;19392:15;19419:120;19507:1;19500:5;19497:12;19487:46;;19513:18;;:::i;:::-;19487:46;19419:120;:::o;19545:141::-;19597:7;19626:5;19615:16;;19632:48;19674:5;19632:48;:::i;:::-;19545:141;;;:::o;19692:::-;19755:9;19788:39;19821:5;19788:39;:::i;:::-;19775:52;;19692:141;;;:::o;19839:157::-;19939:50;19983:5;19939:50;:::i;:::-;19934:3;19927:63;19839:157;;:::o;20002:248::-;20108:4;20146:2;20135:9;20131:18;20123:26;;20159:84;20240:1;20229:9;20225:17;20216:6;20159:84;:::i;:::-;20002:248;;;;:::o;20256:105::-;20292:7;20332:22;20325:5;20321:34;20310:45;;20256:105;;;:::o;20367:120::-;20439:23;20456:5;20439:23;:::i;:::-;20432:5;20429:34;20419:62;;20477:1;20474;20467:12;20419:62;20367:120;:::o;20493:141::-;20549:5;20580:6;20574:13;20565:22;;20596:32;20622:5;20596:32;:::i;:::-;20493:141;;;;:::o;20640:76::-;20676:7;20705:5;20694:16;;20640:76;;;:::o;20722:120::-;20794:23;20811:5;20794:23;:::i;:::-;20787:5;20784:34;20774:62;;20832:1;20829;20822:12;20774:62;20722:120;:::o;20848:141::-;20904:5;20935:6;20929:13;20920:22;;20951:32;20977:5;20951:32;:::i;:::-;20848:141;;;;:::o;20995:143::-;21052:5;21083:6;21077:13;21068:22;;21099:33;21126:5;21099:33;:::i;:::-;20995:143;;;;:::o;21144:971::-;21247:6;21255;21263;21271;21279;21328:3;21316:9;21307:7;21303:23;21299:33;21296:120;;;21335:79;;:::i;:::-;21296:120;21455:1;21480:63;21535:7;21526:6;21515:9;21511:22;21480:63;:::i;:::-;21470:73;;21426:127;21592:2;21618:63;21673:7;21664:6;21653:9;21649:22;21618:63;:::i;:::-;21608:73;;21563:128;21730:2;21756:64;21812:7;21803:6;21792:9;21788:22;21756:64;:::i;:::-;21746:74;;21701:129;21869:2;21895:64;21951:7;21942:6;21931:9;21927:22;21895:64;:::i;:::-;21885:74;;21840:129;22008:3;22035:63;22090:7;22081:6;22070:9;22066:22;22035:63;:::i;:::-;22025:73;;21979:129;21144:971;;;;;;;;:::o;22121:169::-;22205:11;22239:6;22234:3;22227:19;22279:4;22274:3;22270:14;22255:29;;22121:169;;;;:::o;22296:181::-;22436:33;22432:1;22424:6;22420:14;22413:57;22296:181;:::o;22483:366::-;22625:3;22646:67;22710:2;22705:3;22646:67;:::i;:::-;22639:74;;22722:93;22811:3;22722:93;:::i;:::-;22840:2;22835:3;22831:12;22824:19;;22483:366;;;:::o;22855:419::-;23021:4;23059:2;23048:9;23044:18;23036:26;;23108:9;23102:4;23098:20;23094:1;23083:9;23079:17;23072:47;23136:131;23262:4;23136:131;:::i;:::-;23128:139;;22855:419;;;:::o;23280:442::-;23429:4;23467:2;23456:9;23452:18;23444:26;;23480:71;23548:1;23537:9;23533:17;23524:6;23480:71;:::i;:::-;23561:72;23629:2;23618:9;23614:18;23605:6;23561:72;:::i;:::-;23643;23711:2;23700:9;23696:18;23687:6;23643:72;:::i;:::-;23280:442;;;;;;:::o;23728:332::-;23849:4;23887:2;23876:9;23872:18;23864:26;;23900:71;23968:1;23957:9;23953:17;23944:6;23900:71;:::i;:::-;23981:72;24049:2;24038:9;24034:18;24025:6;23981:72;:::i;:::-;23728:332;;;;;:::o;24066:::-;24187:4;24225:2;24214:9;24210:18;24202:26;;24238:71;24306:1;24295:9;24291:17;24282:6;24238:71;:::i;:::-;24319:72;24387:2;24376:9;24372:18;24363:6;24319:72;:::i;:::-;24066:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2317000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "353",
								"DEFAULT_ADMIN_ROLE()": "441",
								"MAX_WITHDRAW_AMOUNT()": "414",
								"NATIVE_TOKEN()": "395",
								"USD_FEED_DECIMALS()": "435",
								"convertWeiToUsd(uint256)": "infinite",
								"createAccount(string,string)": "infinite",
								"deposit()": "infinite",
								"depositToken(address,uint256)": "infinite",
								"getBalance(address,address)": "infinite",
								"getDepositCount()": "2499",
								"getEthPriceInUsd()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"getWithdrawCount()": "2543",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3167",
								"i_bankCap()": "infinite",
								"i_ethPriceFeed()": "infinite",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"setToken(address,uint8,address,bool)": "infinite",
								"supportsInterface(bytes4)": "741",
								"withdraw(uint256)": "infinite",
								"withdrawToken(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH",
									"source": 12,
									"value": "C0"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "CALLVALUE",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "CODESIZE",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "PUSHSIZE",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 4622,
									"end": 4829,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "tag",
									"source": 12,
									"value": "2"
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4690,
									"end": 4724,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 2241,
									"end": 2245,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 845,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 827,
									"end": 845,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4713,
									"end": 4723,
									"name": "CALLER",
									"source": 12
								},
								{
									"begin": 4690,
									"end": 4700,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "9"
								},
								{
									"begin": 4690,
									"end": 4700,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4690,
									"end": 4700,
									"name": "SHL",
									"source": 12
								},
								{
									"begin": 4690,
									"end": 4724,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 4690,
									"end": 4724,
									"name": "SHR",
									"source": 12
								},
								{
									"begin": 4690,
									"end": 4724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 4690,
									"end": 4724,
									"name": "tag",
									"source": 12,
									"value": "8"
								},
								{
									"begin": 4690,
									"end": 4724,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 4690,
									"end": 4724,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4773,
									"end": 4792,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4734,
									"end": 4793,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4815,
									"end": 4822,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4822,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 4803,
									"end": 4822,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4822,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4822,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4803,
									"end": 4822,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 4622,
									"end": 4829,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6232,
									"end": 6236,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 6261,
									"end": 6265,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6267,
									"end": 6274,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6260,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 6253,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6323,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6291,
									"end": 6297,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6298,
									"end": 6302,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6303,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6311,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6312,
									"end": 6319,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6320,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6291,
									"end": 6327,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6383,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 6373,
									"end": 6385,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6358,
									"end": 6362,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6346,
									"end": 6386,
									"name": "LOG4",
									"source": 1
								},
								{
									"begin": 6407,
									"end": 6411,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6400,
									"end": 6411,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6248,
									"end": 6465,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6449,
									"end": 6454,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6442,
									"end": 6454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6155,
									"end": 6471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 2911,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2936,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2937,
									"end": 2941,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2942,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2950,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2951,
									"end": 2958,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2930,
									"end": 2959,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2923,
									"end": 2959,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2830,
									"end": 2966,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 656,
									"end": 752,
									"name": "tag",
									"source": 9,
									"value": "16"
								},
								{
									"begin": 656,
									"end": 752,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 709,
									"end": 716,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 735,
									"end": 745,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 728,
									"end": 745,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 656,
									"end": 752,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 13,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "23"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 13,
									"value": "36"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 13,
									"value": "38"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 13,
									"value": "39"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 13,
									"value": "41"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "tag",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 845,
									"end": 922,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 882,
									"end": 889,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 911,
									"end": 916,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 900,
									"end": 916,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 845,
									"end": 922,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "tag",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1019,
									"end": 1024,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "27"
								},
								{
									"begin": 1001,
									"end": 1025,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "tag",
									"source": 13,
									"value": "44"
								},
								{
									"begin": 1001,
									"end": 1025,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 994,
									"end": 999,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 991,
									"end": 1026,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1040,
									"end": 1041,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1030,
									"end": 1042,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "tag",
									"source": 13,
									"value": "45"
								},
								{
									"begin": 981,
									"end": 1044,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 928,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "tag",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1113,
									"end": 1118,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1144,
									"end": 1150,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1138,
									"end": 1151,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1129,
									"end": 1151,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 1187,
									"end": 1192,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "28"
								},
								{
									"begin": 1160,
									"end": 1193,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "tag",
									"source": 13,
									"value": "47"
								},
								{
									"begin": 1160,
									"end": 1193,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1056,
									"end": 1199,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "tag",
									"source": 13,
									"value": "3"
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1284,
									"end": 1290,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1292,
									"end": 1298,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1341,
									"end": 1343,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 1329,
									"end": 1338,
									"name": "DUP4",
									"source": 13
								},
								{
									"begin": 1320,
									"end": 1327,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1316,
									"end": 1339,
									"name": "SUB",
									"source": 13
								},
								{
									"begin": 1312,
									"end": 1344,
									"name": "SLT",
									"source": 13
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "21"
								},
								{
									"begin": 1347,
									"end": 1426,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "tag",
									"source": 13,
									"value": "50"
								},
								{
									"begin": 1347,
									"end": 1426,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "tag",
									"source": 13,
									"value": "49"
								},
								{
									"begin": 1309,
									"end": 1428,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1467,
									"end": 1468,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1548,
									"end": 1555,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1539,
									"end": 1545,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1528,
									"end": 1537,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1524,
									"end": 1546,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "26"
								},
								{
									"begin": 1492,
									"end": 1556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "tag",
									"source": 13,
									"value": "51"
								},
								{
									"begin": 1492,
									"end": 1556,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1482,
									"end": 1556,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1438,
									"end": 1566,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1605,
									"end": 1607,
									"name": "PUSH",
									"source": 13,
									"value": "20"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 1687,
									"end": 1694,
									"name": "DUP6",
									"source": 13
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 1667,
									"end": 1676,
									"name": "DUP7",
									"source": 13
								},
								{
									"begin": 1663,
									"end": 1685,
									"name": "ADD",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "29"
								},
								{
									"begin": 1631,
									"end": 1695,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "tag",
									"source": 13,
									"value": "52"
								},
								{
									"begin": 1631,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "SWAP2",
									"source": 13
								},
								{
									"begin": 1621,
									"end": 1695,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1576,
									"end": 1705,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP3",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1712,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 1205,
									"end": 1712,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 13
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "tag",
									"source": 12,
									"value": "10"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH",
									"source": 12,
									"value": "A0"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1247"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "ASSIGNIMMUTABLE",
									"source": 12,
									"value": "1244"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 549,
									"end": 10446,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207b3e87135a3e30972853d6754fd3a8c03c08a44bf44d0342aff4351a242df3b764736f6c634300081a0033",
									".code": [
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "SHR",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "75B238FC"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "D0E30DB0"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "D0E30DB0"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "D4FAC45D"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "D547741F"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "22"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "D67B98A9"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "D7128C58"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "F6687AF7"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "75B238FC"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "91D14854"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "15"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "9363A141"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "9E281A98"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "A217FDDF"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "18"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "B60FC72E"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "tag",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "31F7D964"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "31F7D964"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "338B5DEA"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "36568ABE"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "44BA0EA2"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "47D04C71"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "4914E2CE"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "1FFC9A7"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "19289287"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "248A9CA3"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "27281025"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "2E1A7D4D"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "2F2FF15D"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "tag",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 549,
											"end": 10446,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "tag",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 5773,
											"end": 6422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 5773,
											"end": 6422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "tag",
											"source": 12,
											"value": "36"
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "tag",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "tag",
											"source": 12,
											"value": "47"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 9934,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "tag",
											"source": 12,
											"value": "49"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 9934,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 9934,
											"end": 10103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "tag",
											"source": 12,
											"value": "52"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "tag",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "50"
										},
										{
											"begin": 7741,
											"end": 8442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "tag",
											"source": 12,
											"value": "56"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 7741,
											"end": 8442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "tag",
											"source": 12,
											"value": "55"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 1969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "tag",
											"source": 12,
											"value": "9"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "tag",
											"source": 12,
											"value": "68"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 6989,
											"end": 7522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "tag",
											"source": 12,
											"value": "70"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 6989,
											"end": 7522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "tag",
											"source": 12,
											"value": "69"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "tag",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "tag",
											"source": 12,
											"value": "77"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1831,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1831,
											"end": 1886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "tag",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "tag",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "tag",
											"source": 12,
											"value": "81"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 10344,
											"end": 10444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 10344,
											"end": 10444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "tag",
											"source": 12,
											"value": "84"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "tag",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "tag",
											"source": 12,
											"value": "85"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "88"
										},
										{
											"begin": 5046,
											"end": 5463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5046,
											"end": 5463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 790,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "91"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "46"
										},
										{
											"begin": 790,
											"end": 845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "93"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "tag",
											"source": 12,
											"value": "16"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "tag",
											"source": 12,
											"value": "99"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 10176,
											"end": 10274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 10176,
											"end": 10274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "tag",
											"source": 12,
											"value": "102"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "tag",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 8504,
											"end": 9230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "tag",
											"source": 12,
											"value": "105"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 8504,
											"end": 9230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "tag",
											"source": 12,
											"value": "104"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "tag",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "tag",
											"source": 12,
											"value": "111"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 2086,
											"end": 2139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "tag",
											"source": 12,
											"value": "112"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "115"
										},
										{
											"begin": 2086,
											"end": 2139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "tag",
											"source": 12,
											"value": "114"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "tag",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 6483,
											"end": 6934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "tag",
											"source": 12,
											"value": "116"
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "STOP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "tag",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "tag",
											"source": 12,
											"value": "118"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "CALLDATASIZE",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "121"
										},
										{
											"begin": 9459,
											"end": 9652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "tag",
											"source": 12,
											"value": "120"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 9459,
											"end": 9652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "tag",
											"source": 12,
											"value": "119"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 9459,
											"end": 9652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "tag",
											"source": 12,
											"value": "123"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "tag",
											"source": 12,
											"value": "23"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "tag",
											"source": 12,
											"value": "128"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 9714,
											"end": 9873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "tag",
											"source": 12,
											"value": "129"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 9714,
											"end": 9873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "tag",
											"source": 12,
											"value": "131"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "tag",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1740,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "tag",
											"source": 12,
											"value": "133"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1740,
											"end": 1787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "tag",
											"source": 12,
											"value": "135"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "tag",
											"source": 12,
											"value": "136"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 1998,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "tag",
											"source": 12,
											"value": "137"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 1998,
											"end": 2032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "RETURN",
											"source": 12
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2664,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2660,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2696,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2724,
											"end": 2735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2700,
											"end": 2736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 2700,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2649,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2642,
											"end": 2736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2541,
											"end": 2743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "tag",
											"source": 12,
											"value": "39"
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5876,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5877,
											"end": 5887,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5888,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5868,
											"end": 5895,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5931,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5931,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 5864,
											"end": 5931,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "PUSH",
											"source": 12,
											"value": "7845597700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5904,
											"end": 5931,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5864,
											"end": 5931,
											"name": "tag",
											"source": 12,
											"value": "145"
										},
										{
											"begin": 5864,
											"end": 5931,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5978,
											"end": 5987,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1244"
										},
										{
											"begin": 5966,
											"end": 5975,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 5945,
											"end": 5963,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 5945,
											"end": 5975,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5975,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5975,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 5945,
											"end": 5975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5975,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 5945,
											"end": 5975,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5945,
											"end": 5987,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 6016,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 5941,
											"end": 6016,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "PUSH",
											"source": 12,
											"value": "97651D1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5996,
											"end": 6016,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 5941,
											"end": 6016,
											"name": "tag",
											"source": 12,
											"value": "148"
										},
										{
											"begin": 5941,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6081,
											"end": 6082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6103,
											"end": 6108,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6154,
											"end": 6158,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6050,
											"end": 6169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6035,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6036,
											"end": 6046,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6047,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 6027,
											"end": 6169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 6027,
											"end": 6169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6027,
											"end": 6169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6196,
											"end": 6197,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6184,
											"end": 6193,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6184,
											"end": 6197,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6180,
											"end": 6416,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6180,
											"end": 6416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 6180,
											"end": 6416,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6251,
											"end": 6260,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6221,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6222,
											"end": 6232,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6233,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6247,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6213,
											"end": 6260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "tag",
											"source": 12,
											"value": "153"
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6213,
											"end": 6260,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6296,
											"end": 6305,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6274,
											"end": 6292,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6274,
											"end": 6305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "tag",
											"source": 12,
											"value": "154"
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6274,
											"end": 6305,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6335,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 6319,
											"end": 6335,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 6319,
											"end": 6337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "tag",
											"source": 12,
											"value": "155"
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6319,
											"end": 6337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6369,
											"end": 6379,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "PUSH",
											"source": 12,
											"value": "1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008"
										},
										{
											"begin": 6395,
											"end": 6404,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6356,
											"end": 6405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6356,
											"end": 6405,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 6180,
											"end": 6416,
											"name": "tag",
											"source": 12,
											"value": "152"
										},
										{
											"begin": 6180,
											"end": 6416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5773,
											"end": 6422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3888,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3877,
											"end": 3889,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3877,
											"end": 3899,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3786,
											"end": 3906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10000,
											"end": 10007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10019,
											"end": 10032,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 10035,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 10035,
											"end": 10053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "tag",
											"source": 12,
											"value": "160"
										},
										{
											"begin": 10035,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10019,
											"end": 10053,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10019,
											"end": 10053,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10092,
											"end": 10096,
											"name": "PUSH",
											"source": 12,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 10083,
											"end": 10088,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10080,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "162"
										},
										{
											"begin": 10071,
											"end": 10088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 10071,
											"end": 10088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "164"
										},
										{
											"begin": 10070,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10063,
											"end": 10096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9934,
											"end": 10103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7812,
											"end": 7820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7821,
											"end": 7831,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7832,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7812,
											"end": 7839,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7807,
											"end": 7871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 7807,
											"end": 7871,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "566B044000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7848,
											"end": 7871,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7807,
											"end": 7871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 7807,
											"end": 7871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "16345785D8A0000"
										},
										{
											"begin": 7885,
											"end": 7891,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7885,
											"end": 7913,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7881,
											"end": 7976,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7881,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 7881,
											"end": 7976,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "16345785D8A0000"
										},
										{
											"begin": 7969,
											"end": 7975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D859CBBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 7922,
											"end": 7976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "171"
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7922,
											"end": 7976,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7881,
											"end": 7976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 7881,
											"end": 7976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7986,
											"end": 8005,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8016,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8017,
											"end": 8027,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8028,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8008,
											"end": 8042,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7986,
											"end": 8042,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7986,
											"end": 8042,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8070,
											"end": 8076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8056,
											"end": 8067,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8056,
											"end": 8076,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8052,
											"end": 8128,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8052,
											"end": 8128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 8052,
											"end": 8128,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8108,
											"end": 8119,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8121,
											"end": 8127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70E6417B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 8085,
											"end": 8128,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "174"
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8128,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8052,
											"end": 8128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "173"
										},
										{
											"begin": 8052,
											"end": 8128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8177,
											"end": 8183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8148,
											"end": 8158,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8159,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8139,
											"end": 8183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "175"
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8139,
											"end": 8183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8215,
											"end": 8221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 8193,
											"end": 8211,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 8193,
											"end": 8221,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "177"
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8193,
											"end": 8221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 8231,
											"end": 8248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 8231,
											"end": 8250,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "178"
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 8231,
											"end": 8250,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8262,
											"end": 8274,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8287,
											"end": 8297,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8279,
											"end": 8303,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8311,
											"end": 8317,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "180"
										},
										{
											"begin": 8279,
											"end": 8322,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "179"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3F"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "183"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "182"
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8279,
											"end": 8322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8322,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8261,
											"end": 8322,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8337,
											"end": 8344,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8332,
											"end": 8373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 8332,
											"end": 8373,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "BD6BFD0A00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8353,
											"end": 8373,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8332,
											"end": 8373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "184"
										},
										{
											"begin": 8332,
											"end": 8373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 1968,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8412,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C8B1E2A9BE32CE8C5FE81B6681739E4A0016BF546706482B49989431FE3D55EE"
										},
										{
											"begin": 8428,
											"end": 8434,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 8388,
											"end": 8435,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8435,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 7797,
											"end": 8442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7797,
											"end": 8442,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "186"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7741,
											"end": 8442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7741,
											"end": 8442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4289,
											"end": 4293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4276,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4317,
											"end": 4321,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4330,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 4306,
											"end": 4331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4202,
											"end": 4338,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1920,
											"end": 1969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "tag",
											"source": 12,
											"value": "72"
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7074,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7075,
											"end": 7085,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7066,
											"end": 7086,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7066,
											"end": 7093,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7061,
											"end": 7125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 7061,
											"end": 7125,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "PUSH",
											"source": 12,
											"value": "566B044000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7102,
											"end": 7125,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7061,
											"end": 7125,
											"name": "tag",
											"source": 12,
											"value": "196"
										},
										{
											"begin": 7061,
											"end": 7125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7154,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7169,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7170,
											"end": 7175,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7157,
											"end": 7176,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 7135,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "tag",
											"source": 12,
											"value": "198"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "tag",
											"source": 12,
											"value": "197"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 7135,
											"end": 7176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "tag",
											"source": 12,
											"value": "200"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7135,
											"end": 7176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7202,
											"end": 7222,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 7190,
											"end": 7222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "203"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "202"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7192,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7190,
											"end": 7198,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7198,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 7190,
											"end": 7222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "tag",
											"source": 12,
											"value": "204"
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7190,
											"end": 7222,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7186,
											"end": 7255,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 7186,
											"end": 7255,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "PUSH",
											"source": 12,
											"value": "5694952100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7231,
											"end": 7255,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7186,
											"end": 7255,
											"name": "tag",
											"source": 12,
											"value": "206"
										},
										{
											"begin": 7186,
											"end": 7255,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7279,
											"end": 7280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7269,
											"end": 7275,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7269,
											"end": 7280,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7265,
											"end": 7310,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 7265,
											"end": 7310,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "PUSH",
											"source": 12,
											"value": "7803844200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7289,
											"end": 7310,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7265,
											"end": 7310,
											"name": "tag",
											"source": 12,
											"value": "207"
										},
										{
											"begin": 7265,
											"end": 7310,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7352,
											"end": 7358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7329,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7330,
											"end": 7340,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7341,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7347,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 7321,
											"end": 7358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7321,
											"end": 7358,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7384,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 7368,
											"end": 7384,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 7368,
											"end": 7386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 7368,
											"end": 7386,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7447,
											"end": 7451,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 7454,
											"end": 7460,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7403,
											"end": 7408,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 7396,
											"end": 7426,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "tag",
											"source": 12,
											"value": "210"
										},
										{
											"begin": 7396,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7501,
											"end": 7506,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7489,
											"end": 7499,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "PUSH",
											"source": 12,
											"value": "1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008"
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 7476,
											"end": 7515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "tag",
											"source": 12,
											"value": "212"
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7476,
											"end": 7515,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 7051,
											"end": 7522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6989,
											"end": 7522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5419,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 5419,
											"end": 5431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 5419,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5415,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5431,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "6697B23200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5454,
											"end": 5484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5393,
											"end": 5495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5517,
											"end": 5521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5523,
											"end": 5541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5505,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5505,
											"end": 5542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1886,
											"name": "PUSH",
											"source": 12,
											"value": "16345785D8A0000"
										},
										{
											"begin": 1831,
											"end": 1886,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1831,
											"end": 1886,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "tag",
											"source": 12,
											"value": "83"
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10413,
											"end": 10437,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10413,
											"end": 10437,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10344,
											"end": 10444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "tag",
											"source": 12,
											"value": "89"
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 845,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 845,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5261,
											"end": 5270,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5261,
											"end": 5318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 5261,
											"end": 5318,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5296,
											"end": 5318,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5261,
											"end": 5318,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5261,
											"end": 5318,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5261,
											"end": 5318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 5261,
											"end": 5318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5273,
											"end": 5293,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5261,
											"end": 5318,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "224"
										},
										{
											"begin": 5261,
											"end": 5318,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 5230,
											"end": 5395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5342,
											"end": 5350,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5375,
											"end": 5384,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5230,
											"end": 5395,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5221,
											"end": 5226,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5227,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 5208,
											"end": 5395,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "228"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "227"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5208,
											"end": 5395,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5423,
											"end": 5428,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "243C26E9467B186D248BF33B7722DE99A559ACEDA24C02928C2636071BE4D992"
										},
										{
											"begin": 5430,
											"end": 5442,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5448,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5449,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 5430,
											"end": 5455,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "230"
										},
										{
											"begin": 5410,
											"end": 5456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "229"
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5410,
											"end": 5456,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5046,
											"end": 5463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "tag",
											"source": 12,
											"value": "92"
										},
										{
											"begin": 790,
											"end": 845,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 845,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 845,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 790,
											"end": 845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2936,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2941,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2958,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 2930,
											"end": 2959,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2923,
											"end": 2959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10225,
											"end": 10232,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10251,
											"end": 10267,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 10251,
											"end": 10267,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 10244,
											"end": 10267,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10244,
											"end": 10267,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10176,
											"end": 10274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "tag",
											"source": 12,
											"value": "106"
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8595,
											"end": 8603,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8604,
											"end": 8614,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8615,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8595,
											"end": 8622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8590,
											"end": 8654,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 8590,
											"end": 8654,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "566B044000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8631,
											"end": 8654,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8590,
											"end": 8654,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "236"
										},
										{
											"begin": 8590,
											"end": 8654,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8683,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8699,
											"end": 8704,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8686,
											"end": 8705,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 8664,
											"end": 8705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 8664,
											"end": 8705,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "240"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "239"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8664,
											"end": 8705,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8731,
											"end": 8751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8719,
											"end": 8751,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 8719,
											"end": 8751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "242"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8721,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8727,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8719,
											"end": 8727,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8727,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 8719,
											"end": 8751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "244"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8719,
											"end": 8751,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8784,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 8715,
											"end": 8784,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "5694952100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8784,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8715,
											"end": 8784,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 8715,
											"end": 8784,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "16345785D8A0000"
										},
										{
											"begin": 8798,
											"end": 8804,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8798,
											"end": 8826,
											"modifierDepth": 1,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8889,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 8794,
											"end": 8889,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1877,
											"end": 1886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "16345785D8A0000"
										},
										{
											"begin": 8882,
											"end": 8888,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "D859CBBA00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 8835,
											"end": 8889,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8835,
											"end": 8889,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8794,
											"end": 8889,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 8794,
											"end": 8889,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8919,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8930,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8931,
											"end": 8941,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8942,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8948,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 8922,
											"end": 8949,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8949,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8900,
											"end": 8949,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8977,
											"end": 8983,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8963,
											"end": 8974,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8963,
											"end": 8983,
											"modifierDepth": 1,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 9035,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 8959,
											"end": 9035,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9015,
											"end": 9026,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9028,
											"end": 9034,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "70E6417B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 8992,
											"end": 9035,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8992,
											"end": 9035,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 8959,
											"end": 9035,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 8959,
											"end": 9035,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9077,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9055,
											"end": 9065,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9066,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9067,
											"end": 9072,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 9046,
											"end": 9083,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9046,
											"end": 9083,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "6"
										},
										{
											"begin": 9093,
											"end": 9110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 9093,
											"end": 9112,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 9093,
											"end": 9112,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 9149,
											"end": 9159,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9161,
											"end": 9167,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9129,
											"end": 9134,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9122,
											"end": 9148,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9148,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 9122,
											"end": 9148,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9168,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9122,
											"end": 9168,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9168,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9122,
											"end": 9168,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 9122,
											"end": 9168,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9209,
											"end": 9214,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9197,
											"end": 9207,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "C8B1E2A9BE32CE8C5FE81B6681739E4A0016BF546706482B49989431FE3D55EE"
										},
										{
											"begin": 9216,
											"end": 9222,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 9183,
											"end": 9223,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9183,
											"end": 9223,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 8580,
											"end": 9230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8580,
											"end": 9230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "255"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8504,
											"end": 9230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2245,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "tag",
											"source": 12,
											"value": "113"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1247"
										},
										{
											"begin": 2086,
											"end": 2139,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2086,
											"end": 2139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "tag",
											"source": 12,
											"value": "117"
										},
										{
											"begin": 6483,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6542,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6543,
											"end": 6553,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6554,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6534,
											"end": 6561,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "PUSH",
											"source": 12,
											"value": "566B044000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6570,
											"end": 6593,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 6529,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6620,
											"end": 6621,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6607,
											"end": 6616,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6607,
											"end": 6621,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6603,
											"end": 6651,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "PUSH",
											"source": 12,
											"value": "7803844200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6651,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6603,
											"end": 6651,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 6603,
											"end": 6651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6698,
											"end": 6707,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1244"
										},
										{
											"begin": 6686,
											"end": 6695,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6683,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6665,
											"end": 6683,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 6665,
											"end": 6695,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6695,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6665,
											"end": 6695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6695,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 6665,
											"end": 6695,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6665,
											"end": 6707,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6736,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 6661,
											"end": 6736,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "PUSH",
											"source": 12,
											"value": "97651D1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6716,
											"end": 6736,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6661,
											"end": 6736,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 6661,
											"end": 6736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6785,
											"end": 6794,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6755,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6766,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6747,
											"end": 6767,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6781,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6747,
											"end": 6794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6747,
											"end": 6794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6826,
											"end": 6835,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6822,
											"name": "PUSH",
											"source": 12,
											"value": "7"
										},
										{
											"begin": 6804,
											"end": 6822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "147"
										},
										{
											"begin": 6804,
											"end": 6835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6804,
											"end": 6835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6861,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 6845,
											"end": 6861,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "156"
										},
										{
											"begin": 6845,
											"end": 6863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 6845,
											"end": 6863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1967,
											"end": 1968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6891,
											"end": 6901,
											"name": "CALLER",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "PUSH",
											"source": 12,
											"value": "1ECE9C685AC991A7352754DE4BB96F7D41FDBC35B4BC423326539149879C008"
										},
										{
											"begin": 6917,
											"end": 6926,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 6878,
											"end": 6927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6878,
											"end": 6927,
											"name": "LOG3",
											"source": 12
										},
										{
											"begin": 6483,
											"end": 6934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9530,
											"end": 9537,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 9562,
											"name": "PUSH",
											"source": 12,
											"value": "2"
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9563,
											"end": 9567,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 9568,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "PUSH",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "EXP",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 9554,
											"end": 9575,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 9549,
											"end": 9607,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "PUSH",
											"source": 12,
											"value": "566B044000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9584,
											"end": 9607,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9549,
											"end": 9607,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 9549,
											"end": 9607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9632,
											"name": "PUSH",
											"source": 12,
											"value": "3"
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9633,
											"end": 9637,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9638,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9639,
											"end": 9644,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "KECCAK256",
											"source": 12
										},
										{
											"begin": 9624,
											"end": 9645,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9617,
											"end": 9645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9459,
											"end": 9652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4706,
											"end": 4710,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4693,
											"end": 4711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2484,
											"end": 2488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2473,
											"end": 2489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 2473,
											"end": 2489,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4735,
											"end": 4739,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4741,
											"end": 4748,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4723,
											"end": 4749,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4749,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4618,
											"end": 4756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "tag",
											"source": 12,
											"value": "130"
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9762,
											"end": 9769,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9784,
											"end": 9796,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9817,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1247"
										},
										{
											"begin": 9803,
											"end": 9833,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9803,
											"end": 9833,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9833,
											"name": "PUSH",
											"source": 12,
											"value": "FEAF968C"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "GAS",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "STATICCALL",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "RETURNDATACOPY",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "RETURNDATASIZE",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 9803,
											"end": 9835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 9803,
											"end": 9835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9781,
											"end": 9835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9860,
											"end": 9865,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9866,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9845,
											"end": 9866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9714,
											"end": 9873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "tag",
											"source": 12,
											"value": "134"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1784,
											"end": 1787,
											"name": "PUSH",
											"source": 12,
											"value": "5F5E100"
										},
										{
											"begin": 1740,
											"end": 1787,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1740,
											"end": 1787,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "tag",
											"source": 12,
											"value": "138"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "PUSHIMMUTABLE",
											"source": 12,
											"value": "1244"
										},
										{
											"begin": 1998,
											"end": 2032,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1998,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 730,
											"end": 876,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 730,
											"end": 876,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 806,
											"end": 810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 844,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 829,
											"end": 869,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 829,
											"end": 869,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 822,
											"end": 869,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 730,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "187"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3252,
											"end": 3256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3258,
											"end": 3268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3258,
											"end": 3270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 3258,
											"end": 3270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3251,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3241,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 3241,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 6261,
											"end": 6265,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6267,
											"end": 6274,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6253,
											"end": 6275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 6253,
											"end": 6275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6323,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6291,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6303,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6319,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6291,
											"end": 6327,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6373,
											"end": 6383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6373,
											"end": 6385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 6373,
											"end": 6385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6358,
											"end": 6362,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6346,
											"end": 6386,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6407,
											"end": 6411,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6400,
											"end": 6411,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 6248,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6449,
											"end": 6454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6442,
											"end": 6454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6155,
											"end": 6471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6814,
											"end": 6818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6827,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 6806,
											"end": 6828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 6806,
											"end": 6828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6856,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6865,
											"end": 6872,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6873,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6881,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6927,
											"end": 6937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 6927,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6927,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6912,
											"end": 6916,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6900,
											"end": 6940,
											"name": "LOG4",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6965,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6954,
											"end": 6965,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6802,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7003,
											"end": 7008,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6708,
											"end": 7025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 3496,
											"end": 3518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "E2517D3F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3541,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3588,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 3491,
											"end": 3599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 8,
											"value": "313"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 8,
											"value": "314"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "67"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 8,
											"value": "316"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 13,
											"value": "401"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 13,
											"value": "402"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 13,
											"value": "406"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "323"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 13,
											"value": "408"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 13,
											"value": "411"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "325"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 13,
											"value": "413"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "tag",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 1518,
											"end": 1635,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1627,
											"end": 1628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1624,
											"end": 1625,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1617,
											"end": 1629,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1641,
											"end": 1758,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 1641,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1740,
											"end": 1752,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1866,
											"name": "tag",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 1764,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1805,
											"end": 1811,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1856,
											"end": 1858,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1852,
											"end": 1859,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 1847,
											"end": 1849,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1840,
											"end": 1845,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1836,
											"end": 1850,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1832,
											"end": 1860,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1822,
											"end": 1860,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1822,
											"end": 1860,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1866,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1866,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1866,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1764,
											"end": 1866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1872,
											"end": 2052,
											"name": "tag",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 1872,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1920,
											"end": 1997,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1917,
											"end": 1918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1998,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2017,
											"end": 2021,
											"name": "PUSH",
											"source": 13,
											"value": "41"
										},
										{
											"begin": 2014,
											"end": 2015,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2007,
											"end": 2022,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2041,
											"end": 2045,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 2038,
											"end": 2039,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2046,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2339,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 2058,
											"end": 2339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2163,
											"end": 2167,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2168,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 2141,
											"end": 2168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2141,
											"end": 2168,
											"name": "tag",
											"source": 13,
											"value": "419"
										},
										{
											"begin": 2141,
											"end": 2168,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2129,
											"end": 2169,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2259,
											"end": 2269,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2256,
											"end": 2278,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 2235,
											"end": 2253,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2223,
											"end": 2233,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2254,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2217,
											"end": 2279,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2302,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2214,
											"end": 2302,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 2282,
											"end": 2300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "tag",
											"source": 13,
											"value": "421"
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2214,
											"end": 2302,
											"name": "tag",
											"source": 13,
											"value": "420"
										},
										{
											"begin": 2214,
											"end": 2302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2322,
											"end": 2332,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2318,
											"end": 2320,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2333,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2101,
											"end": 2339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2058,
											"end": 2339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2345,
											"end": 2474,
											"name": "tag",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 2345,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2406,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 2406,
											"end": 2426,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 2406,
											"end": 2426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2406,
											"end": 2426,
											"name": "tag",
											"source": 13,
											"value": "423"
										},
										{
											"begin": 2406,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2396,
											"end": 2426,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2396,
											"end": 2426,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2435,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 2463,
											"end": 2467,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2455,
											"end": 2461,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2435,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 2435,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2435,
											"end": 2468,
											"name": "tag",
											"source": 13,
											"value": "424"
										},
										{
											"begin": 2435,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2345,
											"end": 2474,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2345,
											"end": 2474,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2345,
											"end": 2474,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2345,
											"end": 2474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2788,
											"name": "tag",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 2480,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2542,
											"end": 2546,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2632,
											"end": 2650,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2624,
											"end": 2630,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2621,
											"end": 2651,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2674,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2674,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 2618,
											"end": 2674,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 2654,
											"end": 2672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "tag",
											"source": 13,
											"value": "427"
										},
										{
											"begin": 2654,
											"end": 2672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2618,
											"end": 2674,
											"name": "tag",
											"source": 13,
											"value": "426"
										},
										{
											"begin": 2618,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 2714,
											"end": 2720,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "328"
										},
										{
											"begin": 2692,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "tag",
											"source": 13,
											"value": "428"
										},
										{
											"begin": 2692,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2721,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2684,
											"end": 2721,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2776,
											"end": 2780,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2770,
											"end": 2774,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2766,
											"end": 2781,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2758,
											"end": 2781,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2758,
											"end": 2781,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2788,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2788,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2788,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2480,
											"end": 2788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2942,
											"name": "tag",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 2794,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2892,
											"end": 2898,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2887,
											"end": 2890,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2882,
											"end": 2885,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2869,
											"end": 2899,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2934,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2930,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2919,
											"end": 2922,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2908,
											"end": 2935,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2794,
											"end": 2942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3373,
											"name": "tag",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 2948,
											"end": 3373,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3067,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3109,
											"end": 3115,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "332"
										},
										{
											"begin": 3067,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3067,
											"end": 3116,
											"name": "tag",
											"source": 13,
											"value": "432"
										},
										{
											"begin": 3067,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3051,
											"end": 3117,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 3051,
											"end": 3117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3051,
											"end": 3117,
											"name": "tag",
											"source": 13,
											"value": "431"
										},
										{
											"begin": 3051,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3042,
											"end": 3117,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3042,
											"end": 3117,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3140,
											"end": 3146,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3133,
											"end": 3138,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3126,
											"end": 3147,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3178,
											"end": 3182,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3176,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3167,
											"end": 3183,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3207,
											"end": 3213,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3202,
											"end": 3205,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3198,
											"end": 3214,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3220,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3304,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 3192,
											"end": 3304,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 13,
											"value": "434"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3192,
											"end": 3304,
											"name": "tag",
											"source": 13,
											"value": "433"
										},
										{
											"begin": 3192,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 3360,
											"end": 3366,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3355,
											"end": 3358,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3350,
											"end": 3353,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "333"
										},
										{
											"begin": 3313,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3313,
											"end": 3367,
											"name": "tag",
											"source": 13,
											"value": "435"
										},
										{
											"begin": 3313,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3032,
											"end": 3373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3373,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3373,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3373,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2948,
											"end": 3373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3733,
											"name": "tag",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 3393,
											"end": 3733,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3449,
											"end": 3454,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3498,
											"end": 3501,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3491,
											"end": 3495,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 3483,
											"end": 3489,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3479,
											"end": 3496,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3475,
											"end": 3502,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "326"
										},
										{
											"begin": 3506,
											"end": 3585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "tag",
											"source": 13,
											"value": "438"
										},
										{
											"begin": 3506,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "tag",
											"source": 13,
											"value": "437"
										},
										{
											"begin": 3465,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 3629,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3610,
											"end": 3630,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 3723,
											"end": 3726,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3715,
											"end": 3721,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3708,
											"end": 3712,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3713,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "334"
										},
										{
											"begin": 3648,
											"end": 3727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "tag",
											"source": 13,
											"value": "439"
										},
										{
											"begin": 3648,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3639,
											"end": 3727,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3639,
											"end": 3727,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3455,
											"end": 3733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3733,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3733,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3733,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3393,
											"end": 3733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 4573,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 3739,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3855,
											"end": 3887,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 3890,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "tag",
											"source": 13,
											"value": "442"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "tag",
											"source": 13,
											"value": "441"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4038,
											"end": 4039,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4036,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4023,
											"end": 4040,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4010,
											"end": 4041,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4068,
											"end": 4086,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4060,
											"end": 4066,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4057,
											"end": 4087,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4171,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 4054,
											"end": 4171,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4090,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 4090,
											"end": 4169,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 4090,
											"end": 4169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4090,
											"end": 4169,
											"name": "tag",
											"source": 13,
											"value": "444"
										},
										{
											"begin": 4090,
											"end": 4169,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4054,
											"end": 4171,
											"name": "tag",
											"source": 13,
											"value": "443"
										},
										{
											"begin": 4054,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 4250,
											"end": 4257,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4241,
											"end": 4247,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4230,
											"end": 4239,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4226,
											"end": 4248,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4195,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4258,
											"name": "tag",
											"source": 13,
											"value": "445"
										},
										{
											"begin": 4195,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4185,
											"end": 4258,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4185,
											"end": 4258,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3981,
											"end": 4268,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4335,
											"end": 4337,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4324,
											"end": 4333,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4320,
											"end": 4338,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4307,
											"end": 4339,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4366,
											"end": 4384,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4358,
											"end": 4364,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4355,
											"end": 4385,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 4352,
											"end": 4469,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4352,
											"end": 4469,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 4352,
											"end": 4469,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4388,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 4388,
											"end": 4467,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 4388,
											"end": 4467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4388,
											"end": 4467,
											"name": "tag",
											"source": 13,
											"value": "447"
										},
										{
											"begin": 4388,
											"end": 4467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4352,
											"end": 4469,
											"name": "tag",
											"source": 13,
											"value": "446"
										},
										{
											"begin": 4352,
											"end": 4469,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 4548,
											"end": 4555,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4539,
											"end": 4545,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4528,
											"end": 4537,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4524,
											"end": 4546,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4556,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "335"
										},
										{
											"begin": 4493,
											"end": 4556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4493,
											"end": 4556,
											"name": "tag",
											"source": 13,
											"value": "448"
										},
										{
											"begin": 4493,
											"end": 4556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4556,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4483,
											"end": 4556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4278,
											"end": 4566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 4573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 4573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 4573,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 4573,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 4573,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3739,
											"end": 4573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4656,
											"name": "tag",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 4579,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4616,
											"end": 4623,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4645,
											"end": 4650,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4634,
											"end": 4650,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4634,
											"end": 4650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4656,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4656,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4656,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4579,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4784,
											"name": "tag",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 4662,
											"end": 4784,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 4753,
											"end": 4758,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4759,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 4735,
											"end": 4759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4735,
											"end": 4759,
											"name": "tag",
											"source": 13,
											"value": "451"
										},
										{
											"begin": 4735,
											"end": 4759,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4728,
											"end": 4733,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4725,
											"end": 4760,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4715,
											"end": 4778,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4715,
											"end": 4778,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4774,
											"end": 4775,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4772,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4764,
											"end": 4776,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4715,
											"end": 4778,
											"name": "tag",
											"source": 13,
											"value": "452"
										},
										{
											"begin": 4715,
											"end": 4778,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4784,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4662,
											"end": 4784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4929,
											"name": "tag",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 4790,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4836,
											"end": 4841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4874,
											"end": 4880,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4861,
											"end": 4881,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 4852,
											"end": 4881,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4852,
											"end": 4881,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 4917,
											"end": 4922,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "337"
										},
										{
											"begin": 4890,
											"end": 4923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4890,
											"end": 4923,
											"name": "tag",
											"source": 13,
											"value": "454"
										},
										{
											"begin": 4890,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4929,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4929,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4929,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4790,
											"end": 4929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5264,
											"name": "tag",
											"source": 13,
											"value": "43"
										},
										{
											"begin": 4935,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4994,
											"end": 5000,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5043,
											"end": 5045,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5031,
											"end": 5040,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5022,
											"end": 5029,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5018,
											"end": 5041,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5014,
											"end": 5046,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 5011,
											"end": 5130,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5011,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5011,
											"end": 5130,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5049,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 5049,
											"end": 5128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5049,
											"end": 5128,
											"name": "tag",
											"source": 13,
											"value": "457"
										},
										{
											"begin": 5049,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5011,
											"end": 5130,
											"name": "tag",
											"source": 13,
											"value": "456"
										},
										{
											"begin": 5011,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5169,
											"end": 5170,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 5239,
											"end": 5246,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5230,
											"end": 5236,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5219,
											"end": 5228,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5215,
											"end": 5237,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5247,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 5194,
											"end": 5247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5194,
											"end": 5247,
											"name": "tag",
											"source": 13,
											"value": "458"
										},
										{
											"begin": 5194,
											"end": 5247,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5184,
											"end": 5247,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5140,
											"end": 5257,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5264,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5264,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5264,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4935,
											"end": 5264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5388,
											"name": "tag",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 5270,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 5375,
											"end": 5380,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "336"
										},
										{
											"begin": 5357,
											"end": 5381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "tag",
											"source": 13,
											"value": "460"
										},
										{
											"begin": 5357,
											"end": 5381,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5352,
											"end": 5355,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5345,
											"end": 5382,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5388,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5270,
											"end": 5388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5487,
											"end": 5491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5525,
											"end": 5527,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5514,
											"end": 5523,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5510,
											"end": 5528,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5528,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5502,
											"end": 5528,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5595,
											"end": 5604,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5591,
											"end": 5608,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5582,
											"end": 5588,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 5538,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "tag",
											"source": 13,
											"value": "462"
										},
										{
											"begin": 5538,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5616,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5394,
											"end": 5616,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5622,
											"end": 5699,
											"name": "tag",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 5622,
											"end": 5699,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5659,
											"end": 5666,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5688,
											"end": 5693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5677,
											"end": 5693,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5677,
											"end": 5693,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5622,
											"end": 5699,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5622,
											"end": 5699,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5622,
											"end": 5699,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5622,
											"end": 5699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5705,
											"end": 5827,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 5705,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 5796,
											"end": 5801,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 5778,
											"end": 5802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5778,
											"end": 5802,
											"name": "tag",
											"source": 13,
											"value": "465"
										},
										{
											"begin": 5778,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5771,
											"end": 5776,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5768,
											"end": 5803,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 5758,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 5758,
											"end": 5821,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5817,
											"end": 5818,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5815,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5807,
											"end": 5819,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5758,
											"end": 5821,
											"name": "tag",
											"source": 13,
											"value": "466"
										},
										{
											"begin": 5758,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5705,
											"end": 5827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5705,
											"end": 5827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5972,
											"name": "tag",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 5833,
											"end": 5972,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5879,
											"end": 5884,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5904,
											"end": 5924,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5924,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5895,
											"end": 5924,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 5960,
											"end": 5965,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 5933,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5933,
											"end": 5966,
											"name": "tag",
											"source": 13,
											"value": "468"
										},
										{
											"begin": 5933,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5972,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5972,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5972,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5833,
											"end": 5972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6307,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 5978,
											"end": 6307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6037,
											"end": 6043,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6086,
											"end": 6088,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6065,
											"end": 6072,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6061,
											"end": 6084,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6057,
											"end": 6089,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6173,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6173,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 6054,
											"end": 6173,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 6092,
											"end": 6171,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 6092,
											"end": 6171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6092,
											"end": 6171,
											"name": "tag",
											"source": 13,
											"value": "471"
										},
										{
											"begin": 6092,
											"end": 6171,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6054,
											"end": 6173,
											"name": "tag",
											"source": 13,
											"value": "470"
										},
										{
											"begin": 6054,
											"end": 6173,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6212,
											"end": 6213,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6237,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 6282,
											"end": 6289,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6273,
											"end": 6279,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6262,
											"end": 6271,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 6258,
											"end": 6280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6290,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 6237,
											"end": 6290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6237,
											"end": 6290,
											"name": "tag",
											"source": 13,
											"value": "472"
										},
										{
											"begin": 6237,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6227,
											"end": 6290,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6227,
											"end": 6290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6183,
											"end": 6300,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6307,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5978,
											"end": 6307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6431,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 6313,
											"end": 6431,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 6418,
											"end": 6423,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 6400,
											"end": 6424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6400,
											"end": 6424,
											"name": "tag",
											"source": 13,
											"value": "474"
										},
										{
											"begin": 6400,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6395,
											"end": 6398,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6388,
											"end": 6425,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6431,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6313,
											"end": 6431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6659,
											"name": "tag",
											"source": 13,
											"value": "53"
										},
										{
											"begin": 6437,
											"end": 6659,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6530,
											"end": 6534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6570,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6557,
											"end": 6566,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6553,
											"end": 6571,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6571,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6545,
											"end": 6571,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6581,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 6649,
											"end": 6650,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6638,
											"end": 6647,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6634,
											"end": 6651,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6625,
											"end": 6631,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 6581,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 6581,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6581,
											"end": 6652,
											"name": "tag",
											"source": 13,
											"value": "476"
										},
										{
											"begin": 6581,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6659,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6659,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6659,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6437,
											"end": 6659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6702,
											"end": 6709,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6742,
											"end": 6784,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6735,
											"end": 6740,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6731,
											"end": 6785,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6785,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6720,
											"end": 6785,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6665,
											"end": 6791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6665,
											"end": 6791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6893,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 6797,
											"end": 6893,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6834,
											"end": 6841,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 6881,
											"end": 6886,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6863,
											"end": 6887,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 6863,
											"end": 6887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6863,
											"end": 6887,
											"name": "tag",
											"source": 13,
											"value": "479"
										},
										{
											"begin": 6863,
											"end": 6887,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6852,
											"end": 6887,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6893,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6893,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6893,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6797,
											"end": 6893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6899,
											"end": 7021,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 6899,
											"end": 7021,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 6990,
											"end": 6995,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6996,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 6972,
											"end": 6996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6972,
											"end": 6996,
											"name": "tag",
											"source": 13,
											"value": "481"
										},
										{
											"begin": 6972,
											"end": 6996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6965,
											"end": 6970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6962,
											"end": 6997,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 6952,
											"end": 7015,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 6952,
											"end": 7015,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7011,
											"end": 7012,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7009,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7001,
											"end": 7013,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 6952,
											"end": 7015,
											"name": "tag",
											"source": 13,
											"value": "482"
										},
										{
											"begin": 6952,
											"end": 7015,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6899,
											"end": 7021,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 6899,
											"end": 7021,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7166,
											"name": "tag",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 7027,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7073,
											"end": 7078,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7111,
											"end": 7117,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7098,
											"end": 7118,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 7089,
											"end": 7118,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7089,
											"end": 7118,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7127,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 7154,
											"end": 7159,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7127,
											"end": 7160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 7127,
											"end": 7160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7127,
											"end": 7160,
											"name": "tag",
											"source": 13,
											"value": "484"
										},
										{
											"begin": 7127,
											"end": 7160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7166,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7166,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7166,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7027,
											"end": 7166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7646,
											"name": "tag",
											"source": 13,
											"value": "61"
										},
										{
											"begin": 7172,
											"end": 7646,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7240,
											"end": 7246,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 7297,
											"end": 7299,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 7285,
											"end": 7294,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7276,
											"end": 7283,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7272,
											"end": 7295,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 7268,
											"end": 7300,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 7265,
											"end": 7384,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 7265,
											"end": 7384,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 7265,
											"end": 7384,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 7303,
											"end": 7382,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 7303,
											"end": 7382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7303,
											"end": 7382,
											"name": "tag",
											"source": 13,
											"value": "487"
										},
										{
											"begin": 7303,
											"end": 7382,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7265,
											"end": 7384,
											"name": "tag",
											"source": 13,
											"value": "486"
										},
										{
											"begin": 7265,
											"end": 7384,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7423,
											"end": 7424,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7448,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 7493,
											"end": 7500,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7484,
											"end": 7490,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7473,
											"end": 7482,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7469,
											"end": 7491,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7448,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 7448,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7448,
											"end": 7501,
											"name": "tag",
											"source": 13,
											"value": "488"
										},
										{
											"begin": 7448,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7438,
											"end": 7501,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7438,
											"end": 7501,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7394,
											"end": 7511,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7550,
											"end": 7552,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7576,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 7621,
											"end": 7628,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 7612,
											"end": 7618,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7601,
											"end": 7610,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 7597,
											"end": 7619,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7576,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 7576,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7576,
											"end": 7629,
											"name": "tag",
											"source": 13,
											"value": "489"
										},
										{
											"begin": 7576,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7566,
											"end": 7629,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7566,
											"end": 7629,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7521,
											"end": 7639,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7646,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7646,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7646,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7646,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7172,
											"end": 7646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7770,
											"name": "tag",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 7652,
											"end": 7770,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 7757,
											"end": 7762,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 7739,
											"end": 7763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "tag",
											"source": 13,
											"value": "491"
										},
										{
											"begin": 7739,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7734,
											"end": 7737,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7727,
											"end": 7764,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7770,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7652,
											"end": 7770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7998,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 7776,
											"end": 7998,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7869,
											"end": 7873,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 7896,
											"end": 7905,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7884,
											"end": 7910,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 7884,
											"end": 7910,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7920,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 7988,
											"end": 7989,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 7977,
											"end": 7986,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 7973,
											"end": 7990,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 7964,
											"end": 7970,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 7920,
											"end": 7991,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 7920,
											"end": 7991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 7920,
											"end": 7991,
											"name": "tag",
											"source": 13,
											"value": "493"
										},
										{
											"begin": 7920,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7998,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7998,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7998,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 7776,
											"end": 7998,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8004,
											"end": 8478,
											"name": "tag",
											"source": 13,
											"value": "71"
										},
										{
											"begin": 8004,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8072,
											"end": 8078,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8080,
											"end": 8086,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8129,
											"end": 8131,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 8117,
											"end": 8126,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 8108,
											"end": 8115,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8104,
											"end": 8127,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 8100,
											"end": 8132,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8216,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8216,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 8097,
											"end": 8216,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8135,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 8135,
											"end": 8214,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 8135,
											"end": 8214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8135,
											"end": 8214,
											"name": "tag",
											"source": 13,
											"value": "496"
										},
										{
											"begin": 8135,
											"end": 8214,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8097,
											"end": 8216,
											"name": "tag",
											"source": 13,
											"value": "495"
										},
										{
											"begin": 8097,
											"end": 8216,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8255,
											"end": 8256,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8280,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 8325,
											"end": 8332,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8316,
											"end": 8322,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8305,
											"end": 8314,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8301,
											"end": 8323,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 8280,
											"end": 8333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8280,
											"end": 8333,
											"name": "tag",
											"source": 13,
											"value": "497"
										},
										{
											"begin": 8280,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8270,
											"end": 8333,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8270,
											"end": 8333,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8226,
											"end": 8343,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8382,
											"end": 8384,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 8408,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 8453,
											"end": 8460,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 8444,
											"end": 8450,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8433,
											"end": 8442,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 8429,
											"end": 8451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 8408,
											"end": 8461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 8408,
											"end": 8461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8408,
											"end": 8461,
											"name": "tag",
											"source": 13,
											"value": "498"
										},
										{
											"begin": 8408,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8398,
											"end": 8461,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8398,
											"end": 8461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8353,
											"end": 8471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8004,
											"end": 8478,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8004,
											"end": 8478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8004,
											"end": 8478,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8004,
											"end": 8478,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8004,
											"end": 8478,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8004,
											"end": 8478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8484,
											"end": 8570,
											"name": "tag",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8484,
											"end": 8570,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8519,
											"end": 8526,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8563,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 8552,
											"end": 8557,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 8548,
											"end": 8564,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 8537,
											"end": 8564,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8537,
											"end": 8564,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8484,
											"end": 8570,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8484,
											"end": 8570,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8484,
											"end": 8570,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8484,
											"end": 8570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8576,
											"end": 8694,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 8576,
											"end": 8694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8647,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 8663,
											"end": 8668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8647,
											"end": 8669,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "349"
										},
										{
											"begin": 8647,
											"end": 8669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8647,
											"end": 8669,
											"name": "tag",
											"source": 13,
											"value": "501"
										},
										{
											"begin": 8647,
											"end": 8669,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8640,
											"end": 8645,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8637,
											"end": 8670,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8627,
											"end": 8688,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 8627,
											"end": 8688,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8684,
											"end": 8685,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8681,
											"end": 8682,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8674,
											"end": 8686,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8627,
											"end": 8688,
											"name": "tag",
											"source": 13,
											"value": "502"
										},
										{
											"begin": 8627,
											"end": 8688,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8576,
											"end": 8694,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8576,
											"end": 8694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8835,
											"name": "tag",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 8700,
											"end": 8835,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8744,
											"end": 8749,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8782,
											"end": 8788,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8769,
											"end": 8789,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 8760,
											"end": 8789,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 8760,
											"end": 8789,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 8823,
											"end": 8828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8829,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 8798,
											"end": 8829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8798,
											"end": 8829,
											"name": "tag",
											"source": 13,
											"value": "504"
										},
										{
											"begin": 8798,
											"end": 8829,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8835,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8835,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8835,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8700,
											"end": 8835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8841,
											"end": 8957,
											"name": "tag",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 8841,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8911,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 8926,
											"end": 8931,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8911,
											"end": 8932,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 8911,
											"end": 8932,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8911,
											"end": 8932,
											"name": "tag",
											"source": 13,
											"value": "506"
										},
										{
											"begin": 8911,
											"end": 8932,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8904,
											"end": 8909,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 8901,
											"end": 8933,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 8891,
											"end": 8951,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 8891,
											"end": 8951,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 8947,
											"end": 8948,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 8944,
											"end": 8945,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 8937,
											"end": 8949,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 8891,
											"end": 8951,
											"name": "tag",
											"source": 13,
											"value": "507"
										},
										{
											"begin": 8891,
											"end": 8951,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8841,
											"end": 8957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8841,
											"end": 8957,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 8963,
											"end": 9096,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 8963,
											"end": 9096,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9006,
											"end": 9011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9044,
											"end": 9050,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9031,
											"end": 9051,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9022,
											"end": 9051,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9060,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 9084,
											"end": 9089,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9060,
											"end": 9090,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "352"
										},
										{
											"begin": 9060,
											"end": 9090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9060,
											"end": 9090,
											"name": "tag",
											"source": 13,
											"value": "509"
										},
										{
											"begin": 9060,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8963,
											"end": 9096,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 8963,
											"end": 9096,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 8963,
											"end": 9096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8963,
											"end": 9096,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 8963,
											"end": 9096,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "tag",
											"source": 13,
											"value": "88"
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9183,
											"end": 9189,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9191,
											"end": 9197,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9199,
											"end": 9205,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9207,
											"end": 9213,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 9256,
											"end": 9259,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 9244,
											"end": 9253,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 9235,
											"end": 9242,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9231,
											"end": 9254,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 9227,
											"end": 9260,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9344,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 9224,
											"end": 9344,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 9263,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 9263,
											"end": 9342,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 9263,
											"end": 9342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9263,
											"end": 9342,
											"name": "tag",
											"source": 13,
											"value": "512"
										},
										{
											"begin": 9263,
											"end": 9342,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9224,
											"end": 9344,
											"name": "tag",
											"source": 13,
											"value": "511"
										},
										{
											"begin": 9224,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9383,
											"end": 9384,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9408,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 9453,
											"end": 9460,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9444,
											"end": 9450,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9433,
											"end": 9442,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9429,
											"end": 9451,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9408,
											"end": 9461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 9408,
											"end": 9461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9408,
											"end": 9461,
											"name": "tag",
											"source": 13,
											"value": "513"
										},
										{
											"begin": 9408,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9398,
											"end": 9461,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9398,
											"end": 9461,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9354,
											"end": 9471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9510,
											"end": 9512,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 9536,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 9579,
											"end": 9586,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9570,
											"end": 9576,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9559,
											"end": 9568,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9555,
											"end": 9577,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "351"
										},
										{
											"begin": 9536,
											"end": 9587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9536,
											"end": 9587,
											"name": "tag",
											"source": 13,
											"value": "514"
										},
										{
											"begin": 9536,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9526,
											"end": 9587,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 9526,
											"end": 9587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9481,
											"end": 9597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9636,
											"end": 9638,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 9662,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 9707,
											"end": 9714,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9698,
											"end": 9704,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9687,
											"end": 9696,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9683,
											"end": 9705,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9662,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 9662,
											"end": 9715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9662,
											"end": 9715,
											"name": "tag",
											"source": 13,
											"value": "515"
										},
										{
											"begin": 9662,
											"end": 9715,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9652,
											"end": 9715,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9652,
											"end": 9715,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9607,
											"end": 9725,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9764,
											"end": 9766,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 9790,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 9832,
											"end": 9839,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 9823,
											"end": 9829,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 9812,
											"end": 9821,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 9808,
											"end": 9830,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 9790,
											"end": 9840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 9790,
											"end": 9840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9790,
											"end": 9840,
											"name": "tag",
											"source": 13,
											"value": "516"
										},
										{
											"begin": 9790,
											"end": 9840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9780,
											"end": 9840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9780,
											"end": 9840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9735,
											"end": 9850,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9102,
											"end": 9857,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9923,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 9863,
											"end": 9923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9891,
											"end": 9894,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 9912,
											"end": 9917,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9917,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9905,
											"end": 9917,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9923,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9923,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9863,
											"end": 9923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 9929,
											"end": 10071,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 9929,
											"end": 10071,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9979,
											"end": 9988,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10012,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 10030,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 10039,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10057,
											"end": 10062,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10039,
											"end": 10063,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 10039,
											"end": 10063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10039,
											"end": 10063,
											"name": "tag",
											"source": 13,
											"value": "521"
										},
										{
											"begin": 10039,
											"end": 10063,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10030,
											"end": 10064,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 10030,
											"end": 10064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10030,
											"end": 10064,
											"name": "tag",
											"source": 13,
											"value": "520"
										},
										{
											"begin": 10030,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10012,
											"end": 10065,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 10012,
											"end": 10065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10012,
											"end": 10065,
											"name": "tag",
											"source": 13,
											"value": "519"
										},
										{
											"begin": 10012,
											"end": 10065,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 9999,
											"end": 10065,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9999,
											"end": 10065,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9929,
											"end": 10071,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 9929,
											"end": 10071,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 9929,
											"end": 10071,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 9929,
											"end": 10071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10077,
											"end": 10203,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 10077,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10127,
											"end": 10136,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10160,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 10191,
											"end": 10196,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10197,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 10160,
											"end": 10197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10160,
											"end": 10197,
											"name": "tag",
											"source": 13,
											"value": "523"
										},
										{
											"begin": 10160,
											"end": 10197,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10147,
											"end": 10197,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10147,
											"end": 10197,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10077,
											"end": 10203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10077,
											"end": 10203,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10077,
											"end": 10203,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10077,
											"end": 10203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10363,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 10209,
											"end": 10363,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10287,
											"end": 10296,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10320,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 10351,
											"end": 10356,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10320,
											"end": 10357,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 10320,
											"end": 10357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10320,
											"end": 10357,
											"name": "tag",
											"source": 13,
											"value": "525"
										},
										{
											"begin": 10320,
											"end": 10357,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10307,
											"end": 10357,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10307,
											"end": 10357,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10363,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10363,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10363,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10209,
											"end": 10363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10556,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 10369,
											"end": 10556,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10484,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 10543,
											"end": 10548,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 10484,
											"end": 10549,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 10484,
											"end": 10549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10484,
											"end": 10549,
											"name": "tag",
											"source": 13,
											"value": "527"
										},
										{
											"begin": 10484,
											"end": 10549,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10479,
											"end": 10482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10472,
											"end": 10550,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10556,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10369,
											"end": 10556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10840,
											"name": "tag",
											"source": 13,
											"value": "115"
										},
										{
											"begin": 10562,
											"end": 10840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10683,
											"end": 10687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10721,
											"end": 10723,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 10710,
											"end": 10719,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 10706,
											"end": 10724,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10698,
											"end": 10724,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10698,
											"end": 10724,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 10830,
											"end": 10831,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10819,
											"end": 10828,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10815,
											"end": 10832,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 10806,
											"end": 10812,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10833,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 10734,
											"end": 10833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10734,
											"end": 10833,
											"name": "tag",
											"source": 13,
											"value": "529"
										},
										{
											"begin": 10734,
											"end": 10833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10840,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10840,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10840,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10562,
											"end": 10840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10846,
											"end": 11320,
											"name": "tag",
											"source": 13,
											"value": "121"
										},
										{
											"begin": 10846,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10914,
											"end": 10920,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 10922,
											"end": 10928,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 10971,
											"end": 10973,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 10959,
											"end": 10968,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 10950,
											"end": 10957,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 10946,
											"end": 10969,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 10942,
											"end": 10974,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 10939,
											"end": 11058,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 10939,
											"end": 11058,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 10939,
											"end": 11058,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 10977,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 10977,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 10977,
											"end": 11056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 10977,
											"end": 11056,
											"name": "tag",
											"source": 13,
											"value": "532"
										},
										{
											"begin": 10977,
											"end": 11056,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 10939,
											"end": 11058,
											"name": "tag",
											"source": 13,
											"value": "531"
										},
										{
											"begin": 10939,
											"end": 11058,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11097,
											"end": 11098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 11167,
											"end": 11174,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11158,
											"end": 11164,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11147,
											"end": 11156,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11143,
											"end": 11165,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 11122,
											"end": 11175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "tag",
											"source": 13,
											"value": "533"
										},
										{
											"begin": 11122,
											"end": 11175,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11112,
											"end": 11175,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11112,
											"end": 11175,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11068,
											"end": 11185,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11224,
											"end": 11226,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 11250,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 11295,
											"end": 11302,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 11286,
											"end": 11292,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11275,
											"end": 11284,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 11271,
											"end": 11293,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11250,
											"end": 11303,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "347"
										},
										{
											"begin": 11250,
											"end": 11303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11250,
											"end": 11303,
											"name": "tag",
											"source": 13,
											"value": "534"
										},
										{
											"begin": 11250,
											"end": 11303,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11240,
											"end": 11303,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11240,
											"end": 11303,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11195,
											"end": 11313,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10846,
											"end": 11320,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10846,
											"end": 11320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10846,
											"end": 11320,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 10846,
											"end": 11320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 10846,
											"end": 11320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 10846,
											"end": 11320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11326,
											"end": 11506,
											"name": "tag",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 11326,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11374,
											"end": 11451,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11371,
											"end": 11372,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11364,
											"end": 11452,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11471,
											"end": 11475,
											"name": "PUSH",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 11468,
											"end": 11469,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11461,
											"end": 11476,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11495,
											"end": 11499,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11492,
											"end": 11493,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11485,
											"end": 11500,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11703,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 11512,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11552,
											"end": 11555,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11571,
											"end": 11591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 11589,
											"end": 11590,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11571,
											"end": 11591,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 11571,
											"end": 11591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11571,
											"end": 11591,
											"name": "tag",
											"source": 13,
											"value": "537"
										},
										{
											"begin": 11571,
											"end": 11591,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11566,
											"end": 11591,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11566,
											"end": 11591,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11605,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 11623,
											"end": 11624,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 11605,
											"end": 11625,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 11605,
											"end": 11625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11605,
											"end": 11625,
											"name": "tag",
											"source": 13,
											"value": "538"
										},
										{
											"begin": 11605,
											"end": 11625,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11600,
											"end": 11625,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11600,
											"end": 11625,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11648,
											"end": 11649,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11645,
											"end": 11646,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11641,
											"end": 11650,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 11634,
											"end": 11650,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11634,
											"end": 11650,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11669,
											"end": 11672,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 11666,
											"end": 11667,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 11663,
											"end": 11673,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 11660,
											"end": 11696,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 11660,
											"end": 11696,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 11660,
											"end": 11696,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 11676,
											"end": 11694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 11676,
											"end": 11694,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11660,
											"end": 11696,
											"name": "tag",
											"source": 13,
											"value": "539"
										},
										{
											"begin": 11660,
											"end": 11696,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11703,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11703,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11703,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11512,
											"end": 11703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11808,
											"name": "tag",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 11709,
											"end": 11808,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11761,
											"end": 11767,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11795,
											"end": 11800,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 11789,
											"end": 11801,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 11779,
											"end": 11801,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11779,
											"end": 11801,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11808,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11808,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11808,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 11709,
											"end": 11808,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 11814,
											"end": 11994,
											"name": "tag",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 11814,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 11862,
											"end": 11939,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11859,
											"end": 11860,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11852,
											"end": 11940,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11959,
											"end": 11963,
											"name": "PUSH",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 11956,
											"end": 11957,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 11949,
											"end": 11964,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 11983,
											"end": 11987,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 11980,
											"end": 11981,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 11973,
											"end": 11988,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 12000,
											"end": 12320,
											"name": "tag",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 12000,
											"end": 12320,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12044,
											"end": 12050,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12081,
											"end": 12082,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 12075,
											"end": 12079,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12071,
											"end": 12083,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12083,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12061,
											"end": 12083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12128,
											"end": 12129,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 12122,
											"end": 12126,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12149,
											"end": 12167,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 12139,
											"end": 12220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 12139,
											"end": 12220,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12205,
											"end": 12209,
											"name": "PUSH",
											"source": 13,
											"value": "7F"
										},
										{
											"begin": 12197,
											"end": 12203,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12193,
											"end": 12210,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12183,
											"end": 12210,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12183,
											"end": 12210,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12139,
											"end": 12220,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 12139,
											"end": 12220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12267,
											"end": 12269,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12259,
											"end": 12265,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12256,
											"end": 12270,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 12236,
											"end": 12254,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12233,
											"end": 12271,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12314,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 12230,
											"end": 12314,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "361"
										},
										{
											"begin": 12286,
											"end": 12304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 12286,
											"end": 12304,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12230,
											"end": 12314,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 12230,
											"end": 12314,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12051,
											"end": 12320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12000,
											"end": 12320,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12000,
											"end": 12320,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12000,
											"end": 12320,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12000,
											"end": 12320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12467,
											"name": "tag",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 12326,
											"end": 12467,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12375,
											"end": 12379,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12398,
											"end": 12401,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12401,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12390,
											"end": 12401,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12421,
											"end": 12424,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 12418,
											"end": 12419,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12411,
											"end": 12425,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 12455,
											"end": 12459,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12452,
											"end": 12453,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12442,
											"end": 12460,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 12434,
											"end": 12460,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12434,
											"end": 12460,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12467,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12467,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12467,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12326,
											"end": 12467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12473,
											"end": 12566,
											"name": "tag",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 12473,
											"end": 12566,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12510,
											"end": 12516,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12557,
											"end": 12559,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 12552,
											"end": 12554,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 12545,
											"end": 12550,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12541,
											"end": 12555,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 12537,
											"end": 12560,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 12527,
											"end": 12560,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12527,
											"end": 12560,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12473,
											"end": 12566,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12473,
											"end": 12566,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12473,
											"end": 12566,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12473,
											"end": 12566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12679,
											"name": "tag",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 12572,
											"end": 12679,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12616,
											"end": 12624,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12666,
											"end": 12671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12660,
											"end": 12664,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12656,
											"end": 12672,
											"name": "SHL",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 12635,
											"end": 12672,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12679,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12679,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12679,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12572,
											"end": 12679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 13078,
											"name": "tag",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 12685,
											"end": 13078,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12754,
											"end": 12760,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 12804,
											"end": 12805,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 12792,
											"end": 12802,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 12857,
											"end": 12923,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12846,
											"end": 12855,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 12924,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 12827,
											"end": 12924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12827,
											"end": 12924,
											"name": "tag",
											"source": 13,
											"value": "551"
										},
										{
											"begin": 12827,
											"end": 12924,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12945,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 12975,
											"end": 12983,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 12964,
											"end": 12973,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 12945,
											"end": 12984,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "365"
										},
										{
											"begin": 12945,
											"end": 12984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 12945,
											"end": 12984,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 12945,
											"end": 12984,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 12933,
											"end": 12984,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 12933,
											"end": 12984,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13017,
											"end": 13021,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13013,
											"end": 13022,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 13006,
											"end": 13011,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13002,
											"end": 13023,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 12993,
											"end": 13023,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12993,
											"end": 13023,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13066,
											"end": 13070,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 13056,
											"end": 13064,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 13052,
											"end": 13071,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 13045,
											"end": 13050,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13042,
											"end": 13072,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 13032,
											"end": 13072,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 13032,
											"end": 13072,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12761,
											"end": 13078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12761,
											"end": 13078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 13078,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 13078,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 13078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 13078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 13078,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 12685,
											"end": 13078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13084,
											"end": 13226,
											"name": "tag",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 13084,
											"end": 13226,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13134,
											"end": 13143,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13167,
											"end": 13220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 13185,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 13194,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 13212,
											"end": 13217,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13194,
											"end": 13218,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 13194,
											"end": 13218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13194,
											"end": 13218,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 13194,
											"end": 13218,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13219,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 13185,
											"end": 13219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13185,
											"end": 13219,
											"name": "tag",
											"source": 13,
											"value": "555"
										},
										{
											"begin": 13185,
											"end": 13219,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13167,
											"end": 13220,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 13167,
											"end": 13220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13167,
											"end": 13220,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 13167,
											"end": 13220,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13220,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13154,
											"end": 13220,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13084,
											"end": 13226,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13084,
											"end": 13226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13084,
											"end": 13226,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13084,
											"end": 13226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13307,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 13232,
											"end": 13307,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13275,
											"end": 13278,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13296,
											"end": 13301,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13289,
											"end": 13301,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13289,
											"end": 13301,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13307,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13307,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13307,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13232,
											"end": 13307,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13582,
											"name": "tag",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 13313,
											"end": 13582,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13423,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 13454,
											"end": 13461,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 13423,
											"end": 13462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "367"
										},
										{
											"begin": 13423,
											"end": 13462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13423,
											"end": 13462,
											"name": "tag",
											"source": 13,
											"value": "559"
										},
										{
											"begin": 13423,
											"end": 13462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13484,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 13533,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 13557,
											"end": 13573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13533,
											"end": 13574,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 13533,
											"end": 13574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13533,
											"end": 13574,
											"name": "tag",
											"source": 13,
											"value": "561"
										},
										{
											"begin": 13533,
											"end": 13574,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13525,
											"end": 13531,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13518,
											"end": 13522,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13512,
											"end": 13523,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 13484,
											"end": 13575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "366"
										},
										{
											"begin": 13484,
											"end": 13575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13484,
											"end": 13575,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 13484,
											"end": 13575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13478,
											"end": 13482,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13471,
											"end": 13576,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 13389,
											"end": 13582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13582,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13313,
											"end": 13582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13588,
											"end": 13661,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 13588,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13633,
											"end": 13636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 13588,
											"end": 13661,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13588,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13667,
											"end": 13856,
											"name": "tag",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 13667,
											"end": 13856,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13744,
											"end": 13776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 13744,
											"end": 13776,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 13744,
											"end": 13776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13744,
											"end": 13776,
											"name": "tag",
											"source": 13,
											"value": "564"
										},
										{
											"begin": 13744,
											"end": 13776,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13785,
											"end": 13850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 13843,
											"end": 13849,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13835,
											"end": 13841,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13829,
											"end": 13833,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 13785,
											"end": 13850,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 13785,
											"end": 13850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13785,
											"end": 13850,
											"name": "tag",
											"source": 13,
											"value": "565"
										},
										{
											"begin": 13785,
											"end": 13850,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13720,
											"end": 13856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13667,
											"end": 13856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13667,
											"end": 13856,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13667,
											"end": 13856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13862,
											"end": 14048,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 13862,
											"end": 14048,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "tag",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13939,
											"end": 13942,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13932,
											"end": 13937,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13929,
											"end": 13943,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 13993,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 14030,
											"end": 14031,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14023,
											"end": 14028,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 13993,
											"end": 14032,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 13993,
											"end": 14032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13993,
											"end": 14032,
											"name": "tag",
											"source": 13,
											"value": "570"
										},
										{
											"begin": 13993,
											"end": 14032,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13966,
											"end": 13967,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 13959,
											"end": 13964,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 13955,
											"end": 13968,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 13946,
											"end": 13968,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 13946,
											"end": 13968,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "567"
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "tag",
											"source": 13,
											"value": "569"
										},
										{
											"begin": 13922,
											"end": 14042,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 13862,
											"end": 14048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13862,
											"end": 14048,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 13862,
											"end": 14048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14054,
											"end": 14597,
											"name": "tag",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 14054,
											"end": 14597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14155,
											"end": 14157,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 14150,
											"end": 14153,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14147,
											"end": 14158,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 14144,
											"end": 14590,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14144,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 14144,
											"end": 14590,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 14221,
											"end": 14226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 14189,
											"end": 14227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14189,
											"end": 14227,
											"name": "tag",
											"source": 13,
											"value": "573"
										},
										{
											"begin": 14189,
											"end": 14227,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14273,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 14291,
											"end": 14301,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14273,
											"end": 14302,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 14273,
											"end": 14302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14273,
											"end": 14302,
											"name": "tag",
											"source": 13,
											"value": "574"
										},
										{
											"begin": 14273,
											"end": 14302,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14263,
											"end": 14271,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14259,
											"end": 14303,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14456,
											"end": 14458,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 14444,
											"end": 14454,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14441,
											"end": 14459,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 14438,
											"end": 14487,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 14438,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 14438,
											"end": 14487,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 14477,
											"end": 14485,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 14462,
											"end": 14485,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14462,
											"end": 14485,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14438,
											"end": 14487,
											"name": "tag",
											"source": 13,
											"value": "575"
										},
										{
											"begin": 14438,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14500,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 14556,
											"end": 14578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 14574,
											"end": 14577,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 14556,
											"end": 14578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "364"
										},
										{
											"begin": 14556,
											"end": 14578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14556,
											"end": 14578,
											"name": "tag",
											"source": 13,
											"value": "577"
										},
										{
											"begin": 14556,
											"end": 14578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14546,
											"end": 14554,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14542,
											"end": 14579,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14529,
											"end": 14540,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14500,
											"end": 14580,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 14500,
											"end": 14580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14500,
											"end": 14580,
											"name": "tag",
											"source": 13,
											"value": "576"
										},
										{
											"begin": 14500,
											"end": 14580,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14159,
											"end": 14590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14159,
											"end": 14590,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14144,
											"end": 14590,
											"name": "tag",
											"source": 13,
											"value": "572"
										},
										{
											"begin": 14144,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14054,
											"end": 14597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14054,
											"end": 14597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14054,
											"end": 14597,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14054,
											"end": 14597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14603,
											"end": 14720,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 14603,
											"end": 14720,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14657,
											"end": 14665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14707,
											"end": 14712,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14701,
											"end": 14705,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 14697,
											"end": 14713,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 14676,
											"end": 14713,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 14676,
											"end": 14713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14603,
											"end": 14720,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14603,
											"end": 14720,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14603,
											"end": 14720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14603,
											"end": 14720,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14603,
											"end": 14720,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14726,
											"end": 14895,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 14726,
											"end": 14895,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14770,
											"end": 14776,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 14851,
											"end": 14852,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 14847,
											"end": 14853,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 14839,
											"end": 14844,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 14836,
											"end": 14837,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 14832,
											"end": 14845,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 14803,
											"end": 14854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "tag",
											"source": 13,
											"value": "580"
										},
										{
											"begin": 14803,
											"end": 14854,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14799,
											"end": 14855,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 14884,
											"end": 14888,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 14878,
											"end": 14882,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 14874,
											"end": 14889,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 14864,
											"end": 14889,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14864,
											"end": 14889,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14777,
											"end": 14895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14726,
											"end": 14895,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14726,
											"end": 14895,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14726,
											"end": 14895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14726,
											"end": 14895,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14726,
											"end": 14895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 14900,
											"end": 15195,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 14900,
											"end": 15195,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 14976,
											"end": 14980,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15122,
											"end": 15151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 15147,
											"end": 15150,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15141,
											"end": 15145,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15122,
											"end": 15151,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 15122,
											"end": 15151,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15122,
											"end": 15151,
											"name": "tag",
											"source": 13,
											"value": "582"
										},
										{
											"begin": 15122,
											"end": 15151,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15114,
											"end": 15151,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 15114,
											"end": 15151,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15184,
											"end": 15187,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15181,
											"end": 15182,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 15177,
											"end": 15188,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 15171,
											"end": 15175,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15168,
											"end": 15189,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 15160,
											"end": 15189,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15160,
											"end": 15189,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14900,
											"end": 15195,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 14900,
											"end": 15195,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 14900,
											"end": 15195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14900,
											"end": 15195,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 14900,
											"end": 15195,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15200,
											"end": 16595,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 15200,
											"end": 16595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15317,
											"end": 15354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 15350,
											"end": 15353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15317,
											"end": 15354,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "360"
										},
										{
											"begin": 15317,
											"end": 15354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15317,
											"end": 15354,
											"name": "tag",
											"source": 13,
											"value": "584"
										},
										{
											"begin": 15317,
											"end": 15354,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15419,
											"end": 15437,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15411,
											"end": 15417,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15408,
											"end": 15438,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15405,
											"end": 15461,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15405,
											"end": 15461,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 15405,
											"end": 15461,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15441,
											"end": 15459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 15441,
											"end": 15459,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "329"
										},
										{
											"begin": 15441,
											"end": 15459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15441,
											"end": 15459,
											"name": "tag",
											"source": 13,
											"value": "586"
										},
										{
											"begin": 15441,
											"end": 15459,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15405,
											"end": 15461,
											"name": "tag",
											"source": 13,
											"value": "585"
										},
										{
											"begin": 15405,
											"end": 15461,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15485,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 15517,
											"end": 15521,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15511,
											"end": 15522,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 15485,
											"end": 15523,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "362"
										},
										{
											"begin": 15485,
											"end": 15523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15485,
											"end": 15523,
											"name": "tag",
											"source": 13,
											"value": "587"
										},
										{
											"begin": 15485,
											"end": 15523,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15570,
											"end": 15637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 15630,
											"end": 15636,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15622,
											"end": 15628,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15616,
											"end": 15620,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 15570,
											"end": 15637,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "373"
										},
										{
											"begin": 15570,
											"end": 15637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15570,
											"end": 15637,
											"name": "tag",
											"source": 13,
											"value": "588"
										},
										{
											"begin": 15570,
											"end": 15637,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15664,
											"end": 15665,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15688,
											"end": 15692,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15675,
											"end": 15692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15675,
											"end": 15692,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15720,
											"end": 15722,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 15712,
											"end": 15718,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 15709,
											"end": 15723,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 15737,
											"end": 15738,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 15732,
											"end": 16350,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 16350,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 16350,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 15732,
											"end": 16350,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16394,
											"end": 16395,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16411,
											"end": 16417,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16408,
											"end": 16485,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16408,
											"end": 16485,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 16408,
											"end": 16485,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16460,
											"end": 16469,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16455,
											"end": 16458,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 16451,
											"end": 16470,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16445,
											"end": 16471,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16436,
											"end": 16471,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16436,
											"end": 16471,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16408,
											"end": 16485,
											"name": "tag",
											"source": 13,
											"value": "591"
										},
										{
											"begin": 16408,
											"end": 16485,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16511,
											"end": 16578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 16571,
											"end": 16577,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16564,
											"end": 16569,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16511,
											"end": 16578,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 16511,
											"end": 16578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16511,
											"end": 16578,
											"name": "tag",
											"source": 13,
											"value": "592"
										},
										{
											"begin": 16511,
											"end": 16578,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16505,
											"end": 16509,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16498,
											"end": 16579,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16367,
											"end": 16589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15702,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 15702,
											"end": 16589,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15732,
											"end": 16350,
											"name": "tag",
											"source": 13,
											"value": "590"
										},
										{
											"begin": 15732,
											"end": 16350,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15784,
											"end": 15788,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 15780,
											"end": 15789,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 15772,
											"end": 15778,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15768,
											"end": 15790,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 15850,
											"end": 15854,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 15855,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "363"
										},
										{
											"begin": 15818,
											"end": 15855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15818,
											"end": 15855,
											"name": "tag",
											"source": 13,
											"value": "593"
										},
										{
											"begin": 15818,
											"end": 15855,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15877,
											"end": 15878,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "tag",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15905,
											"end": 15912,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15902,
											"end": 15903,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15899,
											"end": 15913,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 15984,
											"end": 15993,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 15979,
											"end": 15982,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 15975,
											"end": 15994,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15969,
											"end": 15995,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 15961,
											"end": 15967,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 15954,
											"end": 15996,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16035,
											"end": 16036,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16027,
											"end": 16033,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16023,
											"end": 16037,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16013,
											"end": 16037,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16013,
											"end": 16037,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16082,
											"end": 16084,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 16071,
											"end": 16080,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 16067,
											"end": 16085,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16054,
											"end": 16085,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 16054,
											"end": 16085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15928,
											"end": 15932,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 15925,
											"end": 15926,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 15921,
											"end": 15933,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15916,
											"end": 15933,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 15916,
											"end": 15933,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "594"
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "tag",
											"source": 13,
											"value": "596"
										},
										{
											"begin": 15891,
											"end": 16099,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16127,
											"end": 16133,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 16118,
											"end": 16125,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16115,
											"end": 16134,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 16112,
											"end": 16291,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 16112,
											"end": 16291,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 16112,
											"end": 16291,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16185,
											"end": 16194,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 16180,
											"end": 16183,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16176,
											"end": 16195,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16170,
											"end": 16196,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16228,
											"end": 16276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 16270,
											"end": 16274,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 16262,
											"end": 16268,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 16258,
											"end": 16275,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 16247,
											"end": 16256,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16228,
											"end": 16276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 16228,
											"end": 16276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16228,
											"end": 16276,
											"name": "tag",
											"source": 13,
											"value": "598"
										},
										{
											"begin": 16228,
											"end": 16276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16220,
											"end": 16226,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16213,
											"end": 16277,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 16135,
											"end": 16291,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16112,
											"end": 16291,
											"name": "tag",
											"source": 13,
											"value": "597"
										},
										{
											"begin": 16112,
											"end": 16291,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16337,
											"end": 16338,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16333,
											"end": 16334,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 16325,
											"end": 16331,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16321,
											"end": 16335,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 16317,
											"end": 16339,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16311,
											"end": 16315,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 16304,
											"end": 16340,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 15739,
											"end": 16350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15739,
											"end": 16350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15739,
											"end": 16350,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15702,
											"end": 16589,
											"name": "tag",
											"source": 13,
											"value": "589"
										},
										{
											"begin": 15702,
											"end": 16589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 15702,
											"end": 16589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15292,
											"end": 16595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15292,
											"end": 16595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15292,
											"end": 16595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15200,
											"end": 16595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15200,
											"end": 16595,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 15200,
											"end": 16595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16601,
											"end": 16834,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 16601,
											"end": 16834,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16640,
											"end": 16643,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16663,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 16681,
											"end": 16686,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16663,
											"end": 16687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 16663,
											"end": 16687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16663,
											"end": 16687,
											"name": "tag",
											"source": 13,
											"value": "600"
										},
										{
											"begin": 16663,
											"end": 16687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16654,
											"end": 16687,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16654,
											"end": 16687,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16709,
											"end": 16775,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16702,
											"end": 16707,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16699,
											"end": 16776,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 16696,
											"end": 16799,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 16696,
											"end": 16799,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 16779,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 16779,
											"end": 16797,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 16779,
											"end": 16797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16779,
											"end": 16797,
											"name": "tag",
											"source": 13,
											"value": "602"
										},
										{
											"begin": 16779,
											"end": 16797,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16696,
											"end": 16799,
											"name": "tag",
											"source": 13,
											"value": "601"
										},
										{
											"begin": 16696,
											"end": 16799,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16826,
											"end": 16827,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 16819,
											"end": 16824,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16815,
											"end": 16828,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16808,
											"end": 16828,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16808,
											"end": 16828,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16601,
											"end": 16834,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16601,
											"end": 16834,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 16601,
											"end": 16834,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16601,
											"end": 16834,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 17250,
											"name": "tag",
											"source": 13,
											"value": "162"
										},
										{
											"begin": 16840,
											"end": 17250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16880,
											"end": 16887,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 16921,
											"end": 16922,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 16903,
											"end": 16923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "tag",
											"source": 13,
											"value": "604"
										},
										{
											"begin": 16903,
											"end": 16923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16898,
											"end": 16923,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16898,
											"end": 16923,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16937,
											"end": 16957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 16955,
											"end": 16956,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 16937,
											"end": 16957,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 16937,
											"end": 16957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 16937,
											"end": 16957,
											"name": "tag",
											"source": 13,
											"value": "605"
										},
										{
											"begin": 16937,
											"end": 16957,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16932,
											"end": 16957,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16932,
											"end": 16957,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16992,
											"end": 16993,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16989,
											"end": 16990,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 16985,
											"end": 16994,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 17014,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 17032,
											"end": 17043,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 17014,
											"end": 17044,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 17014,
											"end": 17044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17014,
											"end": 17044,
											"name": "tag",
											"source": 13,
											"value": "606"
										},
										{
											"begin": 17014,
											"end": 17044,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17003,
											"end": 17044,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17003,
											"end": 17044,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17193,
											"end": 17194,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17184,
											"end": 17191,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17180,
											"end": 17195,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 17177,
											"end": 17178,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17174,
											"end": 17196,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 17154,
											"end": 17155,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17147,
											"end": 17156,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 17127,
											"end": 17210,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 17104,
											"end": 17243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 17104,
											"end": 17243,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 17223,
											"end": 17241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "tag",
											"source": 13,
											"value": "608"
										},
										{
											"begin": 17223,
											"end": 17241,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17104,
											"end": 17243,
											"name": "tag",
											"source": 13,
											"value": "607"
										},
										{
											"begin": 17104,
											"end": 17243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 16888,
											"end": 17250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 17250,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 17250,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 17250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 17250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 16840,
											"end": 17250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17256,
											"end": 17436,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 17256,
											"end": 17436,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17304,
											"end": 17381,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17301,
											"end": 17302,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17294,
											"end": 17382,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17401,
											"end": 17405,
											"name": "PUSH",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 17391,
											"end": 17406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17425,
											"end": 17429,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 17422,
											"end": 17423,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17415,
											"end": 17430,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "tag",
											"source": 13,
											"value": "164"
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17482,
											"end": 17483,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 17517,
											"end": 17518,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 17499,
											"end": 17519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "tag",
											"source": 13,
											"value": "611"
										},
										{
											"begin": 17499,
											"end": 17519,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17494,
											"end": 17519,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17494,
											"end": 17519,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 17551,
											"end": 17552,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 17533,
											"end": 17553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "tag",
											"source": 13,
											"value": "612"
										},
										{
											"begin": 17533,
											"end": 17553,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17528,
											"end": 17553,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17528,
											"end": 17553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17572,
											"end": 17573,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17562,
											"end": 17597,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 17562,
											"end": 17597,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 17577,
											"end": 17595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "tag",
											"source": 13,
											"value": "614"
										},
										{
											"begin": 17577,
											"end": 17595,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17562,
											"end": 17597,
											"name": "tag",
											"source": 13,
											"value": "613"
										},
										{
											"begin": 17562,
											"end": 17597,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17619,
											"end": 17620,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17616,
											"end": 17617,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17612,
											"end": 17621,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 17607,
											"end": 17621,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17607,
											"end": 17621,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17627,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17442,
											"end": 17627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17965,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 17633,
											"end": 17965,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17754,
											"end": 17758,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17792,
											"end": 17794,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 17781,
											"end": 17790,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 17777,
											"end": 17795,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17769,
											"end": 17795,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 17769,
											"end": 17795,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17805,
											"end": 17876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 17873,
											"end": 17874,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 17862,
											"end": 17871,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17858,
											"end": 17875,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17849,
											"end": 17855,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 17805,
											"end": 17876,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 17805,
											"end": 17876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17805,
											"end": 17876,
											"name": "tag",
											"source": 13,
											"value": "616"
										},
										{
											"begin": 17805,
											"end": 17876,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17886,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 17954,
											"end": 17956,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 17943,
											"end": 17952,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 17939,
											"end": 17957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17930,
											"end": 17936,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 17886,
											"end": 17958,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 17886,
											"end": 17958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17886,
											"end": 17958,
											"name": "tag",
											"source": 13,
											"value": "617"
										},
										{
											"begin": 17886,
											"end": 17958,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17965,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17965,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17965,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17965,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17965,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17633,
											"end": 17965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 17971,
											"end": 18165,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 17971,
											"end": 18165,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18011,
											"end": 18015,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18031,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 18049,
											"end": 18050,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18031,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 18031,
											"end": 18051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18031,
											"end": 18051,
											"name": "tag",
											"source": 13,
											"value": "619"
										},
										{
											"begin": 18031,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18026,
											"end": 18051,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18026,
											"end": 18051,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18065,
											"end": 18085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 18083,
											"end": 18084,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18065,
											"end": 18085,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "340"
										},
										{
											"begin": 18065,
											"end": 18085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18065,
											"end": 18085,
											"name": "tag",
											"source": 13,
											"value": "620"
										},
										{
											"begin": 18065,
											"end": 18085,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18060,
											"end": 18085,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18060,
											"end": 18085,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18109,
											"end": 18110,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18106,
											"end": 18107,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18102,
											"end": 18111,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 18094,
											"end": 18111,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18094,
											"end": 18111,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18133,
											"end": 18134,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18127,
											"end": 18131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18124,
											"end": 18135,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 18121,
											"end": 18158,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 18121,
											"end": 18158,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 18121,
											"end": 18158,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 18138,
											"end": 18156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 18138,
											"end": 18156,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "359"
										},
										{
											"begin": 18138,
											"end": 18156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18138,
											"end": 18156,
											"name": "tag",
											"source": 13,
											"value": "622"
										},
										{
											"begin": 18138,
											"end": 18156,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18121,
											"end": 18158,
											"name": "tag",
											"source": 13,
											"value": "621"
										},
										{
											"begin": 18121,
											"end": 18158,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 17971,
											"end": 18165,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 17971,
											"end": 18165,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 17971,
											"end": 18165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17971,
											"end": 18165,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 17971,
											"end": 18165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18318,
											"name": "tag",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 18171,
											"end": 18318,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18272,
											"end": 18283,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18309,
											"end": 18312,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 18294,
											"end": 18312,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18294,
											"end": 18312,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18318,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18318,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18318,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18171,
											"end": 18318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18324,
											"end": 18438,
											"name": "tag",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 18324,
											"end": 18438,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18324,
											"end": 18438,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18324,
											"end": 18438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18444,
											"end": 18842,
											"name": "tag",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 18444,
											"end": 18842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18603,
											"end": 18606,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18624,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 18705,
											"end": 18706,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18700,
											"end": 18703,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 18624,
											"end": 18707,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "378"
										},
										{
											"begin": 18624,
											"end": 18707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18624,
											"end": 18707,
											"name": "tag",
											"source": 13,
											"value": "626"
										},
										{
											"begin": 18624,
											"end": 18707,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18617,
											"end": 18707,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18617,
											"end": 18707,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18716,
											"end": 18809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 18805,
											"end": 18808,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18716,
											"end": 18809,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "379"
										},
										{
											"begin": 18716,
											"end": 18809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18716,
											"end": 18809,
											"name": "tag",
											"source": 13,
											"value": "627"
										},
										{
											"begin": 18716,
											"end": 18809,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 18834,
											"end": 18835,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 18829,
											"end": 18832,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 18825,
											"end": 18836,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 18818,
											"end": 18836,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18818,
											"end": 18836,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18444,
											"end": 18842,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18444,
											"end": 18842,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18444,
											"end": 18842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18444,
											"end": 18842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 18848,
											"end": 19227,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 18848,
											"end": 19227,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19032,
											"end": 19035,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19054,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 19197,
											"end": 19200,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19054,
											"end": 19201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "380"
										},
										{
											"begin": 19054,
											"end": 19201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19054,
											"end": 19201,
											"name": "tag",
											"source": 13,
											"value": "629"
										},
										{
											"begin": 19054,
											"end": 19201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19201,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19047,
											"end": 19201,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19218,
											"end": 19221,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19211,
											"end": 19221,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19211,
											"end": 19221,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18848,
											"end": 19227,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 18848,
											"end": 19227,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 18848,
											"end": 19227,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 18848,
											"end": 19227,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19233,
											"end": 19413,
											"name": "tag",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 19233,
											"end": 19413,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19281,
											"end": 19358,
											"name": "PUSH",
											"source": 13,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19278,
											"end": 19279,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19271,
											"end": 19359,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19378,
											"end": 19382,
											"name": "PUSH",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 19375,
											"end": 19376,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 19368,
											"end": 19383,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19402,
											"end": 19406,
											"name": "PUSH",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 19399,
											"end": 19400,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19392,
											"end": 19407,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 19419,
											"end": 19539,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 19419,
											"end": 19539,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19507,
											"end": 19508,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 19500,
											"end": 19505,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19497,
											"end": 19509,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 19487,
											"end": 19533,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 19487,
											"end": 19533,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 19513,
											"end": 19531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 19513,
											"end": 19531,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 19513,
											"end": 19531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19513,
											"end": 19531,
											"name": "tag",
											"source": 13,
											"value": "633"
										},
										{
											"begin": 19513,
											"end": 19531,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19487,
											"end": 19533,
											"name": "tag",
											"source": 13,
											"value": "632"
										},
										{
											"begin": 19487,
											"end": 19533,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19419,
											"end": 19539,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19419,
											"end": 19539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19686,
											"name": "tag",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 19545,
											"end": 19686,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19597,
											"end": 19604,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19626,
											"end": 19631,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19615,
											"end": 19631,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19615,
											"end": 19631,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19632,
											"end": 19680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 19674,
											"end": 19679,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19632,
											"end": 19680,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 19632,
											"end": 19680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19632,
											"end": 19680,
											"name": "tag",
											"source": 13,
											"value": "635"
										},
										{
											"begin": 19632,
											"end": 19680,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19686,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19686,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19686,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19545,
											"end": 19686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19692,
											"end": 19833,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 19692,
											"end": 19833,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19755,
											"end": 19764,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 19788,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 19821,
											"end": 19826,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19788,
											"end": 19827,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "382"
										},
										{
											"begin": 19788,
											"end": 19827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19788,
											"end": 19827,
											"name": "tag",
											"source": 13,
											"value": "637"
										},
										{
											"begin": 19788,
											"end": 19827,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19775,
											"end": 19827,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19775,
											"end": 19827,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19692,
											"end": 19833,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 19692,
											"end": 19833,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 19692,
											"end": 19833,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19692,
											"end": 19833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19839,
											"end": 19996,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 19839,
											"end": 19996,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19939,
											"end": 19989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 19983,
											"end": 19988,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 19939,
											"end": 19989,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 19939,
											"end": 19989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 19939,
											"end": 19989,
											"name": "tag",
											"source": 13,
											"value": "639"
										},
										{
											"begin": 19939,
											"end": 19989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 19934,
											"end": 19937,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 19927,
											"end": 19990,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 19839,
											"end": 19996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19839,
											"end": 19996,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 19839,
											"end": 19996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20250,
											"name": "tag",
											"source": 13,
											"value": "230"
										},
										{
											"begin": 20002,
											"end": 20250,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20108,
											"end": 20112,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20146,
											"end": 20148,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 20135,
											"end": 20144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20131,
											"end": 20149,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20123,
											"end": 20149,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20123,
											"end": 20149,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20159,
											"end": 20243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 20240,
											"end": 20241,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20229,
											"end": 20238,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 20225,
											"end": 20242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 20216,
											"end": 20222,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 20159,
											"end": 20243,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 20159,
											"end": 20243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20159,
											"end": 20243,
											"name": "tag",
											"source": 13,
											"value": "641"
										},
										{
											"begin": 20159,
											"end": 20243,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20250,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20250,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20250,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20002,
											"end": 20250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20256,
											"end": 20361,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 20256,
											"end": 20361,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20292,
											"end": 20299,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20332,
											"end": 20354,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20325,
											"end": 20330,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 20321,
											"end": 20355,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 20310,
											"end": 20355,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20310,
											"end": 20355,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20256,
											"end": 20361,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20256,
											"end": 20361,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20256,
											"end": 20361,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20256,
											"end": 20361,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20367,
											"end": 20487,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 20367,
											"end": 20487,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20439,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 20456,
											"end": 20461,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20439,
											"end": 20462,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 20439,
											"end": 20462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20439,
											"end": 20462,
											"name": "tag",
											"source": 13,
											"value": "644"
										},
										{
											"begin": 20439,
											"end": 20462,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20432,
											"end": 20437,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20429,
											"end": 20463,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20419,
											"end": 20481,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 20419,
											"end": 20481,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20477,
											"end": 20478,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20474,
											"end": 20475,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20467,
											"end": 20479,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20419,
											"end": 20481,
											"name": "tag",
											"source": 13,
											"value": "645"
										},
										{
											"begin": 20419,
											"end": 20481,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20367,
											"end": 20487,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20367,
											"end": 20487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20493,
											"end": 20634,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 20493,
											"end": 20634,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20549,
											"end": 20554,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20580,
											"end": 20586,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20574,
											"end": 20587,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20565,
											"end": 20587,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20565,
											"end": 20587,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20596,
											"end": 20628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 20622,
											"end": 20627,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20596,
											"end": 20628,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 20596,
											"end": 20628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20596,
											"end": 20628,
											"name": "tag",
											"source": 13,
											"value": "647"
										},
										{
											"begin": 20596,
											"end": 20628,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20493,
											"end": 20634,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20493,
											"end": 20634,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20493,
											"end": 20634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20493,
											"end": 20634,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20493,
											"end": 20634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20640,
											"end": 20716,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 20640,
											"end": 20716,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20676,
											"end": 20683,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20705,
											"end": 20710,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20694,
											"end": 20710,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20694,
											"end": 20710,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20640,
											"end": 20716,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20640,
											"end": 20716,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20640,
											"end": 20716,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20640,
											"end": 20716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20722,
											"end": 20842,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 20722,
											"end": 20842,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20794,
											"end": 20817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 20811,
											"end": 20816,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20794,
											"end": 20817,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 20794,
											"end": 20817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20794,
											"end": 20817,
											"name": "tag",
											"source": 13,
											"value": "650"
										},
										{
											"begin": 20794,
											"end": 20817,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20787,
											"end": 20792,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20784,
											"end": 20818,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 20774,
											"end": 20836,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 20774,
											"end": 20836,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 20832,
											"end": 20833,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20829,
											"end": 20830,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 20822,
											"end": 20834,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 20774,
											"end": 20836,
											"name": "tag",
											"source": 13,
											"value": "651"
										},
										{
											"begin": 20774,
											"end": 20836,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20722,
											"end": 20842,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20722,
											"end": 20842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20848,
											"end": 20989,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 20848,
											"end": 20989,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20904,
											"end": 20909,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 20935,
											"end": 20941,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20929,
											"end": 20942,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 20920,
											"end": 20942,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 20920,
											"end": 20942,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20951,
											"end": 20983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 20977,
											"end": 20982,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 20951,
											"end": 20983,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 20951,
											"end": 20983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20951,
											"end": 20983,
											"name": "tag",
											"source": 13,
											"value": "653"
										},
										{
											"begin": 20951,
											"end": 20983,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20848,
											"end": 20989,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20848,
											"end": 20989,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20848,
											"end": 20989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20848,
											"end": 20989,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20848,
											"end": 20989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 20995,
											"end": 21138,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 20995,
											"end": 21138,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21052,
											"end": 21057,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21083,
											"end": 21089,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21077,
											"end": 21090,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 21068,
											"end": 21090,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21068,
											"end": 21090,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21099,
											"end": 21132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 21126,
											"end": 21131,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 21099,
											"end": 21132,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 21099,
											"end": 21132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21099,
											"end": 21132,
											"name": "tag",
											"source": 13,
											"value": "655"
										},
										{
											"begin": 21099,
											"end": 21132,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 20995,
											"end": 21138,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 20995,
											"end": 21138,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 20995,
											"end": 21138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20995,
											"end": 21138,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 20995,
											"end": 21138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "tag",
											"source": 13,
											"value": "276"
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21247,
											"end": 21253,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21255,
											"end": 21261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21263,
											"end": 21269,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21271,
											"end": 21277,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 21279,
											"end": 21285,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21328,
											"end": 21331,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 21316,
											"end": 21325,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 21307,
											"end": 21314,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 21303,
											"end": 21326,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 21299,
											"end": 21332,
											"name": "SLT",
											"source": 13
										},
										{
											"begin": 21296,
											"end": 21416,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 21296,
											"end": 21416,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 21296,
											"end": 21416,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 21335,
											"end": 21414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 21335,
											"end": 21414,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "319"
										},
										{
											"begin": 21335,
											"end": 21414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21335,
											"end": 21414,
											"name": "tag",
											"source": 13,
											"value": "658"
										},
										{
											"begin": 21335,
											"end": 21414,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21296,
											"end": 21416,
											"name": "tag",
											"source": 13,
											"value": "657"
										},
										{
											"begin": 21296,
											"end": 21416,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21455,
											"end": 21456,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 21480,
											"end": 21543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 21535,
											"end": 21542,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 21526,
											"end": 21532,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21515,
											"end": 21524,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 21511,
											"end": 21533,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21480,
											"end": 21543,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 21480,
											"end": 21543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21480,
											"end": 21543,
											"name": "tag",
											"source": 13,
											"value": "659"
										},
										{
											"begin": 21480,
											"end": 21543,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21470,
											"end": 21543,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 21470,
											"end": 21543,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21426,
											"end": 21553,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21592,
											"end": 21594,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 21618,
											"end": 21681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 21673,
											"end": 21680,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 21664,
											"end": 21670,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21653,
											"end": 21662,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 21649,
											"end": 21671,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21618,
											"end": 21681,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 21618,
											"end": 21681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21618,
											"end": 21681,
											"name": "tag",
											"source": 13,
											"value": "660"
										},
										{
											"begin": 21618,
											"end": 21681,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21608,
											"end": 21681,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 21608,
											"end": 21681,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21563,
											"end": 21691,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21730,
											"end": 21732,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 21756,
											"end": 21820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 21812,
											"end": 21819,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 21803,
											"end": 21809,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21792,
											"end": 21801,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 21788,
											"end": 21810,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21756,
											"end": 21820,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 21756,
											"end": 21820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21756,
											"end": 21820,
											"name": "tag",
											"source": 13,
											"value": "661"
										},
										{
											"begin": 21756,
											"end": 21820,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 21820,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21746,
											"end": 21820,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21701,
											"end": 21830,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21869,
											"end": 21871,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 21895,
											"end": 21959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 21951,
											"end": 21958,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 21942,
											"end": 21948,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 21931,
											"end": 21940,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 21927,
											"end": 21949,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 21895,
											"end": 21959,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 21895,
											"end": 21959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 21895,
											"end": 21959,
											"name": "tag",
											"source": 13,
											"value": "662"
										},
										{
											"begin": 21895,
											"end": 21959,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 21885,
											"end": 21959,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21885,
											"end": 21959,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21840,
											"end": 21969,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22008,
											"end": 22011,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 22035,
											"end": 22098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 22090,
											"end": 22097,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 22081,
											"end": 22087,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22070,
											"end": 22079,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 22066,
											"end": 22088,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22035,
											"end": 22098,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 22035,
											"end": 22098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22035,
											"end": 22098,
											"name": "tag",
											"source": 13,
											"value": "663"
										},
										{
											"begin": 22035,
											"end": 22098,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22025,
											"end": 22098,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22025,
											"end": 22098,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21979,
											"end": 22108,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 21144,
											"end": 22115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22121,
											"end": 22290,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 22121,
											"end": 22290,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22205,
											"end": 22216,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22239,
											"end": 22245,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22234,
											"end": 22237,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22227,
											"end": 22246,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22279,
											"end": 22283,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22274,
											"end": 22277,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22270,
											"end": 22284,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22255,
											"end": 22284,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22255,
											"end": 22284,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22121,
											"end": 22290,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 22121,
											"end": 22290,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22121,
											"end": 22290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22121,
											"end": 22290,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22121,
											"end": 22290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22296,
											"end": 22477,
											"name": "tag",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 22296,
											"end": 22477,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22436,
											"end": 22469,
											"name": "PUSH",
											"source": 13,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 22432,
											"end": 22433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22424,
											"end": 22430,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22420,
											"end": 22434,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22413,
											"end": 22470,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 22296,
											"end": 22477,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22296,
											"end": 22477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22483,
											"end": 22849,
											"name": "tag",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 22483,
											"end": 22849,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22625,
											"end": 22628,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 22646,
											"end": 22713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 22710,
											"end": 22712,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 22705,
											"end": 22708,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 22646,
											"end": 22713,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 22646,
											"end": 22713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22646,
											"end": 22713,
											"name": "tag",
											"source": 13,
											"value": "667"
										},
										{
											"begin": 22646,
											"end": 22713,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22639,
											"end": 22713,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22639,
											"end": 22713,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22722,
											"end": 22815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 22811,
											"end": 22814,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22722,
											"end": 22815,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "393"
										},
										{
											"begin": 22722,
											"end": 22815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22722,
											"end": 22815,
											"name": "tag",
											"source": 13,
											"value": "668"
										},
										{
											"begin": 22722,
											"end": 22815,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 22840,
											"end": 22842,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 22835,
											"end": 22838,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 22831,
											"end": 22843,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 22824,
											"end": 22843,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22824,
											"end": 22843,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22483,
											"end": 22849,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22483,
											"end": 22849,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22483,
											"end": 22849,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22483,
											"end": 22849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 22855,
											"end": 23274,
											"name": "tag",
											"source": 13,
											"value": "281"
										},
										{
											"begin": 22855,
											"end": 23274,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23021,
											"end": 23025,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23059,
											"end": 23061,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23048,
											"end": 23057,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23044,
											"end": 23062,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23036,
											"end": 23062,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23036,
											"end": 23062,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23108,
											"end": 23117,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23102,
											"end": 23106,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23098,
											"end": 23118,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 23094,
											"end": 23095,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23083,
											"end": 23092,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23079,
											"end": 23096,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23072,
											"end": 23119,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 23136,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 23262,
											"end": 23266,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 23136,
											"end": 23267,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "394"
										},
										{
											"begin": 23136,
											"end": 23267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23136,
											"end": 23267,
											"name": "tag",
											"source": 13,
											"value": "670"
										},
										{
											"begin": 23136,
											"end": 23267,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23128,
											"end": 23267,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23128,
											"end": 23267,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22855,
											"end": 23274,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 22855,
											"end": 23274,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 22855,
											"end": 23274,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 22855,
											"end": 23274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23280,
											"end": 23722,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 23280,
											"end": 23722,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23429,
											"end": 23433,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23467,
											"end": 23469,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 23456,
											"end": 23465,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23452,
											"end": 23470,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23444,
											"end": 23470,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23444,
											"end": 23470,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23480,
											"end": 23551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 23548,
											"end": 23549,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23537,
											"end": 23546,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23533,
											"end": 23550,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23524,
											"end": 23530,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 23480,
											"end": 23551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 23480,
											"end": 23551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23480,
											"end": 23551,
											"name": "tag",
											"source": 13,
											"value": "672"
										},
										{
											"begin": 23480,
											"end": 23551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23561,
											"end": 23633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 23629,
											"end": 23631,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 23618,
											"end": 23627,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23614,
											"end": 23632,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23605,
											"end": 23611,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23561,
											"end": 23633,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 23561,
											"end": 23633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23561,
											"end": 23633,
											"name": "tag",
											"source": 13,
											"value": "673"
										},
										{
											"begin": 23561,
											"end": 23633,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23643,
											"end": 23715,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 23711,
											"end": 23713,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23700,
											"end": 23709,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23696,
											"end": 23714,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23687,
											"end": 23693,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23643,
											"end": 23715,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 23643,
											"end": 23715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23643,
											"end": 23715,
											"name": "tag",
											"source": 13,
											"value": "674"
										},
										{
											"begin": 23643,
											"end": 23715,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23280,
											"end": 23722,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 23280,
											"end": 23722,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23280,
											"end": 23722,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23280,
											"end": 23722,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23280,
											"end": 23722,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23280,
											"end": 23722,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23280,
											"end": 23722,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23728,
											"end": 24060,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 23728,
											"end": 24060,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23849,
											"end": 23853,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23887,
											"end": 23889,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 23876,
											"end": 23885,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 23872,
											"end": 23890,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23864,
											"end": 23890,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 23864,
											"end": 23890,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23900,
											"end": 23971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 23968,
											"end": 23969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 23957,
											"end": 23966,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 23953,
											"end": 23970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 23944,
											"end": 23950,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 23900,
											"end": 23971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 23900,
											"end": 23971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23900,
											"end": 23971,
											"name": "tag",
											"source": 13,
											"value": "676"
										},
										{
											"begin": 23900,
											"end": 23971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23981,
											"end": 24053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 24049,
											"end": 24051,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24038,
											"end": 24047,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24034,
											"end": 24052,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24025,
											"end": 24031,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 23981,
											"end": 24053,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 23981,
											"end": 24053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 23981,
											"end": 24053,
											"name": "tag",
											"source": 13,
											"value": "677"
										},
										{
											"begin": 23981,
											"end": 24053,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 23728,
											"end": 24060,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 23728,
											"end": 24060,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 23728,
											"end": 24060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23728,
											"end": 24060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23728,
											"end": 24060,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 23728,
											"end": 24060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24066,
											"end": 24398,
											"name": "tag",
											"source": 13,
											"value": "311"
										},
										{
											"begin": 24066,
											"end": 24398,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24187,
											"end": 24191,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24225,
											"end": 24227,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 24214,
											"end": 24223,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 24210,
											"end": 24228,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24202,
											"end": 24228,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 24202,
											"end": 24228,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24238,
											"end": 24309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 24306,
											"end": 24307,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 24295,
											"end": 24304,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24291,
											"end": 24308,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24282,
											"end": 24288,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 24238,
											"end": 24309,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "348"
										},
										{
											"begin": 24238,
											"end": 24309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24238,
											"end": 24309,
											"name": "tag",
											"source": 13,
											"value": "679"
										},
										{
											"begin": 24238,
											"end": 24309,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24319,
											"end": 24391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 24387,
											"end": 24389,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 24376,
											"end": 24385,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 24372,
											"end": 24390,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 24363,
											"end": 24369,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 24319,
											"end": 24391,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "339"
										},
										{
											"begin": 24319,
											"end": 24391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 24319,
											"end": 24391,
											"name": "tag",
											"source": 13,
											"value": "680"
										},
										{
											"begin": 24319,
											"end": 24391,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 24066,
											"end": 24398,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 24066,
											"end": 24398,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 24066,
											"end": 24398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24066,
											"end": 24398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24066,
											"end": 24398,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 24066,
											"end": 24398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"contracts/1_KipuBankV2.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MAX_WITHDRAW_AMOUNT()": "44ba0ea2",
							"NATIVE_TOKEN()": "31f7d964",
							"USD_FEED_DECIMALS()": "d7128c58",
							"convertWeiToUsd(uint256)": "27281025",
							"createAccount(string,string)": "19289287",
							"deposit()": "d0e30db0",
							"depositToken(address,uint256)": "338b5dea",
							"getBalance(address,address)": "d4fac45d",
							"getDepositCount()": "9363a141",
							"getEthPriceInUsd()": "d67b98a9",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"getWithdrawCount()": "47d04c71",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"i_bankCap()": "f6687af7",
							"i_ethPriceFeed()": "b60fc72e",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"setToken(address,uint8,address,bool)": "4914e2ce",
							"supportsInterface(bytes4)": "01ffc9a7",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawToken(address,uint256)": "9e281a98"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ethPriceFeedAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"bankCap\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Bank_AccountAlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Bank_AccountNotExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Bank_ExceedBankCap\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"limit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"}],\"name\":\"Bank_ExceedWithdrawAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requested\",\"type\":\"uint256\"}],\"name\":\"Bank_InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Bank_InvalidDeposit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Bank_TokenNotSupported\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Bank_TransferError\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bank_Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Bank_Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum KipuBankV2.TokenState\",\"name\":\"state\",\"type\":\"uint8\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAW_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NATIVE_TOKEN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USD_FEED_DECIMALS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"weiAmount\",\"type\":\"uint256\"}],\"name\":\"convertWeiToUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"createAccount\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getDepositCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEthPriceInUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_bankCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_ethPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"priceFeed\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"supported\",\"type\":\"bool\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"Bank_ExceedWithdrawAmount(uint256,uint256)\":[{\"params\":{\"limit\":\"L\\u00edmite m\\u00e1ximo permitido\",\"requested\":\"Monto solicitado\"}}],\"Bank_InsufficientFunds(uint256,uint256)\":[{\"params\":{\"available\":\"Saldo disponible\",\"requested\":\"Monto solicitado\"}}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted to signal this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call. This account bears the admin role (for the granted role). Expected in cases where the role was granted using the internal {AccessControl-_grantRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"bankCap\":\"L\\u00edmite global del banco (USD-feed decimales)\",\"ethPriceFeedAddress\":\"Direcci\\u00f3n del or\\u00e1culo ETH/USD\"}},\"createAccount(string,string)\":{\"params\":{\"email\":\"Email del usuario\",\"name\":\"Nombre del usuario\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"Bank_AccountAlreadyExists()\":[{\"notice\":\"Se lanza si el usuario intenta crear una cuenta que ya existe\"}],\"Bank_AccountNotExists()\":[{\"notice\":\"Se lanza si se opera con una cuenta inexistente\"}],\"Bank_ExceedBankCap()\":[{\"notice\":\"Se lanza si el dep\\u00f3sito excede el l\\u00edmite global\"}],\"Bank_ExceedWithdrawAmount(uint256,uint256)\":[{\"notice\":\"Se lanza si se intenta retirar m\\u00e1s que el l\\u00edmite por transacci\\u00f3n\"}],\"Bank_InsufficientFunds(uint256,uint256)\":[{\"notice\":\"Se lanza si los fondos disponibles son insuficientes\"}],\"Bank_InvalidDeposit()\":[{\"notice\":\"Se lanza cuando el dep\\u00f3sito es inv\\u00e1lido (ej. cero)\"}],\"Bank_TokenNotSupported()\":[{\"notice\":\"Se lanza si el token no es soportado\"}],\"Bank_TransferError()\":[{\"notice\":\"Se lanza si la transferencia de ETH falla\"}]},\"kind\":\"user\",\"methods\":{\"convertWeiToUsd(uint256)\":{\"notice\":\"Convierte wei a USD usando el or\\u00e1culo\"},\"createAccount(string,string)\":{\"notice\":\"Crea cuenta nueva y opcionalmente deposita ETH\"},\"deposit()\":{\"notice\":\"Deposita ETH en la b\\u00f3veda del usuario\"},\"depositToken(address,uint256)\":{\"notice\":\"Deposita tokens ERC20 soportados\"},\"getBalance(address,address)\":{\"notice\":\"Devuelve balance de un usuario para un token\"},\"getDepositCount()\":{\"notice\":\"Devuelve el n\\u00famero total de dep\\u00f3sitos realizados\"},\"getEthPriceInUsd()\":{\"notice\":\"Devuelve precio ETH/USD desde Chainlink\"},\"getWithdrawCount()\":{\"notice\":\"Devuelve el n\\u00famero total de retiros realizados\"},\"setToken(address,uint8,address,bool)\":{\"notice\":\"Agrega o actualiza un token soportado\"},\"withdraw(uint256)\":{\"notice\":\"Retira ETH respetando l\\u00edmite por transacci\\u00f3n\"},\"withdrawToken(address,uint256)\":{\"notice\":\"Retira tokens ERC20 respetando l\\u00edmites\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/1_KipuBankV2.sol\":\"KipuBankV2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://644cff84052e1e82b5bb502b2a46e8f142a62b0db4cd9b38200798ba8373c6f7\",\"dweb:/ipfs/QmTa99QHrJBn3SXDizquPBUiTxVCNKQrHgaWJhuds5Sce2\"]},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x1a6b4f6b7798ab80929d491b89d5427a9b3338c0fd1acd0ba325f69c6f1646af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bb7f346c12a14dc622bc105ce3c47202fbc89f4b153a28a63bb68193297330c\",\"dweb:/ipfs/QmagwF8P3bUBXwdo159ueEnY9dLSvEWwK24kk2op58egwG\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xbff9f59c84e5337689161ce7641c0ef8e872d6a7536fbc1f5133f128887aba3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b308f882e796f7b79c9502deacb0a62983035c6f6f4e962b319ba6a1f4a77d3d\",\"dweb:/ipfs/QmaWCW7ahEQqFjwhSUhV7Ae7WhfNvzSpE7DQ58hvEooqPL\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0xd5ea07362ab630a6a3dee4285a74cf2377044ca2e4be472755ad64d7c5d4b69d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5e832b40fc5c3145d3781e2e5fa60ac2052c9d08af7e300dc8ab80c4343100\",\"dweb:/ipfs/QmTzf7N5ZUdh5raqtzbM11yexiUoLC9z3Ws632MCuycq1d\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x0afcb7e740d1537b252cb2676f600465ce6938398569f09ba1b9ca240dde2dfc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c299900ac4ec268d4570ecef0d697a3013cd11a6eb74e295ee3fbc945056037\",\"dweb:/ipfs/Qmab9owJoxcA7vJT5XNayCMaUR1qxqj1NDzzisduwaJMcZ\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x1a6221315ce0307746c2c4827c125d821ee796c74a676787762f4778671d4f44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1bb2332a7ee26dd0b0de9b7fe266749f54820c99ab6a3bcb6f7e6b751d47ee2d\",\"dweb:/ipfs/QmcRWpaBeCYkhy68PR3B4AgD7asuQk7PwkWxrvJbZcikLF\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x2d9dc2fe26180f74c11c13663647d38e259e45f95eb88f57b61d2160b0109d3e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81233d1f98060113d9922180bb0f14f8335856fe9f339134b09335e9f678c377\",\"dweb:/ipfs/QmWh6R35SarhAn4z2wH8SU456jJSYL2FgucfTFgbHJJN4E\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x8891738ffe910f0cf2da09566928589bf5d63f4524dd734fd9cedbac3274dd5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://971f954442df5c2ef5b5ebf1eb245d7105d9fbacc7386ee5c796df1d45b21617\",\"dweb:/ipfs/QmadRjHbkicwqwwh61raUEapaVEtaLMcYbQZWs9gUkgj3u\"]},\"contracts/1_KipuBankV2.sol\":{\"keccak256\":\"0xa62138b9f6ac7279593a82cf85250a080eb1691ae077312a6fdc4a363c46e4a4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f8ef1fdec37af9453b52f9a0acd308d9777c6d4d2b5510dd76656393dcc57f7\",\"dweb:/ipfs/QmdwKDkWw6SbSCzYtZ7YVi2bZ41p1n4n6U7P9Qbjad3z6d\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)68_storage)"
							},
							{
								"astId": 526,
								"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1252,
								"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
								"label": "accounts",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(Account)1220_storage)"
							},
							{
								"astId": 1258,
								"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
								"label": "balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1263,
								"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
								"label": "tokenCatalog",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(TokenData)1230_storage)"
							},
							{
								"astId": 1265,
								"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
								"label": "s_depositCounter",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1267,
								"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
								"label": "s_withdrawCounter",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1269,
								"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
								"label": "s_totalBankBalance",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(TokenState)1208": {
								"encoding": "inplace",
								"label": "enum KipuBankV2.TokenState",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_struct(Account)1220_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct KipuBankV2.Account)",
								"numberOfBytes": "32",
								"value": "t_struct(Account)1220_storage"
							},
							"t_mapping(t_address,t_struct(TokenData)1230_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct KipuBankV2.TokenData)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenData)1230_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)68_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)68_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Account)1220_storage": {
								"encoding": "inplace",
								"label": "struct KipuBankV2.Account",
								"members": [
									{
										"astId": 1210,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1213,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "name",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1216,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "email",
										"offset": 0,
										"slot": "2",
										"type": "t_string_storage"
									},
									{
										"astId": 1219,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "exists",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(RoleData)68_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 65,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "hasRole",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 67,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(TokenData)1230_storage": {
								"encoding": "inplace",
								"label": "struct KipuBankV2.TokenData",
								"members": [
									{
										"astId": 1223,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "state",
										"offset": 0,
										"slot": "0",
										"type": "t_enum(TokenState)1208"
									},
									{
										"astId": 1226,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "decimals",
										"offset": 1,
										"slot": "0",
										"type": "t_uint8"
									},
									{
										"astId": 1229,
										"contract": "contracts/1_KipuBankV2.sol:KipuBankV2",
										"label": "priceFeed",
										"offset": 2,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"errors": {
							"Bank_AccountAlreadyExists()": [
								{
									"notice": "Se lanza si el usuario intenta crear una cuenta que ya existe"
								}
							],
							"Bank_AccountNotExists()": [
								{
									"notice": "Se lanza si se opera con una cuenta inexistente"
								}
							],
							"Bank_ExceedBankCap()": [
								{
									"notice": "Se lanza si el depósito excede el límite global"
								}
							],
							"Bank_ExceedWithdrawAmount(uint256,uint256)": [
								{
									"notice": "Se lanza si se intenta retirar más que el límite por transacción"
								}
							],
							"Bank_InsufficientFunds(uint256,uint256)": [
								{
									"notice": "Se lanza si los fondos disponibles son insuficientes"
								}
							],
							"Bank_InvalidDeposit()": [
								{
									"notice": "Se lanza cuando el depósito es inválido (ej. cero)"
								}
							],
							"Bank_TokenNotSupported()": [
								{
									"notice": "Se lanza si el token no es soportado"
								}
							],
							"Bank_TransferError()": [
								{
									"notice": "Se lanza si la transferencia de ETH falla"
								}
							]
						},
						"kind": "user",
						"methods": {
							"convertWeiToUsd(uint256)": {
								"notice": "Convierte wei a USD usando el oráculo"
							},
							"createAccount(string,string)": {
								"notice": "Crea cuenta nueva y opcionalmente deposita ETH"
							},
							"deposit()": {
								"notice": "Deposita ETH en la bóveda del usuario"
							},
							"depositToken(address,uint256)": {
								"notice": "Deposita tokens ERC20 soportados"
							},
							"getBalance(address,address)": {
								"notice": "Devuelve balance de un usuario para un token"
							},
							"getDepositCount()": {
								"notice": "Devuelve el número total de depósitos realizados"
							},
							"getEthPriceInUsd()": {
								"notice": "Devuelve precio ETH/USD desde Chainlink"
							},
							"getWithdrawCount()": {
								"notice": "Devuelve el número total de retiros realizados"
							},
							"setToken(address,uint8,address,bool)": {
								"notice": "Agrega o actualiza un token soportado"
							},
							"withdraw(uint256)": {
								"notice": "Retira ETH respetando límite por transacción"
							},
							"withdrawToken(address,uint256)": {
								"notice": "Retira tokens ERC20 respetando límites"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol": {
				"ast": {
					"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
					"exportedSymbols": {
						"AggregatorV3Interface": [
							45
						]
					},
					"id": 46,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "AggregatorV3Interface",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 45,
							"linearizedBaseContracts": [
								45
							],
							"name": "AggregatorV3Interface",
							"nameLocation": "67:21:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "102:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "110:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "136:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 3,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "135:7:0"
									},
									"scope": 45,
									"src": "93:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7284e416",
									"id": 11,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "description",
									"nameLocation": "156:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "167:2:0"
									},
									"returnParameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "193:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 8,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "193:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "192:15:0"
									},
									"scope": 45,
									"src": "147:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "54fd4d50",
									"id": 16,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "version",
									"nameLocation": "221:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "228:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "254:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "254:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "253:9:0"
									},
									"scope": 45,
									"src": "212:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "9a6fc8f5",
									"id": 31,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoundData",
									"nameLocation": "276:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_roundId",
												"nameLocation": "301:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "294:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 17,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "294:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "288:25:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "344:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "337:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 20,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "360:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "353:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 22,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "376:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "395:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "387:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "387:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "413:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 31,
												"src": "406:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 28,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "406:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "336:93:0"
									},
									"scope": 45,
									"src": "267:163:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "feaf968c",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "latestRoundData",
									"nameLocation": "443:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 34,
												"mutability": "mutable",
												"name": "roundId",
												"nameLocation": "503:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "496:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 33,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "answer",
												"nameLocation": "519:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "512:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 35,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "512:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "startedAt",
												"nameLocation": "535:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "527:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "updatedAt",
												"nameLocation": "554:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "546:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 39,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "answeredInRound",
												"nameLocation": "572:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "565:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 41,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "565:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "495:93:0"
									},
									"scope": 45,
									"src": "434:155:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 46,
							"src": "57:534:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:560:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							342
						],
						"Context": [
							1152
						],
						"ERC165": [
							1176
						],
						"IAccessControl": [
							425
						],
						"IERC165": [
							1188
						]
					},
					"id": 343,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 47,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 49,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 426,
							"src": "134:52:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 48,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 425,
										"src": "142:14:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 51,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 1153,
							"src": "187:45:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 50,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1152,
										"src": "195:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 54,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 343,
							"sourceUnit": 1177,
							"src": "233:66:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 52,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "241:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 53,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1176,
										"src": "250:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 56,
										"name": "Context",
										"nameLocations": [
											"1997:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1152,
										"src": "1997:7:1"
									},
									"id": 57,
									"nodeType": "InheritanceSpecifier",
									"src": "1997:7:1"
								},
								{
									"baseName": {
										"id": 58,
										"name": "IAccessControl",
										"nameLocations": [
											"2006:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 425,
										"src": "2006:14:1"
									},
									"id": 59,
									"nodeType": "InheritanceSpecifier",
									"src": "2006:14:1"
								},
								{
									"baseName": {
										"id": 60,
										"name": "ERC165",
										"nameLocations": [
											"2022:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1176,
										"src": "2022:6:1"
									},
									"id": 61,
									"nodeType": "InheritanceSpecifier",
									"src": "2022:6:1"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 55,
								"nodeType": "StructuredDocumentation",
								"src": "301:1660:1",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 342,
							"linearizedBaseContracts": [
								342,
								1176,
								1188,
								425,
								1152
							],
							"name": "AccessControl",
							"nameLocation": "1980:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 68,
									"members": [
										{
											"constant": false,
											"id": 65,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2094:7:1",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "2061:40:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 64,
												"keyName": "account",
												"keyNameLocation": "2077:7:1",
												"keyType": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2061:32:1",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 63,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2088:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 67,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2119:9:1",
											"nodeType": "VariableDeclaration",
											"scope": 68,
											"src": "2111:17:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 66,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2111:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2042:8:1",
									"nodeType": "StructDefinition",
									"scope": 342,
									"src": "2035:100:1",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2183:6:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2141:48:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 72,
										"keyName": "role",
										"keyNameLocation": "2157:4:1",
										"keyType": {
											"id": 69,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2149:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2141:33:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 71,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 70,
												"name": "RoleData",
												"nameLocations": [
													"2165:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 68,
												"src": "2165:8:1"
											},
											"referencedDeclaration": 68,
											"src": "2165:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$68_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 76,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2220:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 342,
									"src": "2196:49:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 74,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2196:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2241:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "2463:44:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 82,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "2484:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 81,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140,
															161
														],
														"referencedDeclaration": 140,
														"src": "2473:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2473:16:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "2473:16:1"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "2499:1:1"
											}
										]
									},
									"documentation": {
										"id": 77,
										"nodeType": "StructuredDocumentation",
										"src": "2252:174:1",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 87,
									"name": "onlyRole",
									"nameLocation": "2440:8:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "2449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 78,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2448:14:1"
									},
									"src": "2431:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1175
									],
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "2632:111:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 96,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 90,
															"src": "2649:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 98,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 425,
																		"src": "2669:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$425_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$425_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 97,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2664:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 99,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2664:20:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$425",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2685:11:1",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2664:32:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2649:47:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 104,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "2724:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 102,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2700:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$342_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2706:17:1",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1175,
															"src": "2700:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2700:36:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2649:87:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 95,
												"id": 107,
												"nodeType": "Return",
												"src": "2642:94:1"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "2513:23:1",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2550:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 92,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2608:8:1"
									},
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2575:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2568:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 89,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2568:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2567:20:1"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 109,
												"src": "2626:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 93,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2626:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2625:6:1"
									},
									"scope": 342,
									"src": "2541:202:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										392
									],
									"body": {
										"id": 126,
										"nodeType": "Block",
										"src": "2913:53:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 119,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "2930:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 121,
															"indexExpression": {
																"id": 120,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 112,
																"src": "2937:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2930:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$68_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 122,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2943:7:1",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 65,
														"src": "2930:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 124,
													"indexExpression": {
														"id": 123,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "2951:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2930:29:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 118,
												"id": 125,
												"nodeType": "Return",
												"src": "2923:36:1"
											}
										]
									},
									"documentation": {
										"id": 110,
										"nodeType": "StructuredDocumentation",
										"src": "2749:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "2839:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2855:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2847:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 111,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2847:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2846:31:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 127,
												"src": "2907:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2907:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2906:6:1"
									},
									"scope": 342,
									"src": "2830:136:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "3231:47:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 134,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 130,
															"src": "3252:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 135,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "3258:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3258:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 133,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															140,
															161
														],
														"referencedDeclaration": 161,
														"src": "3241:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3241:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "3241:30:1"
											}
										]
									},
									"documentation": {
										"id": 128,
										"nodeType": "StructuredDocumentation",
										"src": "2972:198:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3184:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 130,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3203:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "3195:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 129,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3195:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3194:14:1"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3231:0:1"
									},
									"scope": 342,
									"src": "3175:103:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 160,
										"nodeType": "Block",
										"src": "3481:124:1",
										"statements": [
											{
												"condition": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3495:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 149,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 143,
																"src": "3504:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 150,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "3510:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 148,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "3496:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3496:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "IfStatement",
												"src": "3491:108:1",
												"trueBody": {
													"id": 158,
													"nodeType": "Block",
													"src": "3520:79:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 154,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "3574:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 155,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "3583:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 153,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 352,
																	"src": "3541:32:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3541:47:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 157,
															"nodeType": "RevertStatement",
															"src": "3534:54:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "3284:119:1",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3417:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3436:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3428:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 142,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3450:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 161,
												"src": "3442:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3442:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3427:31:1"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3481:0:1"
									},
									"scope": 342,
									"src": "3408:197:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										400
									],
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "3860:46:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 169,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 73,
															"src": "3877:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 171,
														"indexExpression": {
															"id": 170,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 164,
															"src": "3884:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3877:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$68_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3890:9:1",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 67,
													"src": "3877:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 168,
												"id": 173,
												"nodeType": "Return",
												"src": "3870:29:1"
											}
										]
									},
									"documentation": {
										"id": 162,
										"nodeType": "StructuredDocumentation",
										"src": "3611:170:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "3795:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3816:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3808:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 163,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3808:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3807:14:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3851:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 166,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:9:1"
									},
									"scope": 342,
									"src": "3786:120:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										408
									],
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "4296:42:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4317:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 190,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "4323:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 188,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4306:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4306:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "4306:25:1"
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "3912:285:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 184,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4289:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 183,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4276:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4276:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 186,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 182,
												"name": "onlyRole",
												"nameLocations": [
													"4267:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4267:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4267:28:1"
										}
									],
									"name": "grantRole",
									"nameLocation": "4211:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4229:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4221:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 177,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4243:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 194,
												"src": "4235:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4235:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4220:31:1"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4296:0:1"
									},
									"scope": 342,
									"src": "4202:136:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										416
									],
									"body": {
										"id": 212,
										"nodeType": "Block",
										"src": "4713:43:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 208,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4735:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 209,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 199,
															"src": "4741:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 207,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "4723:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4723:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "4723:26:1"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "4344:269:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 203,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 202,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "4693:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4693:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 205,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 201,
												"name": "onlyRole",
												"nameLocations": [
													"4684:8:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "4684:8:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "4684:28:1"
										}
									],
									"name": "revokeRole",
									"nameLocation": "4627:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4646:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4638:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 196,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 213,
												"src": "4652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4637:31:1"
									},
									"returnParameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4713:0:1"
									},
									"scope": 342,
									"src": "4618:138:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										424
									],
									"body": {
										"id": 235,
										"nodeType": "Block",
										"src": "5383:166:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "5397:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 222,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "5419:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5419:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5397:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 229,
												"nodeType": "IfStatement",
												"src": "5393:102:1",
												"trueBody": {
													"id": 228,
													"nodeType": "Block",
													"src": "5433:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 225,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 355,
																	"src": "5454:28:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 226,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5454:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 227,
															"nodeType": "RevertStatement",
															"src": "5447:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 231,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "5517:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 232,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "5523:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 230,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "5505:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5505:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 234,
												"nodeType": "ExpressionStatement",
												"src": "5505:37:1"
											}
										]
									},
									"documentation": {
										"id": 214,
										"nodeType": "StructuredDocumentation",
										"src": "4762:537:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 236,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "5313:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 216,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5334:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5326:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 215,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "5348:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "5340:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5325:42:1"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5383:0:1"
									},
									"scope": 342,
									"src": "5304:245:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 263,
										"nodeType": "Block",
										"src": "5747:174:1",
										"statements": [
											{
												"assignments": [
													245
												],
												"declarations": [
													{
														"constant": false,
														"id": 245,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "5765:17:1",
														"nodeType": "VariableDeclaration",
														"scope": 263,
														"src": "5757:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 244,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "5757:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 247,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5798:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 246,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 175,
														"src": "5785:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5785:18:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5757:46:1"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 250,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "5813:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 252,
															"indexExpression": {
																"id": 251,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 239,
																"src": "5820:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5813:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$68_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5826:9:1",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 67,
														"src": "5813:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 254,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "5838:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "5813:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "5813:34:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 258,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "5879:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 259,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 245,
															"src": "5885:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 260,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "5904:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 257,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "5862:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5862:52:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 262,
												"nodeType": "EmitStatement",
												"src": "5857:57:1"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "5555:114:1",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 264,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "5683:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5705:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5697:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 238,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "5719:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "5711:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 240,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5711:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5696:33:1"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5747:0:1"
									},
									"scope": 342,
									"src": "5674:247:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 302,
										"nodeType": "Block",
										"src": "6238:233:1",
										"statements": [
											{
												"condition": {
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6252:23:1",
													"subExpression": {
														"arguments": [
															{
																"id": 275,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 267,
																"src": "6261:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 276,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "6267:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 274,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 127,
															"src": "6253:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 277,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6253:22:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 300,
													"nodeType": "Block",
													"src": "6428:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6449:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 273,
															"id": 299,
															"nodeType": "Return",
															"src": "6442:12:1"
														}
													]
												},
												"id": 301,
												"nodeType": "IfStatement",
												"src": "6248:217:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "6277:145:1",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 279,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "6291:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 281,
																			"indexExpression": {
																				"id": 280,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 267,
																				"src": "6298:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6291:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$68_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 282,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6304:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 65,
																		"src": "6291:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 284,
																	"indexExpression": {
																		"id": 283,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "6312:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6291:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6323:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "6291:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "6291:36:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 289,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 267,
																		"src": "6358:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 290,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 269,
																		"src": "6364:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 291,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "6373:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 292,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6373:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 288,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 373,
																	"src": "6346:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6346:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 294,
															"nodeType": "EmitStatement",
															"src": "6341:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6407:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 273,
															"id": 296,
															"nodeType": "Return",
															"src": "6400:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 265,
										"nodeType": "StructuredDocumentation",
										"src": "5927:223:1",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 303,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "6164:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6183:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6175:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6175:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6197:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6189:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6189:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6174:31:1"
									},
									"returnParameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "6232:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6232:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6231:6:1"
									},
									"scope": 342,
									"src": "6155:316:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "6792:233:1",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 314,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 306,
															"src": "6814:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 315,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 308,
															"src": "6820:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 313,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "6806:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6806:22:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "6982:37:1",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7003:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 312,
															"id": 337,
															"nodeType": "Return",
															"src": "6996:12:1"
														}
													]
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "6802:217:1",
												"trueBody": {
													"id": 335,
													"nodeType": "Block",
													"src": "6830:146:1",
													"statements": [
														{
															"expression": {
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 317,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "6844:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$68_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 319,
																			"indexExpression": {
																				"id": 318,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 306,
																				"src": "6851:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6844:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$68_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 320,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6857:7:1",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 65,
																		"src": "6844:20:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 322,
																	"indexExpression": {
																		"id": 321,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "6865:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6844:29:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6876:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "6844:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 325,
															"nodeType": "ExpressionStatement",
															"src": "6844:37:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 327,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 306,
																		"src": "6912:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 328,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 308,
																		"src": "6918:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 329,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "6927:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6927:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 326,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "6900:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6900:40:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 332,
															"nodeType": "EmitStatement",
															"src": "6895:45:1"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6961:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 312,
															"id": 334,
															"nodeType": "Return",
															"src": "6954:11:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "6477:226:1",
										"text": " @dev Attempts to revoke `role` from `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "6717:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 309,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6737:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6729:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 305,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6729:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6751:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6743:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6743:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6728:31:1"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "6786:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6786:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6785:6:1"
									},
									"scope": 342,
									"src": "6708:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 343,
							"src": "1962:5065:1",
							"usedErrors": [
								352,
								355
							],
							"usedEvents": [
								364,
								373,
								382
							]
						}
					],
					"src": "108:6920:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							425
						]
					},
					"id": 426,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 344,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "135:90:2",
								"text": " @dev External interface of AccessControl declared to support ERC-165 detection."
							},
							"fullyImplemented": false,
							"id": 425,
							"linearizedBaseContracts": [
								425
							],
							"name": "IAccessControl",
							"nameLocation": "236:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "257:56:2",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 352,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "324:32:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "365:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "357:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "357:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "382:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "374:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 349,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "374:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "356:37:2"
									},
									"src": "318:76:2"
								},
								{
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "400:148:2",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 355,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "559:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "587:2:2"
									},
									"src": "553:37:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "596:254:2",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted to signal this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 364,
									"name": "RoleAdminChanged",
									"nameLocation": "861:16:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "894:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "878:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "878:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "916:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "900:33:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "951:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "935:28:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 361,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "877:87:2"
									},
									"src": "855:110:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "971:295:2",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call. This account bears the admin role (for the granted role).\n Expected in cases where the role was granted using the internal {AccessControl-_grantRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 373,
									"name": "RoleGranted",
									"nameLocation": "1277:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1305:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1289:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 366,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 369,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1327:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1311:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1311:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1352:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "1336:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1288:71:2"
									},
									"src": "1271:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "1366:275:2",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 382,
									"name": "RoleRevoked",
									"nameLocation": "1652:11:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1680:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1664:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 375,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1702:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1686:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1686:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 380,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1727:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "1711:22:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:71:2"
									},
									"src": "1646:89:2"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "1741:76:2",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1831:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1847:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1839:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 384,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1861:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1853:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:2"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "1893:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 389,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1893:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:6:2"
									},
									"scope": 425,
									"src": "1822:77:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "1905:184:2",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 400,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2103:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2124:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2116:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 394,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2116:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2115:14:2"
									},
									"returnParameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "2153:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 397,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2152:9:2"
									},
									"scope": 425,
									"src": "2094:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "2168:239:2",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 408,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2421:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2439:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2431:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 402,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2453:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "2445:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2445:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2430:31:2"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:2"
									},
									"scope": 425,
									"src": "2412:59:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "2477:223:2",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 416,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2714:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2733:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2725:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 410,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2747:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 416,
												"src": "2739:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2724:31:2"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2764:0:2"
									},
									"scope": 425,
									"src": "2705:60:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "2771:491:2",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 424,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3297:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3289:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 418,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3289:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3311:18:2",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3303:26:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 420,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3303:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:42:2"
									},
									"returnParameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3339:0:2"
									},
									"scope": 425,
									"src": "3267:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 426,
							"src": "226:3116:2",
							"usedErrors": [
								352,
								355
							],
							"usedEvents": [
								364,
								373,
								382
							]
						}
					],
					"src": "109:3234:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							507
						],
						"IERC165": [
							1188
						],
						"IERC20": [
							658
						]
					},
					"id": 508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 427,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 429,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 516,
							"src": "133:36:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 428,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "141:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 431,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 508,
							"sourceUnit": 512,
							"src": "170:38:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 430,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "178:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 433,
										"name": "IERC20",
										"nameLocations": [
											"590:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 658,
										"src": "590:6:3"
									},
									"id": 434,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:3"
								},
								{
									"baseName": {
										"id": 435,
										"name": "IERC165",
										"nameLocations": [
											"598:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "598:7:3"
									},
									"id": 436,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:3"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 432,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:3",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 507,
							"linearizedBaseContracts": [
								507,
								1188,
								658
							],
							"name": "IERC1363",
							"nameLocation": "578:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 437,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1548:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1560:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:3"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "1593:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:3"
									},
									"scope": 507,
									"src": "1523:76:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 458,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2088:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2100:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2115:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 452,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:3"
									},
									"returnParameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "2154:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 455,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:3"
									},
									"scope": 507,
									"src": "2063:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 470,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 466,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2653:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2667:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2679:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:3"
									},
									"returnParameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 470,
												"src": "2712:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 467,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:3"
									},
									"scope": 507,
									"src": "2624:94:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3294:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3308:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3320:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3335:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:3"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "3374:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 481,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:3"
									},
									"scope": 507,
									"src": "3265:115:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3805:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3822:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:3"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "3855:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 491,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:3"
									},
									"scope": 507,
									"src": "3781:80:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4374:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4391:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4406:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 500,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:3"
									},
									"returnParameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 506,
												"src": "4445:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 503,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:3"
									},
									"scope": 507,
									"src": "4350:101:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 508,
							"src": "568:3885:3",
							"usedErrors": [],
							"usedEvents": [
								592,
								601
							]
						}
					],
					"src": "107:4347:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1188
						]
					},
					"id": 512,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 509,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 511,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 512,
							"sourceUnit": 1189,
							"src": "133:59:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 510,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:87:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							658
						]
					},
					"id": 516,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 513,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "105:25:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 515,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 516,
							"sourceUnit": 659,
							"src": "132:49:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 514,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "140:6:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:77:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							580
						]
					},
					"id": 581,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 517,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 518,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 580,
							"linearizedBaseContracts": [
								580
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 521,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 519,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 520,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 524,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 523,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 526,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 580,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 525,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 533,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 529,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 530,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 532,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 534,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 580,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 537,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 560,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 538,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 539,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 540,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 541,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 568,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 543,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 535,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 545,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 559,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 526,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 550,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 524,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 555,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 556,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 558,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 580,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 567,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 563,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 564,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 521,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 566,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 568,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 580,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 574,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 575,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 524,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 573,
												"id": 577,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 571,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 580,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 581,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							658
						]
					},
					"id": 659,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 582,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 583,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 658,
							"linearizedBaseContracts": [
								658
							],
							"name": "IERC20",
							"nameLocation": "215:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 592,
									"name": "Transfer",
									"nameLocation": "397:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "406:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "428:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 592,
												"src": "448:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:7"
									},
									"src": "391:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 593,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 601,
									"name": "Approval",
									"nameLocation": "628:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "637:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 594,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 597,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "660:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 596,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "685:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:7"
									},
									"src": "622:78:7"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 607,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:7"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "822:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:7"
									},
									"scope": 658,
									"src": "776:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "932:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:7"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "972:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:7"
									},
									"scope": 658,
									"src": "913:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 625,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1223:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1235:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:7"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 625,
												"src": "1268:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:7"
									},
									"scope": 658,
									"src": "1205:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1568:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1583:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:7"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "1623:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:7"
									},
									"scope": 658,
									"src": "1549:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 645,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2327:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2344:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:7"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 645,
												"src": "2377:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:7"
									},
									"scope": 658,
									"src": "2310:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 646,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 657,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2713:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2727:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2739:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:7"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 657,
												"src": "2772:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 654,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:7"
									},
									"scope": 658,
									"src": "2691:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 659,
							"src": "205:2575:7",
							"usedErrors": [],
							"usedEvents": [
								592,
								601
							]
						}
					],
					"src": "106:2675:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							507
						],
						"IERC20": [
							658
						],
						"SafeERC20": [
							1122
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 660,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 662,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 659,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 661,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 658,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 664,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 508,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 663,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 507,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1122,
							"linearizedBaseContracts": [
								1122
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 670,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 670,
												"src": "823:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:8"
									},
									"src": "792:46:8"
								},
								{
									"documentation": {
										"id": 671,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 679,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "959:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "976:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 679,
												"src": "1002:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:8"
									},
									"src": "920:109:8"
								},
								{
									"body": {
										"id": 702,
										"nodeType": "Block",
										"src": "1291:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "1321:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 694,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 683,
																		"src": "1343:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 625,
																	"src": "1343:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 696,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 685,
																			"src": "1360:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 687,
																			"src": "1364:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 698,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 692,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1301:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:8"
											}
										]
									},
									"documentation": {
										"id": 680,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 703,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1241:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 682,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 681,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1241:6:8"
													},
													"referencedDeclaration": 658,
													"src": "1241:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 703,
												"src": "1267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:8"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:8"
									},
									"scope": 1122,
									"src": "1219:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "1708:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "1738:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 720,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 707,
																		"src": "1760:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "1760:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 722,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "1781:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 723,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 711,
																			"src": "1787:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 724,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 713,
																			"src": "1791:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 725,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 718,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1080,
														"src": "1718:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 728,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:8"
											}
										]
									},
									"documentation": {
										"id": 704,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1644:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 706,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 705,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1644:6:8"
													},
													"referencedDeclaration": 658,
													"src": "1644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1658:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1672:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 730,
												"src": "1684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:8"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:8"
									},
									"scope": 1122,
									"src": "1618:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 755,
										"nodeType": "Block",
										"src": "2033:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 744,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "2074:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 747,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 734,
																		"src": "2096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 748,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 625,
																	"src": "2096:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 749,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 736,
																			"src": "2113:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 750,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 738,
																			"src": "2117:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 751,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 745,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 743,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2050:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 742,
												"id": 754,
												"nodeType": "Return",
												"src": "2043:82:8"
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:8",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1968:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 733,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 732,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "1968:6:8"
													},
													"referencedDeclaration": 658,
													"src": "1968:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1982:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "1994:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:8"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "2027:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 740,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:8"
									},
									"scope": 1122,
									"src": "1943:189:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 784,
										"nodeType": "Block",
										"src": "2381:109:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 772,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 760,
															"src": "2422:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 775,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 760,
																		"src": "2444:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 657,
																	"src": "2444:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 777,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 762,
																			"src": "2465:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 778,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "2471:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 779,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "2475:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 780,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 773,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 774,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 771,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1121,
														"src": "2398:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 770,
												"id": 783,
												"nodeType": "Return",
												"src": "2391:92:8"
											}
										]
									},
									"documentation": {
										"id": 757,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:8",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 785,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2302:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 759,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 758,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "2302:6:8"
													},
													"referencedDeclaration": 658,
													"src": "2302:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2316:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2330:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2342:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:8"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "2375:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 768,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:8"
									},
									"scope": 1122,
									"src": "2273:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 815,
										"nodeType": "Block",
										"src": "3232:139:8",
										"statements": [
											{
												"assignments": [
													797
												],
												"declarations": [
													{
														"constant": false,
														"id": 797,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 815,
														"src": "3242:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 796,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 806,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 802,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1122",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1122",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 801,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 800,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 804,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3296:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 798,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "3265:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														"id": 799,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 635,
														"src": "3265:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "3327:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 809,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "3334:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "3343:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 811,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "3358:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 807,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 906,
														"src": "3314:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 814,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:8"
											}
										]
									},
									"documentation": {
										"id": 786,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 816,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "3177:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 788,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 787,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "3177:6:8"
													},
													"referencedDeclaration": 658,
													"src": "3177:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "3191:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 816,
												"src": "3208:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:8"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:8"
									},
									"scope": 1122,
									"src": "3146:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "4137:370:8",
										"statements": [
											{
												"id": 857,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:8",
												"statements": [
													{
														"assignments": [
															828
														],
														"declarations": [
															{
																"constant": false,
																"id": 828,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 857,
																"src": "4171:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 827,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 837,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 833,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1122",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1122",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 831,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 835,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "4229:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "4198:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 635,
																"src": "4198:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 838,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "4255:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 839,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "4274:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 848,
														"nodeType": "IfStatement",
														"src": "4251:160:8",
														"trueBody": {
															"id": 847,
															"nodeType": "Block",
															"src": "4293:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 842,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 822,
																				"src": "4351:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 843,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 828,
																				"src": "4360:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 844,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 824,
																				"src": "4378:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 841,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 679,
																			"src": "4318:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 846,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 850,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "4437:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 851,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "4444:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 852,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "4453:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 853,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 824,
																		"src": "4472:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$658",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 849,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 906,
																"src": "4424:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 856,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 817,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4070:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 819,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 818,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "4070:6:8"
													},
													"referencedDeclaration": 658,
													"src": "4070:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4084:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "4101:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:8"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:8"
									},
									"scope": 1122,
									"src": "4039:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "5161:303:8",
										"statements": [
											{
												"assignments": [
													871
												],
												"declarations": [
													{
														"constant": false,
														"id": 871,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 905,
														"src": "5171:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 870,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 880,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 874,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5214:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																}
															},
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 645,
															"src": "5214:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 876,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "5230:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 877,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 867,
																	"src": "5239:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 878,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 872,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:8"
											},
											{
												"condition": {
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 882,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 863,
																"src": "5286:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 883,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 871,
																"src": "5293:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$658",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 881,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1121,
															"src": "5262:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 884,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "5257:201:8",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "5308:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 887,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5342:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 890,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 863,
																					"src": "5364:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$658",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 645,
																				"src": "5364:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 892,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 865,
																						"src": "5380:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 893,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 894,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 888,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 889,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 895,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 886,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "5322:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 897,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 899,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 863,
																		"src": "5427:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 900,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "5434:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$658",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 898,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "5407:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5106:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 862,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 861,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "5106:6:8"
													},
													"referencedDeclaration": 658,
													"src": "5106:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5120:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "5137:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:8"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:8"
									},
									"scope": 1122,
									"src": "5084:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "5911:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 919,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 912,
																"src": "5925:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 921,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 937,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 933,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 912,
																	"src": "6034:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 914,
																	"src": "6038:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 935,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "6045:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 931,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "6012:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 458,
																"src": "6012:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 946,
													"nodeType": "IfStatement",
													"src": "6007:117:8",
													"trueBody": {
														"id": 945,
														"nodeType": "Block",
														"src": "6052:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 941,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 910,
																					"src": "6106:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 939,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 938,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "6073:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 944,
																"nodeType": "RevertStatement",
																"src": "6066:47:8"
															}
														]
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "5921:203:8",
												"trueBody": {
													"id": 930,
													"nodeType": "Block",
													"src": "5946:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 925,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "5973:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 926,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "5980:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 927,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "5984:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 924,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 703,
																	"src": "5960:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 929,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5840:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 909,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 908,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "5840:8:8"
													},
													"referencedDeclaration": 507,
													"src": "5840:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5856:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "5883:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 915,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:8"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:8"
									},
									"scope": 1122,
									"src": "5808:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "6649:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 964,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 957,
																"src": "6663:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 966,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 979,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 955,
																	"src": "6786:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 980,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "6792:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 981,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "6796:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 982,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "6803:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 977,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 953,
																	"src": "6760:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 484,
																"src": "6760:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 993,
													"nodeType": "IfStatement",
													"src": "6755:127:8",
													"trueBody": {
														"id": 992,
														"nodeType": "Block",
														"src": "6810:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 988,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 953,
																					"src": "6864:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 987,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 986,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 985,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "6831:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 991,
																"nodeType": "RevertStatement",
																"src": "6824:47:8"
															}
														]
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "6659:223:8",
												"trueBody": {
													"id": 976,
													"nodeType": "Block",
													"src": "6684:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 970,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "6715:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 971,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "6722:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 972,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 957,
																		"src": "6728:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 973,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 959,
																		"src": "6732:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 969,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 730,
																	"src": "6698:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 975,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 950,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6527:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 952,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 951,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "6527:8:8"
													},
													"referencedDeclaration": 507,
													"src": "6527:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6551:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6573:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6593:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "6616:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 960,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:8"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:8"
									},
									"scope": 1122,
									"src": "6482:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "7655:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1009,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "7669:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1012,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 1027,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 1023,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1002,
																	"src": "7777:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1024,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1004,
																	"src": "7781:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1025,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1006,
																	"src": "7788:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 1021,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1000,
																	"src": "7756:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$507",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 506,
																"src": "7756:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1036,
													"nodeType": "IfStatement",
													"src": "7751:116:8",
													"trueBody": {
														"id": 1035,
														"nodeType": "Block",
														"src": "7795:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1031,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1000,
																					"src": "7849:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$507",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 1030,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1029,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1032,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1028,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 670,
																		"src": "7816:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 1033,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1034,
																"nodeType": "RevertStatement",
																"src": "7809:47:8"
															}
														]
													}
												},
												"id": 1037,
												"nodeType": "IfStatement",
												"src": "7665:202:8",
												"trueBody": {
													"id": 1020,
													"nodeType": "Block",
													"src": "7690:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1015,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1000,
																		"src": "7717:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 1016,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1002,
																		"src": "7724:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1017,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "7728:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$507",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1014,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "7704:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1019,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1007,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "7584:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$507",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 999,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 998,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 507,
														"src": "7584:8:8"
													},
													"referencedDeclaration": 507,
													"src": "7584:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$507",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "7600:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "7612:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "7627:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1005,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:8"
									},
									"returnParameters": {
										"id": 1008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:8"
									},
									"scope": 1122,
									"src": "7553:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1079,
										"nodeType": "Block",
										"src": "8440:650:8",
										"statements": [
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "8450:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1050,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:8"
											},
											{
												"assignments": [
													1052
												],
												"declarations": [
													{
														"constant": false,
														"id": 1052,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1079,
														"src": "8478:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1051,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:8"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:8",
													"nodeType": "YulBlock",
													"src": "8532:396:8",
													"statements": [
														{
															"nativeSrc": "8546:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:8"
																		},
																		"nativeSrc": "8566:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:8",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:8"
																		},
																		"nativeSrc": "8583:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:8"
																		},
																		"nativeSrc": "8600:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:8"
																},
																"nativeSrc": "8561:60:8",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:8",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:8",
																"nodeType": "YulBlock",
																"src": "8682:157:8",
																"statements": [
																	{
																		"nativeSrc": "8700:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:8"
																			},
																			"nativeSrc": "8711:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:8"
																					},
																					"nativeSrc": "8762:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:8"
																			},
																			"nativeSrc": "8739:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:8"
																		},
																		"nativeSrc": "8739:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:8"
																					},
																					"nativeSrc": "8808:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:8"
																			},
																			"nativeSrc": "8796:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:8"
																		},
																		"nativeSrc": "8796:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:8"
																},
																"nativeSrc": "8666:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:8"
															},
															"nativeSrc": "8663:176:8",
															"nodeType": "YulIf",
															"src": "8663:176:8"
														},
														{
															"nativeSrc": "8852:30:8",
															"nodeType": "YulAssignment",
															"src": "8852:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:8"
																},
																"nativeSrc": "8866:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:8"
																}
															]
														},
														{
															"nativeSrc": "8895:23:8",
															"nodeType": "YulAssignment",
															"src": "8895:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:8"
																},
																"nativeSrc": "8910:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1045,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1049,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1052,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1043,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1054,
												"nodeType": "InlineAssembly",
												"src": "8507:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1057,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1055,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "8942:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1066,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "8994:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1060,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1043,
																			"src": "8968:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$658",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$658",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1059,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1058,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1064,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1078,
												"nodeType": "IfStatement",
												"src": "8938:146:8",
												"trueBody": {
													"id": 1077,
													"nodeType": "Block",
													"src": "9012:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1073,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1043,
																				"src": "9066:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$658",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$658",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1071,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1070,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "9033:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1076,
															"nodeType": "RevertStatement",
															"src": "9026:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1040,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 1080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "8399:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1042,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1041,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "8399:6:8"
													},
													"referencedDeclaration": 658,
													"src": "8399:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1080,
												"src": "8413:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1044,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:8"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:8"
									},
									"scope": 1122,
									"src": "8370:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1120,
										"nodeType": "Block",
										"src": "9681:391:8",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "9691:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1091,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1093,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:8"
											},
											{
												"assignments": [
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "9713:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1094,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:8"
											},
											{
												"assignments": [
													1098
												],
												"declarations": [
													{
														"constant": false,
														"id": 1098,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1120,
														"src": "9741:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1097,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1099,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:8",
													"nodeType": "YulBlock",
													"src": "9795:174:8",
													"statements": [
														{
															"nativeSrc": "9809:71:8",
															"nodeType": "YulAssignment",
															"src": "9809:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:8"
																		},
																		"nativeSrc": "9825:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:8"
																		},
																		"nativeSrc": "9842:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:8"
																		},
																		"nativeSrc": "9859:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:8"
																},
																"nativeSrc": "9820:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:8"
																}
															]
														},
														{
															"nativeSrc": "9893:30:8",
															"nodeType": "YulAssignment",
															"src": "9893:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:8"
																},
																"nativeSrc": "9907:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:8"
																}
															]
														},
														{
															"nativeSrc": "9936:23:8",
															"nodeType": "YulAssignment",
															"src": "9936:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:8"
																},
																"nativeSrc": "9951:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1086,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1086,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1095,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1098,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1092,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1084,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1100,
												"nodeType": "InlineAssembly",
												"src": "9770:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1101,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "9985:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1102,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1095,
																		"src": "9997:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1113,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1098,
																		"src": "10048:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1107,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1084,
																						"src": "10023:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$658",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$658",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1106,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1105,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1111,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1119,
												"nodeType": "Return",
												"src": "9978:87:8"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "9625:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$658",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1083,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1082,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 658,
														"src": "9625:6:8"
													},
													"referencedDeclaration": 658,
													"src": "9625:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$658",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "9639:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1085,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:8"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "9675:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1088,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:8"
									},
									"scope": 1122,
									"src": "9592:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1123,
							"src": "698:9376:8",
							"usedErrors": [
								670,
								679
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1152
						]
					},
					"id": 1153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1125,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1152,
							"linearizedBaseContracts": [
								1152
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1130,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1132,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1152,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1139,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1141,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1152,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1147,
												"id": 1149,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1152,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1153,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1176
						],
						"IERC165": [
							1188
						]
					},
					"id": 1177,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1177,
							"sourceUnit": 1189,
							"src": "140:38:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1155,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1188,
										"src": "148:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1158,
										"name": "IERC165",
										"nameLocations": [
											"688:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1188,
										"src": "688:7:10"
									},
									"id": 1159,
									"nodeType": "InheritanceSpecifier",
									"src": "688:7:10"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1157,
								"nodeType": "StructuredDocumentation",
								"src": "180:479:10",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1176,
							"linearizedBaseContracts": [
								1176,
								1188
							],
							"name": "ERC165",
							"nameLocation": "678:6:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1187
									],
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "812:64:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1167,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1162,
														"src": "829:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1169,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1188_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1188_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1168,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "844:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1170,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "844:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1188",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1171,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "858:11:10",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "844:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "829:40:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1166,
												"id": 1173,
												"nodeType": "Return",
												"src": "822:47:10"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "702:23:10",
										"text": "@inheritdoc IERC165"
									},
									"functionSelector": "01ffc9a7",
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "739:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "764:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "757:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1161,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "757:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "756:20:10"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "806:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1164,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "806:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:6:10"
									},
									"scope": 1176,
									"src": "730:146:10",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1177,
							"src": "660:218:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:765:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1188
						]
					},
					"id": 1189,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1178,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "115:25:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1179,
								"nodeType": "StructuredDocumentation",
								"src": "142:280:11",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1188,
							"linearizedBaseContracts": [
								1188
							],
							"name": "IERC165",
							"nameLocation": "433:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "447:340:11",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "801:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "826:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "819:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1181,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "819:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:20:11"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "862:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1184,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:6:11"
									},
									"scope": 1188,
									"src": "792:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1189,
							"src": "423:447:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:756:11"
				},
				"id": 11
			},
			"contracts/1_KipuBankV2.sol": {
				"ast": {
					"absolutePath": "contracts/1_KipuBankV2.sol",
					"exportedSymbols": {
						"AccessControl": [
							342
						],
						"AggregatorV3Interface": [
							45
						],
						"Context": [
							1152
						],
						"ERC165": [
							1176
						],
						"IAccessControl": [
							425
						],
						"IERC1363": [
							507
						],
						"IERC165": [
							1188
						],
						"IERC20": [
							658
						],
						"KipuBankV2": [
							1857
						],
						"ReentrancyGuard": [
							580
						],
						"SafeERC20": [
							1122
						]
					},
					"id": 1858,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1190,
							"literals": [
								"solidity",
								"0.8",
								".26"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1191,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1858,
							"sourceUnit": 343,
							"src": "283:58:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1192,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1858,
							"sourceUnit": 581,
							"src": "342:62:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1193,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1858,
							"sourceUnit": 1123,
							"src": "405:65:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
							"id": 1194,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1858,
							"sourceUnit": 46,
							"src": "471:76:12",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1195,
										"name": "AccessControl",
										"nameLocations": [
											"572:13:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 342,
										"src": "572:13:12"
									},
									"id": 1196,
									"nodeType": "InheritanceSpecifier",
									"src": "572:13:12"
								},
								{
									"baseName": {
										"id": 1197,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"587:15:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 580,
										"src": "587:15:12"
									},
									"id": 1198,
									"nodeType": "InheritanceSpecifier",
									"src": "587:15:12"
								}
							],
							"canonicalName": "KipuBankV2",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1857,
							"linearizedBaseContracts": [
								1857,
								580,
								342,
								1176,
								1188,
								425,
								1152
							],
							"name": "KipuBankV2",
							"nameLocation": "558:10:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1202,
									"libraryName": {
										"id": 1199,
										"name": "SafeERC20",
										"nameLocations": [
											"615:9:12"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "615:9:12"
									},
									"nodeType": "UsingForDirective",
									"src": "609:27:12",
									"typeName": {
										"id": 1201,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1200,
											"name": "IERC20",
											"nameLocations": [
												"629:6:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 658,
											"src": "629:6:12"
										},
										"referencedDeclaration": 658,
										"src": "629:6:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$658",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 1205,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "814:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "790:55:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1203,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "790:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"id": 1204,
										"name": "DEFAULT_ADMIN_ROLE",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 76,
										"src": "827:18:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "KipuBankV2.TokenState",
									"id": 1208,
									"members": [
										{
											"id": 1206,
											"name": "Unsupported",
											"nameLocation": "1018:11:12",
											"nodeType": "EnumValue",
											"src": "1018:11:12"
										},
										{
											"id": 1207,
											"name": "Supported",
											"nameLocation": "1031:9:12",
											"nodeType": "EnumValue",
											"src": "1031:9:12"
										}
									],
									"name": "TokenState",
									"nameLocation": "1005:10:12",
									"nodeType": "EnumDefinition",
									"src": "1000:42:12"
								},
								{
									"canonicalName": "KipuBankV2.Account",
									"id": 1220,
									"members": [
										{
											"constant": false,
											"id": 1210,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "1081:7:12",
											"nodeType": "VariableDeclaration",
											"scope": 1220,
											"src": "1073:15:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1209,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1073:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1213,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "1151:4:12",
											"nodeType": "VariableDeclaration",
											"scope": 1220,
											"src": "1144:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1212,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1144:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1216,
											"mutability": "mutable",
											"name": "email",
											"nameLocation": "1209:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1220,
											"src": "1202:12:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1215,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1202:6:12",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1219,
											"mutability": "mutable",
											"name": "exists",
											"nameLocation": "1264:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1220,
											"src": "1259:11:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1218,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1259:4:12",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Account",
									"nameLocation": "1055:7:12",
									"nodeType": "StructDefinition",
									"scope": 1857,
									"src": "1048:278:12",
									"visibility": "public"
								},
								{
									"canonicalName": "KipuBankV2.TokenData",
									"id": 1230,
									"members": [
										{
											"constant": false,
											"id": 1223,
											"mutability": "mutable",
											"name": "state",
											"nameLocation": "1370:5:12",
											"nodeType": "VariableDeclaration",
											"scope": 1230,
											"src": "1359:16:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_TokenState_$1208",
												"typeString": "enum KipuBankV2.TokenState"
											},
											"typeName": {
												"id": 1222,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1221,
													"name": "TokenState",
													"nameLocations": [
														"1359:10:12"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1208,
													"src": "1359:10:12"
												},
												"referencedDeclaration": 1208,
												"src": "1359:10:12",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_TokenState_$1208",
													"typeString": "enum KipuBankV2.TokenState"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1226,
											"mutability": "mutable",
											"name": "decimals",
											"nameLocation": "1438:8:12",
											"nodeType": "VariableDeclaration",
											"scope": 1230,
											"src": "1432:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1225,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "1432:5:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1229,
											"mutability": "mutable",
											"name": "priceFeed",
											"nameLocation": "1499:9:12",
											"nodeType": "VariableDeclaration",
											"scope": 1230,
											"src": "1491:17:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1228,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1491:7:12",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenData",
									"nameLocation": "1339:9:12",
									"nodeType": "StructDefinition",
									"scope": 1857,
									"src": "1332:236:12",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d7128c58",
									"id": 1233,
									"mutability": "constant",
									"name": "USD_FEED_DECIMALS",
									"nameLocation": "1764:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "1740:47:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1740:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "316538",
										"id": 1232,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1784:3:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000_by_1",
											"typeString": "int_const 100000000"
										},
										"value": "1e8"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "44ba0ea2",
									"id": 1236,
									"mutability": "constant",
									"name": "MAX_WITHDRAW_AMOUNT",
									"nameLocation": "1855:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "1831:55:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1234,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1831:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "302e31",
										"id": 1235,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1877:9:12",
										"subdenomination": "ether",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100000000000000000_by_1",
											"typeString": "int_const 100000000000000000"
										},
										"value": "0.1"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "31f7d964",
									"id": 1242,
									"mutability": "constant",
									"name": "NATIVE_TOKEN",
									"nameLocation": "1944:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "1920:49:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1237,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1920:7:12",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30",
												"id": 1240,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "1967:1:12",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												},
												"value": "0"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_0_by_1",
													"typeString": "int_const 0"
												}
											],
											"id": 1239,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1959:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 1238,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1959:7:12",
												"typeDescriptions": {}
											}
										},
										"id": 1241,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1959:10:12",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f6687af7",
									"id": 1244,
									"mutability": "immutable",
									"name": "i_bankCap",
									"nameLocation": "2023:9:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "1998:34:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1998:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b60fc72e",
									"id": 1247,
									"mutability": "immutable",
									"name": "i_ethPriceFeed",
									"nameLocation": "2125:14:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2086:53:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
										"typeString": "contract AggregatorV3Interface"
									},
									"typeName": {
										"id": 1246,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1245,
											"name": "AggregatorV3Interface",
											"nameLocations": [
												"2086:21:12"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 45,
											"src": "2086:21:12"
										},
										"referencedDeclaration": 45,
										"src": "2086:21:12",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
											"typeString": "contract AggregatorV3Interface"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1252,
									"mutability": "mutable",
									"name": "accounts",
									"nameLocation": "2351:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2315:44:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
										"typeString": "mapping(address => struct KipuBankV2.Account)"
									},
									"typeName": {
										"id": 1251,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1248,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2323:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2315:27:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
											"typeString": "mapping(address => struct KipuBankV2.Account)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1250,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1249,
												"name": "Account",
												"nameLocations": [
													"2334:7:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1220,
												"src": "2334:7:12"
											},
											"referencedDeclaration": 1220,
											"src": "2334:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Account_$1220_storage_ptr",
												"typeString": "struct KipuBankV2.Account"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1258,
									"mutability": "mutable",
									"name": "balances",
									"nameLocation": "2464:8:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2408:64:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1257,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1253,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2416:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2408:47:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1256,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 1254,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2435:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2427:27:12",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1255,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2446:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1263,
									"mutability": "mutable",
									"name": "tokenCatalog",
									"nameLocation": "2549:12:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2511:50:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$1230_storage_$",
										"typeString": "mapping(address => struct KipuBankV2.TokenData)"
									},
									"typeName": {
										"id": 1262,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1259,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2519:7:12",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2511:29:12",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$1230_storage_$",
											"typeString": "mapping(address => struct KipuBankV2.TokenData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1261,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1260,
												"name": "TokenData",
												"nameLocations": [
													"2530:9:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1230,
												"src": "2530:9:12"
											},
											"referencedDeclaration": 1230,
											"src": "2530:9:12",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenData_$1230_storage_ptr",
												"typeString": "struct KipuBankV2.TokenData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1265,
									"mutability": "mutable",
									"name": "s_depositCounter",
									"nameLocation": "2621:16:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2605:32:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1264,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2605:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1267,
									"mutability": "mutable",
									"name": "s_withdrawCounter",
									"nameLocation": "2659:17:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2643:33:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1266,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2643:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1269,
									"mutability": "mutable",
									"name": "s_totalBankBalance",
									"nameLocation": "2698:18:12",
									"nodeType": "VariableDeclaration",
									"scope": 1857,
									"src": "2682:34:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1268,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2682:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "01ece9c685ac991a7352754de4bb96f7d41fdbc35b4bc423326539149879c008",
									"id": 1277,
									"name": "Bank_Deposit",
									"nameLocation": "2879:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1271,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2908:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2892:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2892:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1273,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2930:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2914:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2914:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1275,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2945:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1277,
												"src": "2937:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2937:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2891:61:12"
									},
									"src": "2873:80:12"
								},
								{
									"anonymous": false,
									"eventSelector": "c8b1e2a9be32ce8c5fe81b6681739e4a0016bf546706482b49989431fe3d55ee",
									"id": 1285,
									"name": "Bank_Withdraw",
									"nameLocation": "2964:13:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2994:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2978:20:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2978:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3016:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "3000:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3031:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "3023:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2977:61:12"
									},
									"src": "2958:81:12"
								},
								{
									"anonymous": false,
									"eventSelector": "243c26e9467b186d248bf33b7722de99a559aceda24c02928c2636071be4d992",
									"id": 1292,
									"name": "TokenUpdated",
									"nameLocation": "3050:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3079:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3063:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3063:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"indexed": false,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "3097:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3086:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_TokenState_$1208",
													"typeString": "enum KipuBankV2.TokenState"
												},
												"typeName": {
													"id": 1289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1288,
														"name": "TokenState",
														"nameLocations": [
															"3086:10:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1208,
														"src": "3086:10:12"
													},
													"referencedDeclaration": 1208,
													"src": "3086:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_TokenState_$1208",
														"typeString": "enum KipuBankV2.TokenState"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3062:41:12"
									},
									"src": "3044:60:12"
								},
								{
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "3260:73:12",
										"text": "@notice Se lanza si el usuario intenta crear una cuenta que ya existe"
									},
									"errorSelector": "78455977",
									"id": 1295,
									"name": "Bank_AccountAlreadyExists",
									"nameLocation": "3344:25:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3369:2:12"
									},
									"src": "3338:34:12"
								},
								{
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "3378:59:12",
										"text": "@notice Se lanza si se opera con una cuenta inexistente"
									},
									"errorSelector": "566b0440",
									"id": 1298,
									"name": "Bank_AccountNotExists",
									"nameLocation": "3448:21:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3469:2:12"
									},
									"src": "3442:30:12"
								},
								{
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "3478:61:12",
										"text": "@notice Se lanza si el depósito excede el límite global"
									},
									"errorSelector": "97651d1e",
									"id": 1301,
									"name": "Bank_ExceedBankCap",
									"nameLocation": "3550:18:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3568:2:12"
									},
									"src": "3544:27:12"
								},
								{
									"documentation": {
										"id": 1302,
										"nodeType": "StructuredDocumentation",
										"src": "3577:168:12",
										"text": "@notice Se lanza si se intenta retirar más que el límite por transacción\n @param limit Límite máximo permitido\n @param requested Monto solicitado"
									},
									"errorSelector": "d859cbba",
									"id": 1308,
									"name": "Bank_ExceedWithdrawAmount",
									"nameLocation": "3756:25:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "limit",
												"nameLocation": "3790:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3782:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3782:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "requested",
												"nameLocation": "3805:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3797:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1305,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3797:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3781:34:12"
									},
									"src": "3750:66:12"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "3822:148:12",
										"text": "@notice Se lanza si los fondos disponibles son insuficientes\n @param available Saldo disponible\n @param requested Monto solicitado"
									},
									"errorSelector": "70e6417b",
									"id": 1315,
									"name": "Bank_InsufficientFunds",
									"nameLocation": "3981:22:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "4012:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "4004:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "requested",
												"nameLocation": "4031:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "4023:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4023:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:38:12"
									},
									"src": "3975:67:12"
								},
								{
									"documentation": {
										"id": 1316,
										"nodeType": "StructuredDocumentation",
										"src": "4048:64:12",
										"text": "@notice Se lanza cuando el depósito es inválido (ej. cero)"
									},
									"errorSelector": "78038442",
									"id": 1318,
									"name": "Bank_InvalidDeposit",
									"nameLocation": "4123:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4142:2:12"
									},
									"src": "4117:28:12"
								},
								{
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "4151:53:12",
										"text": "@notice Se lanza si la transferencia de ETH falla"
									},
									"errorSelector": "bd6bfd0a",
									"id": 1321,
									"name": "Bank_TransferError",
									"nameLocation": "4215:18:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4233:2:12"
									},
									"src": "4209:27:12"
								},
								{
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "4242:48:12",
										"text": "@notice Se lanza si el token no es soportado"
									},
									"errorSelector": "56949521",
									"id": 1324,
									"name": "Bank_TokenNotSupported",
									"nameLocation": "4301:22:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4323:2:12"
									},
									"src": "4295:31:12"
								},
								{
									"body": {
										"id": 1348,
										"nodeType": "Block",
										"src": "4680:149:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1333,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "4701:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4713:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4717:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4713:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1332,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "4690:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 1336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4690:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1337,
												"nodeType": "ExpressionStatement",
												"src": "4690:34:12"
											},
											{
												"expression": {
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1338,
														"name": "i_ethPriceFeed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "4734:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1340,
																"name": "ethPriceFeedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "4773:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1339,
															"name": "AggregatorV3Interface",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "4751:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
																"typeString": "type(contract AggregatorV3Interface)"
															}
														},
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4751:42:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
															"typeString": "contract AggregatorV3Interface"
														}
													},
													"src": "4734:59:12",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
														"typeString": "contract AggregatorV3Interface"
													}
												},
												"id": 1343,
												"nodeType": "ExpressionStatement",
												"src": "4734:59:12"
											},
											{
												"expression": {
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1344,
														"name": "i_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "4803:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1345,
														"name": "bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1329,
														"src": "4815:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4803:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1347,
												"nodeType": "ExpressionStatement",
												"src": "4803:19:12"
											}
										]
									},
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "4486:131:12",
										"text": "@param ethPriceFeedAddress Dirección del oráculo ETH/USD\n @param bankCap Límite global del banco (USD-feed decimales)"
									},
									"id": 1349,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "ethPriceFeedAddress",
												"nameLocation": "4642:19:12",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4634:27:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "bankCap",
												"nameLocation": "4671:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1349,
												"src": "4663:15:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4663:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4633:46:12"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4680:0:12"
									},
									"scope": 1857,
									"src": "4622:207:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1387,
										"nodeType": "Block",
										"src": "5198:265:12",
										"statements": [
											{
												"expression": {
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1364,
															"name": "tokenCatalog",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "5208:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$1230_storage_$",
																"typeString": "mapping(address => struct KipuBankV2.TokenData storage ref)"
															}
														},
														"id": 1366,
														"indexExpression": {
															"id": 1365,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "5221:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5208:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenData_$1230_storage",
															"typeString": "struct KipuBankV2.TokenData storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"condition": {
																	"id": 1368,
																	"name": "supported",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1358,
																	"src": "5261:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"expression": {
																		"id": 1371,
																		"name": "TokenState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "5296:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_TokenState_$1208_$",
																			"typeString": "type(enum KipuBankV2.TokenState)"
																		}
																	},
																	"id": 1372,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5307:11:12",
																	"memberName": "Unsupported",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1206,
																	"src": "5296:22:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_TokenState_$1208",
																		"typeString": "enum KipuBankV2.TokenState"
																	}
																},
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "5261:57:12",
																"trueExpression": {
																	"expression": {
																		"id": 1369,
																		"name": "TokenState",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1208,
																		"src": "5273:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_TokenState_$1208_$",
																			"typeString": "type(enum KipuBankV2.TokenState)"
																		}
																	},
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "5284:9:12",
																	"memberName": "Supported",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1207,
																	"src": "5273:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_TokenState_$1208",
																		"typeString": "enum KipuBankV2.TokenState"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_TokenState_$1208",
																	"typeString": "enum KipuBankV2.TokenState"
																}
															},
															{
																"id": 1374,
																"name": "decimals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "5342:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 1375,
																"name": "priceFeed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1356,
																"src": "5375:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_TokenState_$1208",
																	"typeString": "enum KipuBankV2.TokenState"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1367,
															"name": "TokenData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1230,
															"src": "5230:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_TokenData_$1230_storage_ptr_$",
																"typeString": "type(struct KipuBankV2.TokenData storage pointer)"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"5254:5:12",
															"5332:8:12",
															"5364:9:12"
														],
														"names": [
															"state",
															"decimals",
															"priceFeed"
														],
														"nodeType": "FunctionCall",
														"src": "5230:165:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenData_$1230_memory_ptr",
															"typeString": "struct KipuBankV2.TokenData memory"
														}
													},
													"src": "5208:187:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenData_$1230_storage",
														"typeString": "struct KipuBankV2.TokenData storage ref"
													}
												},
												"id": 1378,
												"nodeType": "ExpressionStatement",
												"src": "5208:187:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1380,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "5423:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1381,
																	"name": "tokenCatalog",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1263,
																	"src": "5430:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$1230_storage_$",
																		"typeString": "mapping(address => struct KipuBankV2.TokenData storage ref)"
																	}
																},
																"id": 1383,
																"indexExpression": {
																	"id": 1382,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "5443:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5430:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_TokenData_$1230_storage",
																	"typeString": "struct KipuBankV2.TokenData storage ref"
																}
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5450:5:12",
															"memberName": "state",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1223,
															"src": "5430:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_TokenState_$1208",
																"typeString": "enum KipuBankV2.TokenState"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_enum$_TokenState_$1208",
																"typeString": "enum KipuBankV2.TokenState"
															}
														],
														"id": 1379,
														"name": "TokenUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1292,
														"src": "5410:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_enum$_TokenState_$1208_$returns$__$",
															"typeString": "function (address,enum KipuBankV2.TokenState)"
														}
													},
													"id": 1385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5410:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1386,
												"nodeType": "EmitStatement",
												"src": "5405:51:12"
											}
										]
									},
									"documentation": {
										"id": 1350,
										"nodeType": "StructuredDocumentation",
										"src": "4992:49:12",
										"text": "@notice Agrega o actualiza un token soportado"
									},
									"functionSelector": "4914e2ce",
									"id": 1388,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1361,
													"name": "ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1205,
													"src": "5186:10:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 1362,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1360,
												"name": "onlyRole",
												"nameLocations": [
													"5177:8:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "5177:8:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "5177:20:12"
										}
									],
									"name": "setToken",
									"nameLocation": "5055:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5081:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "5073:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5073:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "decimals",
												"nameLocation": "5102:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "5096:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1353,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5096:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "priceFeed",
												"nameLocation": "5128:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "5120:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "supported",
												"nameLocation": "5152:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1388,
												"src": "5147:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1357,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5147:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5063:104:12"
									},
									"returnParameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5198:0:12"
									},
									"scope": 1857,
									"src": "5046:417:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "5854:568:12",
										"statements": [
											{
												"condition": {
													"expression": {
														"baseExpression": {
															"id": 1396,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "5868:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
																"typeString": "mapping(address => struct KipuBankV2.Account storage ref)"
															}
														},
														"id": 1399,
														"indexExpression": {
															"expression": {
																"id": 1397,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5877:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5881:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5877:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5868:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Account_$1220_storage",
															"typeString": "struct KipuBankV2.Account storage ref"
														}
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5889:6:12",
													"memberName": "exists",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1219,
													"src": "5868:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "5864:67:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1401,
															"name": "Bank_AccountAlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "5904:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5904:27:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1403,
													"nodeType": "RevertStatement",
													"src": "5897:34:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1408,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1405,
															"name": "s_totalBankBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "5945:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1406,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5966:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5970:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5966:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5945:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1409,
														"name": "i_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "5978:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5945:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1414,
												"nodeType": "IfStatement",
												"src": "5941:75:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1411,
															"name": "Bank_ExceedBankCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "5996:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5996:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1413,
													"nodeType": "RevertStatement",
													"src": "5989:27:12"
												}
											},
											{
												"expression": {
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1415,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "6027:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
																"typeString": "mapping(address => struct KipuBankV2.Account storage ref)"
															}
														},
														"id": 1418,
														"indexExpression": {
															"expression": {
																"id": 1416,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6036:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6040:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6036:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6027:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Account_$1220_storage",
															"typeString": "struct KipuBankV2.Account storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1420,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6081:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"id": 1421,
																"name": "email",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1391,
																"src": "6103:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 1422,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1393,
																"src": "6128:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"hexValue": "74727565",
																"id": 1423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6154:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 1419,
															"name": "Account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "6050:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Account_$1220_storage_ptr_$",
																"typeString": "type(struct KipuBankV2.Account storage pointer)"
															}
														},
														"id": 1424,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"6072:7:12",
															"6096:5:12",
															"6122:4:12",
															"6146:6:12"
														],
														"names": [
															"balance",
															"email",
															"name",
															"exists"
														],
														"nodeType": "FunctionCall",
														"src": "6050:119:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Account_$1220_memory_ptr",
															"typeString": "struct KipuBankV2.Account memory"
														}
													},
													"src": "6027:142:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Account_$1220_storage",
														"typeString": "struct KipuBankV2.Account storage ref"
													}
												},
												"id": 1426,
												"nodeType": "ExpressionStatement",
												"src": "6027:142:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1427,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6184:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6184:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6196:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6184:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1458,
												"nodeType": "IfStatement",
												"src": "6180:236:12",
												"trueBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "6199:217:12",
													"statements": [
														{
															"expression": {
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1431,
																			"name": "balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1258,
																			"src": "6213:8:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 1435,
																		"indexExpression": {
																			"expression": {
																				"id": 1432,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "6222:3:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6226:6:12",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "6222:10:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6213:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1436,
																	"indexExpression": {
																		"id": 1434,
																		"name": "NATIVE_TOKEN",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "6234:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6213:34:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1437,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6251:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6255:5:12",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "6251:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6213:47:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1440,
															"nodeType": "ExpressionStatement",
															"src": "6213:47:12"
														},
														{
															"expression": {
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1441,
																	"name": "s_totalBankBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "6274:18:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 1442,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6296:3:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6300:5:12",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "6296:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6274:31:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1445,
															"nodeType": "ExpressionStatement",
															"src": "6274:31:12"
														},
														{
															"expression": {
																"id": 1447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "6319:18:12",
																"subExpression": {
																	"id": 1446,
																	"name": "s_depositCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1265,
																	"src": "6319:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1448,
															"nodeType": "ExpressionStatement",
															"src": "6319:18:12"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1450,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6369:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6373:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6369:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1452,
																		"name": "NATIVE_TOKEN",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1242,
																		"src": "6381:12:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1453,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6395:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6399:5:12",
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"src": "6395:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1449,
																	"name": "Bank_Deposit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "6356:12:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6356:49:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1456,
															"nodeType": "EmitStatement",
															"src": "6351:54:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1389,
										"nodeType": "StructuredDocumentation",
										"src": "5632:136:12",
										"text": "@notice Crea cuenta nueva y opcionalmente deposita ETH\n @param email Email del usuario\n @param name Nombre del usuario"
									},
									"functionSelector": "19289287",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createAccount",
									"nameLocation": "5782:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1391,
												"mutability": "mutable",
												"name": "email",
												"nameLocation": "5810:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "5796:19:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5796:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "5831:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "5817:18:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1392,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5795:41:12"
									},
									"returnParameters": {
										"id": 1395,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5854:0:12"
									},
									"scope": 1857,
									"src": "5773:649:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "6519:415:12",
										"statements": [
											{
												"condition": {
													"id": 1469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "6533:28:12",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1464,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "6534:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
																	"typeString": "mapping(address => struct KipuBankV2.Account storage ref)"
																}
															},
															"id": 1467,
															"indexExpression": {
																"expression": {
																	"id": 1465,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6543:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6547:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6543:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6534:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$1220_storage",
																"typeString": "struct KipuBankV2.Account storage ref"
															}
														},
														"id": 1468,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6555:6:12",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "6534:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"nodeType": "IfStatement",
												"src": "6529:64:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1470,
															"name": "Bank_AccountNotExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "6570:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6570:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1472,
													"nodeType": "RevertStatement",
													"src": "6563:30:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1474,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6607:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6611:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6607:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6620:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6607:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1481,
												"nodeType": "IfStatement",
												"src": "6603:48:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1478,
															"name": "Bank_InvalidDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "6630:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6630:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1480,
													"nodeType": "RevertStatement",
													"src": "6623:28:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1485,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1482,
															"name": "s_totalBankBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "6665:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"expression": {
																"id": 1483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6686:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6690:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6686:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6665:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1486,
														"name": "i_bankCap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1244,
														"src": "6698:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6665:42:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1491,
												"nodeType": "IfStatement",
												"src": "6661:75:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1488,
															"name": "Bank_ExceedBankCap",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1301,
															"src": "6716:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1489,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6716:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1490,
													"nodeType": "RevertStatement",
													"src": "6709:27:12"
												}
											},
											{
												"expression": {
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1492,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "6747:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1496,
															"indexExpression": {
																"expression": {
																	"id": 1493,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6756:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6760:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6756:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6747:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1497,
														"indexExpression": {
															"id": 1495,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "6768:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6747:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1498,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6785:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6789:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6785:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6747:47:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1501,
												"nodeType": "ExpressionStatement",
												"src": "6747:47:12"
											},
											{
												"expression": {
													"id": 1505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1502,
														"name": "s_totalBankBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "6804:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 1503,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6826:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1504,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6830:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6826:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6804:31:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1506,
												"nodeType": "ExpressionStatement",
												"src": "6804:31:12"
											},
											{
												"expression": {
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "6845:18:12",
													"subExpression": {
														"id": 1507,
														"name": "s_depositCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "6845:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1509,
												"nodeType": "ExpressionStatement",
												"src": "6845:18:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1511,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6891:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6895:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6891:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1513,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "6903:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1514,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6917:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6921:5:12",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6917:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1510,
														"name": "Bank_Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "6878:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6878:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "EmitStatement",
												"src": "6873:54:12"
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "6428:50:12",
										"text": "@notice Deposita ETH en la bóveda del usuario"
									},
									"functionSelector": "d0e30db0",
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "6492:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6499:2:12"
									},
									"returnParameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6519:0:12"
									},
									"scope": 1857,
									"src": "6483:451:12",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "7051:471:12",
										"statements": [
											{
												"condition": {
													"id": 1532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7065:28:12",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1527,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "7066:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
																	"typeString": "mapping(address => struct KipuBankV2.Account storage ref)"
																}
															},
															"id": 1530,
															"indexExpression": {
																"expression": {
																	"id": 1528,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7075:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7079:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7075:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7066:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$1220_storage",
																"typeString": "struct KipuBankV2.Account storage ref"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7087:6:12",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "7066:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1536,
												"nodeType": "IfStatement",
												"src": "7061:64:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1533,
															"name": "Bank_AccountNotExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "7102:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7102:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1535,
													"nodeType": "RevertStatement",
													"src": "7095:30:12"
												}
											},
											{
												"assignments": [
													1539
												],
												"declarations": [
													{
														"constant": false,
														"id": 1539,
														"mutability": "mutable",
														"name": "td",
														"nameLocation": "7152:2:12",
														"nodeType": "VariableDeclaration",
														"scope": 1592,
														"src": "7135:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenData_$1230_memory_ptr",
															"typeString": "struct KipuBankV2.TokenData"
														},
														"typeName": {
															"id": 1538,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1537,
																"name": "TokenData",
																"nameLocations": [
																	"7135:9:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1230,
																"src": "7135:9:12"
															},
															"referencedDeclaration": 1230,
															"src": "7135:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenData_$1230_storage_ptr",
																"typeString": "struct KipuBankV2.TokenData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1543,
												"initialValue": {
													"baseExpression": {
														"id": 1540,
														"name": "tokenCatalog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "7157:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$1230_storage_$",
															"typeString": "mapping(address => struct KipuBankV2.TokenData storage ref)"
														}
													},
													"id": 1542,
													"indexExpression": {
														"id": 1541,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1522,
														"src": "7170:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7157:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenData_$1230_storage",
														"typeString": "struct KipuBankV2.TokenData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7135:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_TokenState_$1208",
														"typeString": "enum KipuBankV2.TokenState"
													},
													"id": 1548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1544,
															"name": "td",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "7190:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenData_$1230_memory_ptr",
																"typeString": "struct KipuBankV2.TokenData memory"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7193:5:12",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1223,
														"src": "7190:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TokenState_$1208",
															"typeString": "enum KipuBankV2.TokenState"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1546,
															"name": "TokenState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "7202:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_TokenState_$1208_$",
																"typeString": "type(enum KipuBankV2.TokenState)"
															}
														},
														"id": 1547,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7213:9:12",
														"memberName": "Supported",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "7202:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TokenState_$1208",
															"typeString": "enum KipuBankV2.TokenState"
														}
													},
													"src": "7190:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1552,
												"nodeType": "IfStatement",
												"src": "7186:69:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1549,
															"name": "Bank_TokenNotSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "7231:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7231:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1551,
													"nodeType": "RevertStatement",
													"src": "7224:31:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1553,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "7269:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7279:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7269:11:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1559,
												"nodeType": "IfStatement",
												"src": "7265:45:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1556,
															"name": "Bank_InvalidDeposit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "7289:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7289:21:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1558,
													"nodeType": "RevertStatement",
													"src": "7282:28:12"
												}
											},
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1560,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "7321:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1564,
															"indexExpression": {
																"expression": {
																	"id": 1561,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7330:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7334:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7330:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7321:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1565,
														"indexExpression": {
															"id": 1563,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7342:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "7321:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1566,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1524,
														"src": "7352:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7321:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "7321:37:12"
											},
											{
												"expression": {
													"id": 1570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "7368:18:12",
													"subExpression": {
														"id": 1569,
														"name": "s_depositCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1265,
														"src": "7368:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1571,
												"nodeType": "ExpressionStatement",
												"src": "7368:18:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1576,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7427:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7431:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7427:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1580,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7447:4:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_KipuBankV2_$1857",
																		"typeString": "contract KipuBankV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_KipuBankV2_$1857",
																		"typeString": "contract KipuBankV2"
																	}
																],
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7439:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1578,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7439:7:12",
																	"typeDescriptions": {}
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7439:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1582,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "7454:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1573,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1522,
																	"src": "7403:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1572,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "7396:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$658_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1574,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7396:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7410:16:12",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 730,
														"src": "7396:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$658_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:65:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1584,
												"nodeType": "ExpressionStatement",
												"src": "7396:65:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1586,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7489:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1587,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7493:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7489:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1588,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "7501:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1589,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "7508:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1585,
														"name": "Bank_Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "7476:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7476:39:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1591,
												"nodeType": "EmitStatement",
												"src": "7471:44:12"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "6940:44:12",
										"text": "@notice Deposita tokens ERC20 soportados"
									},
									"functionSelector": "338b5dea",
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositToken",
									"nameLocation": "6998:12:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7019:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "7011:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7011:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7034:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "7026:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7026:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7010:31:12"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7051:0:12"
									},
									"scope": 1857,
									"src": "6989:533:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1680,
										"nodeType": "Block",
										"src": "7797:645:12",
										"statements": [
											{
												"condition": {
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7811:28:12",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1601,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "7812:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
																	"typeString": "mapping(address => struct KipuBankV2.Account storage ref)"
																}
															},
															"id": 1604,
															"indexExpression": {
																"expression": {
																	"id": 1602,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7821:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7825:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7821:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7812:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$1220_storage",
																"typeString": "struct KipuBankV2.Account storage ref"
															}
														},
														"id": 1605,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7833:6:12",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "7812:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1610,
												"nodeType": "IfStatement",
												"src": "7807:64:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1607,
															"name": "Bank_AccountNotExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "7848:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7848:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1609,
													"nodeType": "RevertStatement",
													"src": "7841:30:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1611,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "7885:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1612,
														"name": "MAX_WITHDRAW_AMOUNT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "7894:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7885:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1619,
												"nodeType": "IfStatement",
												"src": "7881:95:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1615,
																"name": "MAX_WITHDRAW_AMOUNT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "7948:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1616,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "7969:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1614,
															"name": "Bank_ExceedWithdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "7922:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7922:54:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1618,
													"nodeType": "RevertStatement",
													"src": "7915:61:12"
												}
											},
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "7994:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1680,
														"src": "7986:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7986:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1622,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "8008:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1625,
														"indexExpression": {
															"expression": {
																"id": 1623,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8017:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8021:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8017:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8008:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1627,
													"indexExpression": {
														"id": 1626,
														"name": "NATIVE_TOKEN",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1242,
														"src": "8029:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8008:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:56:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1629,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "8056:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1630,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "8070:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8056:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "8052:76:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1633,
																"name": "userBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1621,
																"src": "8108:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1634,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "8121:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1632,
															"name": "Bank_InsufficientFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "8085:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8085:43:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1636,
													"nodeType": "RevertStatement",
													"src": "8078:50:12"
												}
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1638,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "8139:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1642,
															"indexExpression": {
																"expression": {
																	"id": 1639,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8148:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8152:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8148:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8139:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1643,
														"indexExpression": {
															"id": 1641,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "8160:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8139:34:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1644,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "8177:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8139:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "8139:44:12"
											},
											{
												"expression": {
													"id": 1649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1647,
														"name": "s_totalBankBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "8193:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1648,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "8215:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8193:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1650,
												"nodeType": "ExpressionStatement",
												"src": "8193:28:12"
											},
											{
												"expression": {
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "8231:19:12",
													"subExpression": {
														"id": 1651,
														"name": "s_withdrawCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "8231:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1653,
												"nodeType": "ExpressionStatement",
												"src": "8231:19:12"
											},
											{
												"assignments": [
													1655,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1655,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8267:7:12",
														"nodeType": "VariableDeclaration",
														"scope": 1680,
														"src": "8262:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1654,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8262:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1666,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8319:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1658,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "8287:3:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8291:6:12",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "8287:10:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8279:8:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 1656,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8279:8:12",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8279:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8299:4:12",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8279:24:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1663,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1662,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1596,
																"src": "8311:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8279:39:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8279:43:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:61:12"
											},
											{
												"condition": {
													"id": 1668,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8336:8:12",
													"subExpression": {
														"id": 1667,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1655,
														"src": "8337:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1672,
												"nodeType": "IfStatement",
												"src": "8332:41:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1669,
															"name": "Bank_TransferError",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "8353:18:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8353:20:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1671,
													"nodeType": "RevertStatement",
													"src": "8346:27:12"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1674,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8402:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8406:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8402:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "NATIVE_TOKEN",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1242,
															"src": "8414:12:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1677,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1596,
															"src": "8428:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1673,
														"name": "Bank_Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "8388:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8388:47:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "EmitStatement",
												"src": "8383:52:12"
											}
										]
									},
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "7678:58:12",
										"text": "@notice Retira ETH respetando límite por transacción"
									},
									"functionSelector": "2e1a7d4d",
									"id": 1681,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1599,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1598,
												"name": "nonReentrant",
												"nameLocations": [
													"7784:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "7784:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "7784:12:12"
										}
									],
									"name": "withdraw",
									"nameLocation": "7750:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7767:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1681,
												"src": "7759:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7759:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7758:16:12"
									},
									"returnParameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7797:0:12"
									},
									"scope": 1857,
									"src": "7741:701:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "8580:650:12",
										"statements": [
											{
												"condition": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "8594:28:12",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1691,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "8595:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
																	"typeString": "mapping(address => struct KipuBankV2.Account storage ref)"
																}
															},
															"id": 1694,
															"indexExpression": {
																"expression": {
																	"id": 1692,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "8604:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8608:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "8604:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8595:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$1220_storage",
																"typeString": "struct KipuBankV2.Account storage ref"
															}
														},
														"id": 1695,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8616:6:12",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "8595:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1700,
												"nodeType": "IfStatement",
												"src": "8590:64:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1697,
															"name": "Bank_AccountNotExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "8631:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8631:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1699,
													"nodeType": "RevertStatement",
													"src": "8624:30:12"
												}
											},
											{
												"assignments": [
													1703
												],
												"declarations": [
													{
														"constant": false,
														"id": 1703,
														"mutability": "mutable",
														"name": "td",
														"nameLocation": "8681:2:12",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "8664:19:12",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenData_$1230_memory_ptr",
															"typeString": "struct KipuBankV2.TokenData"
														},
														"typeName": {
															"id": 1702,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1701,
																"name": "TokenData",
																"nameLocations": [
																	"8664:9:12"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1230,
																"src": "8664:9:12"
															},
															"referencedDeclaration": 1230,
															"src": "8664:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenData_$1230_storage_ptr",
																"typeString": "struct KipuBankV2.TokenData"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1707,
												"initialValue": {
													"baseExpression": {
														"id": 1704,
														"name": "tokenCatalog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1263,
														"src": "8686:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_TokenData_$1230_storage_$",
															"typeString": "mapping(address => struct KipuBankV2.TokenData storage ref)"
														}
													},
													"id": 1706,
													"indexExpression": {
														"id": 1705,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "8699:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8686:19:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenData_$1230_storage",
														"typeString": "struct KipuBankV2.TokenData storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8664:41:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_TokenState_$1208",
														"typeString": "enum KipuBankV2.TokenState"
													},
													"id": 1712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1708,
															"name": "td",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "8719:2:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenData_$1230_memory_ptr",
																"typeString": "struct KipuBankV2.TokenData memory"
															}
														},
														"id": 1709,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8722:5:12",
														"memberName": "state",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1223,
														"src": "8719:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TokenState_$1208",
															"typeString": "enum KipuBankV2.TokenState"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1710,
															"name": "TokenState",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "8731:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_TokenState_$1208_$",
																"typeString": "type(enum KipuBankV2.TokenState)"
															}
														},
														"id": 1711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8742:9:12",
														"memberName": "Supported",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1207,
														"src": "8731:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_TokenState_$1208",
															"typeString": "enum KipuBankV2.TokenState"
														}
													},
													"src": "8719:32:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1716,
												"nodeType": "IfStatement",
												"src": "8715:69:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1713,
															"name": "Bank_TokenNotSupported",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "8760:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1714,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8760:24:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1715,
													"nodeType": "RevertStatement",
													"src": "8753:31:12"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1717,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "8798:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1718,
														"name": "MAX_WITHDRAW_AMOUNT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "8807:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8798:28:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "8794:95:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1721,
																"name": "MAX_WITHDRAW_AMOUNT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "8861:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1722,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "8882:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1720,
															"name": "Bank_ExceedWithdrawAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1308,
															"src": "8835:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8835:54:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1724,
													"nodeType": "RevertStatement",
													"src": "8828:61:12"
												}
											},
											{
												"assignments": [
													1727
												],
												"declarations": [
													{
														"constant": false,
														"id": 1727,
														"mutability": "mutable",
														"name": "userBalance",
														"nameLocation": "8908:11:12",
														"nodeType": "VariableDeclaration",
														"scope": 1772,
														"src": "8900:19:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1726,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8900:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1734,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1728,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "8922:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1731,
														"indexExpression": {
															"expression": {
																"id": 1729,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8931:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8935:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8931:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8922:20:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1733,
													"indexExpression": {
														"id": 1732,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1684,
														"src": "8943:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "8922:27:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8900:49:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1735,
														"name": "userBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "8963:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1736,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "8977:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8963:20:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1743,
												"nodeType": "IfStatement",
												"src": "8959:76:12",
												"trueBody": {
													"errorCall": {
														"arguments": [
															{
																"id": 1739,
																"name": "userBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1727,
																"src": "9015:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1740,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1686,
																"src": "9028:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1738,
															"name": "Bank_InsufficientFunds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "8992:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																"typeString": "function (uint256,uint256) pure returns (error)"
															}
														},
														"id": 1741,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8992:43:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1742,
													"nodeType": "RevertStatement",
													"src": "8985:50:12"
												}
											},
											{
												"expression": {
													"id": 1751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1744,
																"name": "balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1258,
																"src": "9046:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1748,
															"indexExpression": {
																"expression": {
																	"id": 1745,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "9055:3:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "9059:6:12",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "9055:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9046:20:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1749,
														"indexExpression": {
															"id": 1747,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "9067:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9046:27:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1750,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1686,
														"src": "9077:6:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9046:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1752,
												"nodeType": "ExpressionStatement",
												"src": "9046:37:12"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "9093:19:12",
													"subExpression": {
														"id": 1753,
														"name": "s_withdrawCounter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1267,
														"src": "9093:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "9093:19:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9149:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9153:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9149:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1762,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "9161:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1757,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1684,
																	"src": "9129:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1756,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "9122:6:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$658_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9122:13:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$658",
																"typeString": "contract IERC20"
															}
														},
														"id": 1759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9136:12:12",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 703,
														"src": "9122:26:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$658_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$658_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9122:46:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1764,
												"nodeType": "ExpressionStatement",
												"src": "9122:46:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1766,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "9197:3:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9201:6:12",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "9197:10:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1768,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1684,
															"src": "9209:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1769,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "9216:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1765,
														"name": "Bank_Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1285,
														"src": "9183:13:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9183:40:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "EmitStatement",
												"src": "9178:45:12"
											}
										]
									},
									"documentation": {
										"id": 1682,
										"nodeType": "StructuredDocumentation",
										"src": "8448:51:12",
										"text": "@notice Retira tokens ERC20 respetando límites"
									},
									"functionSelector": "9e281a98",
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1689,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1688,
												"name": "nonReentrant",
												"nameLocations": [
													"8567:12:12"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 545,
												"src": "8567:12:12"
											},
											"nodeType": "ModifierInvocation",
											"src": "8567:12:12"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "8513:13:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1684,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8535:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "8527:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8527:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8550:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "8542:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8542:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8526:31:12"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8580:0:12"
									},
									"scope": 1857,
									"src": "8504:726:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "9539:113:12",
										"statements": [
											{
												"condition": {
													"id": 1787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "9553:22:12",
													"subExpression": {
														"expression": {
															"baseExpression": {
																"id": 1783,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1252,
																"src": "9554:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Account_$1220_storage_$",
																	"typeString": "mapping(address => struct KipuBankV2.Account storage ref)"
																}
															},
															"id": 1785,
															"indexExpression": {
																"id": 1784,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "9563:4:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9554:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Account_$1220_storage",
																"typeString": "struct KipuBankV2.Account storage ref"
															}
														},
														"id": 1786,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9569:6:12",
														"memberName": "exists",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1219,
														"src": "9554:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1791,
												"nodeType": "IfStatement",
												"src": "9549:58:12",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1788,
															"name": "Bank_AccountNotExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "9584:21:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 1789,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9584:23:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 1790,
													"nodeType": "RevertStatement",
													"src": "9577:30:12"
												}
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1792,
															"name": "balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1258,
															"src": "9624:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 1794,
														"indexExpression": {
															"id": 1793,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1776,
															"src": "9633:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "9624:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1796,
													"indexExpression": {
														"id": 1795,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1778,
														"src": "9639:5:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9624:21:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1782,
												"id": 1797,
												"nodeType": "Return",
												"src": "9617:28:12"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "9398:56:12",
										"text": "@notice Devuelve balance de un usuario para un token"
									},
									"functionSelector": "d4fac45d",
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "9468:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9487:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "9479:12:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9479:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9501:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "9493:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1777,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9493:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9478:29:12"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1799,
												"src": "9530:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9530:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9529:9:12"
									},
									"scope": 1857,
									"src": "9459:193:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "9771:102:12",
										"statements": [
											{
												"assignments": [
													null,
													1806,
													null,
													null,
													null
												],
												"declarations": [
													null,
													{
														"constant": false,
														"id": 1806,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "9791:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1816,
														"src": "9784:12:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1805,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "9784:6:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null
												],
												"id": 1810,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1807,
															"name": "i_ethPriceFeed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1247,
															"src": "9803:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
																"typeString": "contract AggregatorV3Interface"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9818:15:12",
														"memberName": "latestRoundData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 44,
														"src": "9803:30:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
															"typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9803:32:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
														"typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9781:54:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1813,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "9860:5:12",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9852:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1811,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9852:7:12",
															"typeDescriptions": {}
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9852:14:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1804,
												"id": 1815,
												"nodeType": "Return",
												"src": "9845:21:12"
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "9658:51:12",
										"text": "@notice Devuelve precio ETH/USD desde Chainlink"
									},
									"functionSelector": "d67b98a9",
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getEthPriceInUsd",
									"nameLocation": "9723:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9739:2:12"
									},
									"returnParameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "9762:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9762:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9761:9:12"
									},
									"scope": 1857,
									"src": "9714:159:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1837,
										"nodeType": "Block",
										"src": "10009:94:12",
										"statements": [
											{
												"assignments": [
													1826
												],
												"declarations": [
													{
														"constant": false,
														"id": 1826,
														"mutability": "mutable",
														"name": "price",
														"nameLocation": "10027:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1837,
														"src": "10019:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10019:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1829,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1827,
														"name": "getEthPriceInUsd",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "10035:16:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1828,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10035:18:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10019:34:12"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1830,
																	"name": "weiAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1820,
																	"src": "10071:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1831,
																	"name": "price",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1826,
																	"src": "10083:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10071:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1833,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "10070:19:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1834,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10092:4:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "10070:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1824,
												"id": 1836,
												"nodeType": "Return",
												"src": "10063:33:12"
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "9879:50:12",
										"text": "@notice Convierte wei a USD usando el oráculo"
									},
									"functionSelector": "27281025",
									"id": 1838,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "convertWeiToUsd",
									"nameLocation": "9943:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "weiAmount",
												"nameLocation": "9967:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "9959:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9959:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9958:19:12"
									},
									"returnParameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1838,
												"src": "10000:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10000:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9999:9:12"
									},
									"scope": 1857,
									"src": "9934:169:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1846,
										"nodeType": "Block",
										"src": "10234:40:12",
										"statements": [
											{
												"expression": {
													"id": 1844,
													"name": "s_depositCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1265,
													"src": "10251:16:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1845,
												"nodeType": "Return",
												"src": "10244:23:12"
											}
										]
									},
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "10109:62:12",
										"text": "@notice Devuelve el número total de depósitos realizados"
									},
									"functionSelector": "9363a141",
									"id": 1847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getDepositCount",
									"nameLocation": "10185:15:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10200:2:12"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1847,
												"src": "10225:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10225:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10224:9:12"
									},
									"scope": 1857,
									"src": "10176:98:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1855,
										"nodeType": "Block",
										"src": "10403:41:12",
										"statements": [
											{
												"expression": {
													"id": 1853,
													"name": "s_withdrawCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1267,
													"src": "10420:17:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1852,
												"id": 1854,
												"nodeType": "Return",
												"src": "10413:24:12"
											}
										]
									},
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "10280:59:12",
										"text": "@notice Devuelve el número total de retiros realizados"
									},
									"functionSelector": "47d04c71",
									"id": 1856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getWithdrawCount",
									"nameLocation": "10353:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10369:2:12"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "10394:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10394:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10393:9:12"
									},
									"scope": 1857,
									"src": "10344:100:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1858,
							"src": "549:9897:12",
							"usedErrors": [
								352,
								355,
								670,
								1295,
								1298,
								1301,
								1308,
								1315,
								1318,
								1321,
								1324
							],
							"usedEvents": [
								364,
								373,
								382,
								1277,
								1285,
								1292
							]
						}
					],
					"src": "32:10415:12"
				},
				"id": 12
			}
		}
	}
}